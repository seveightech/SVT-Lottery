{
	"id": "1b145134d99029b97de7aa01b20698bf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.23",
	"solcLongVersion": "0.8.23+commit.f704f362",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.23;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\";\r\n\r\ncontract SVTLottery is ConfirmedOwner {\r\n    uint256 private tenEighteen = 10**18;\r\n    uint256 private tenEight = 10**8;\r\n    uint256 private tenTen = 10**10;\r\n    uint8 private hundredPercent = 100;\r\n    string public dollarAmountOfSLT = \"1 SLT = $0.02 for Presale\";\r\n\r\n    address public SLTAddress = 0x647c3320516692c8366fde2b08bc6D304584c020;\r\n    IERC20 private SLT = IERC20(SLTAddress);    \r\n\r\n    address private priceFeedData = 0xd30e2101a97dcbAeBCBC04F14C3f624E67A35165; //0x639Fe6ab55C921f74e7fac1ee960C0B6293ba612\r\n    AggregatorV3Interface private priceFeed = AggregatorV3Interface(priceFeedData);\r\n\r\n    modifier sufficientTokensInContract(uint256 _amountRequired) {\r\n        require(SLT.balanceOf(address(this)) >= _amountRequired, \"Not enough SLT in contract\");\r\n        _;\r\n    }\r\n\r\n    constructor()\r\n    ConfirmedOwner(msg.sender)\r\n    {}\r\n\r\n    function checkETHPrice()\r\n        public\r\n        view\r\n        returns(uint256)\r\n    {\r\n        (,int256 price,,,) = priceFeed.latestRoundData();\r\n        uint256 ETHPrice = uint256(price) * tenTen;\r\n        return ETHPrice;\r\n    }\r\n\r\n    function convertEthToDollar(uint256 ethAmountInWei) \r\n    public \r\n    view \r\n    returns (uint256) \r\n    {\r\n        uint256 currentEthPrice = checkETHPrice();\r\n        uint256 dollarEquivalent = (ethAmountInWei * currentEthPrice) / 10**18;\r\n        return dollarEquivalent;\r\n    }\r\n\r\n    function convertDollarToETH(uint256 dollarAmount)\r\n        public\r\n        view\r\n        returns(uint256) \r\n    {\r\n        uint256 currentETHPrice = checkETHPrice();\r\n        uint256 ETHEquivalent = ((dollarAmount * tenEighteen) / (currentETHPrice / tenTen)) * tenEight;\r\n        return ETHEquivalent;\r\n    }\r\n\r\n    function withdraw() \r\n    public \r\n    onlyOwner\r\n    {\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    // Function: Allow participants to buy tokens for $1\r\n    function buyToken() \r\n    public \r\n    payable\r\n    returns(uint256 SLTtoSend, uint256 dollarEquiv)\r\n    {\r\n        dollarEquiv = convertEthToDollar(msg.value);\r\n        SLTtoSend = dollarEquiv / 50;\r\n        SLT.transfer(msg.sender, SLTtoSend);\r\n        return (SLTtoSend, dollarEquiv);\r\n    }\r\n    \r\n}"
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"./ConfirmedOwnerWithProposal.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwner is ConfirmedOwnerWithProposal {\n  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {}\n}\n"
			},
			"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../shared/interfaces/LinkTokenInterface.sol\";\nimport \"../interfaces/VRFV2WrapperInterface.sol\";\n\n/** *******************************************************************************\n * @notice Interface for contracts using VRF randomness through the VRF V2 wrapper\n * ********************************************************************************\n * @dev PURPOSE\n *\n * @dev Create VRF V2 requests without the need for subscription management. Rather than creating\n * @dev and funding a VRF V2 subscription, a user can use this wrapper to create one off requests,\n * @dev paying up front rather than at fulfillment.\n *\n * @dev Since the price is determined using the gas price of the request transaction rather than\n * @dev the fulfillment transaction, the wrapper charges an additional premium on callback gas\n * @dev usage, in addition to some extra overhead costs associated with the VRFV2Wrapper contract.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFV2WrapperConsumerBase. The consumer must be funded\n * @dev with enough LINK to make the request, otherwise requests will revert. To request randomness,\n * @dev call the 'requestRandomness' function with the desired VRF parameters. This function handles\n * @dev paying for the request based on the current pricing.\n *\n * @dev Consumers must implement the fullfillRandomWords function, which will be called during\n * @dev fulfillment with the randomness result.\n */\nabstract contract VRFV2WrapperConsumerBase {\n  LinkTokenInterface internal immutable LINK;\n  VRFV2WrapperInterface internal immutable VRF_V2_WRAPPER;\n\n  /**\n   * @param _link is the address of LinkToken\n   * @param _vrfV2Wrapper is the address of the VRFV2Wrapper contract\n   */\n  constructor(address _link, address _vrfV2Wrapper) {\n    LINK = LinkTokenInterface(_link);\n    VRF_V2_WRAPPER = VRFV2WrapperInterface(_vrfV2Wrapper);\n  }\n\n  /**\n   * @dev Requests randomness from the VRF V2 wrapper.\n   *\n   * @param _callbackGasLimit is the gas limit that should be used when calling the consumer's\n   *        fulfillRandomWords function.\n   * @param _requestConfirmations is the number of confirmations to wait before fulfilling the\n   *        request. A higher number of confirmations increases security by reducing the likelihood\n   *        that a chain re-org changes a published randomness outcome.\n   * @param _numWords is the number of random words to request.\n   *\n   * @return requestId is the VRF V2 request ID of the newly created randomness request.\n   */\n  function requestRandomness(\n    uint32 _callbackGasLimit,\n    uint16 _requestConfirmations,\n    uint32 _numWords\n  ) internal returns (uint256 requestId) {\n    LINK.transferAndCall(\n      address(VRF_V2_WRAPPER),\n      VRF_V2_WRAPPER.calculateRequestPrice(_callbackGasLimit),\n      abi.encode(_callbackGasLimit, _requestConfirmations, _numWords)\n    );\n    return VRF_V2_WRAPPER.lastRequestId();\n  }\n\n  /**\n   * @notice fulfillRandomWords handles the VRF V2 wrapper response. The consuming contract must\n   * @notice implement it.\n   *\n   * @param _requestId is the VRF V2 request ID.\n   * @param _randomWords is the randomness result.\n   */\n  function fulfillRandomWords(uint256 _requestId, uint256[] memory _randomWords) internal virtual;\n\n  function rawFulfillRandomWords(uint256 _requestId, uint256[] memory _randomWords) external {\n    require(msg.sender == address(VRF_V2_WRAPPER), \"only VRF V2 wrapper can fulfill\");\n    fulfillRandomWords(_requestId, _randomWords);\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFV2WrapperInterface {\n  /**\n   * @return the request ID of the most recent VRF V2 request made by this wrapper. This should only\n   * be relied option within the same transaction that the request was made.\n   */\n  function lastRequestId() external view returns (uint256);\n\n  /**\n   * @notice Calculates the price of a VRF request with the given callbackGasLimit at the current\n   * @notice block.\n   *\n   * @dev This function relies on the transaction gas price which is not automatically set during\n   * @dev simulation. To estimate the price at a specific gas price, use the estimatePrice function.\n   *\n   * @param _callbackGasLimit is the gas limit used to estimate the price.\n   */\n  function calculateRequestPrice(uint32 _callbackGasLimit) external view returns (uint256);\n\n  /**\n   * @notice Estimates the price of a VRF request with a specific gas limit and gas price.\n   *\n   * @dev This is a convenience function that can be called in simulation to better understand\n   * @dev pricing.\n   *\n   * @param _callbackGasLimit is the gas limit used to estimate the price.\n   * @param _requestGasPriceWei is the gas price in wei used for the estimation.\n   */\n  function estimateRequestPrice(uint32 _callbackGasLimit, uint256 _requestGasPriceWei) external view returns (uint256);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool success);\n\n  function transferFrom(address from, address to, uint256 value) external returns (bool success);\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/IOwnable.sol\";\n\n/**\n * @title The ConfirmedOwner contract\n * @notice A contract with helpers for basic contract ownership.\n */\ncontract ConfirmedOwnerWithProposal is IOwnable {\n  address private s_owner;\n  address private s_pendingOwner;\n\n  event OwnershipTransferRequested(address indexed from, address indexed to);\n  event OwnershipTransferred(address indexed from, address indexed to);\n\n  constructor(address newOwner, address pendingOwner) {\n    require(newOwner != address(0), \"Cannot set owner to zero\");\n\n    s_owner = newOwner;\n    if (pendingOwner != address(0)) {\n      _transferOwnership(pendingOwner);\n    }\n  }\n\n  /**\n   * @notice Allows an owner to begin transferring ownership to a new address,\n   * pending.\n   */\n  function transferOwnership(address to) public override onlyOwner {\n    _transferOwnership(to);\n  }\n\n  /**\n   * @notice Allows an ownership transfer to be completed by the recipient.\n   */\n  function acceptOwnership() external override {\n    require(msg.sender == s_pendingOwner, \"Must be proposed owner\");\n\n    address oldOwner = s_owner;\n    s_owner = msg.sender;\n    s_pendingOwner = address(0);\n\n    emit OwnershipTransferred(oldOwner, msg.sender);\n  }\n\n  /**\n   * @notice Get the current owner\n   */\n  function owner() public view override returns (address) {\n    return s_owner;\n  }\n\n  /**\n   * @notice validate, transfer ownership, and emit relevant events\n   */\n  function _transferOwnership(address to) private {\n    require(to != msg.sender, \"Cannot transfer to self\");\n\n    s_pendingOwner = to;\n\n    emit OwnershipTransferRequested(s_owner, to);\n  }\n\n  /**\n   * @notice validate access\n   */\n  function _validateOwnership() internal view {\n    require(msg.sender == s_owner, \"Only callable by owner\");\n  }\n\n  /**\n   * @notice Reverts if called by anyone other than the contract owner.\n   */\n  modifier onlyOwner() {\n    _validateOwnership();\n    _;\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface IOwnable {\n  function owner() external returns (address);\n\n  function transferOwnership(address recipient) external;\n\n  function acceptOwnership() external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol": {
				"VRFV2WrapperInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_callbackGasLimit",
									"type": "uint32"
								}
							],
							"name": "calculateRequestPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32",
									"name": "_callbackGasLimit",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "_requestGasPriceWei",
									"type": "uint256"
								}
							],
							"name": "estimateRequestPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRequestId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"calculateRequestPrice(uint32)": {
								"details": "This function relies on the transaction gas price which is not automatically set duringsimulation. To estimate the price at a specific gas price, use the estimatePrice function.",
								"params": {
									"_callbackGasLimit": "is the gas limit used to estimate the price."
								}
							},
							"estimateRequestPrice(uint32,uint256)": {
								"details": "This is a convenience function that can be called in simulation to better understandpricing.",
								"params": {
									"_callbackGasLimit": "is the gas limit used to estimate the price.",
									"_requestGasPriceWei": "is the gas price in wei used for the estimation."
								}
							},
							"lastRequestId()": {
								"returns": {
									"_0": "the request ID of the most recent VRF V2 request made by this wrapper. This should only be relied option within the same transaction that the request was made."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"calculateRequestPrice(uint32)": "4306d354",
							"estimateRequestPrice(uint32,uint256)": "7fb5d19d",
							"lastRequestId()": "fc2a88c3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"}],\"name\":\"calculateRequestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"_requestGasPriceWei\",\"type\":\"uint256\"}],\"name\":\"estimateRequestPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRequestId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateRequestPrice(uint32)\":{\"details\":\"This function relies on the transaction gas price which is not automatically set duringsimulation. To estimate the price at a specific gas price, use the estimatePrice function.\",\"params\":{\"_callbackGasLimit\":\"is the gas limit used to estimate the price.\"}},\"estimateRequestPrice(uint32,uint256)\":{\"details\":\"This is a convenience function that can be called in simulation to better understandpricing.\",\"params\":{\"_callbackGasLimit\":\"is the gas limit used to estimate the price.\",\"_requestGasPriceWei\":\"is the gas price in wei used for the estimation.\"}},\"lastRequestId()\":{\"returns\":{\"_0\":\"the request ID of the most recent VRF V2 request made by this wrapper. This should only be relied option within the same transaction that the request was made.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateRequestPrice(uint32)\":{\"notice\":\"Calculates the price of a VRF request with the given callbackGasLimit at the currentblock.\"},\"estimateRequestPrice(uint32,uint256)\":{\"notice\":\"Estimates the price of a VRF request with a specific gas limit and gas price.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol\":\"VRFV2WrapperInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol\":{\"keccak256\":\"0x44f6fa0cb1867a0bc137a195d4603bafa1cf74ecfbe69eb82a5dabeca8957738\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87ebb29c09566ab02ff62c3c29f60a08db52f032b5f2c5220cd111aad88002ce\",\"dweb:/ipfs/QmfScq3oJ6MkPXJh5JUrpz93bNMJ3ebtLcE3Q1H2DUNi93\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateRequestPrice(uint32)": {
								"notice": "Calculates the price of a VRF request with the given callbackGasLimit at the currentblock."
							},
							"estimateRequestPrice(uint32,uint256)": {
								"notice": "Estimates the price of a VRF request with a specific gas limit and gas price."
							}
						},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
				"ConfirmedOwner": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The ConfirmedOwner contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":212:353  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  mstore(0x40, 0x80)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":270:351  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":327:335  newOwner */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":345:346  0 */\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":557:558  0 */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":537:559  newOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":537:545  newOwner */\n  dup3\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":537:559  newOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":529:588  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_7\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_7:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":605:613  newOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":595:602  s_owner */\n  0x00\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":595:613  s_owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":647:648  0 */\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":623:649  pendingOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":623:635  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":623:649  pendingOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":619:698  if (pendingOwner != address(0)) {... */\n  tag_10\n  jumpi\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":659:691  _transferOwnership(pendingOwner) */\n  tag_11\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":678:690  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":659:677  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":659:691  _transferOwnership(pendingOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":619:698  if (pendingOwner != address(0)) {... */\ntag_10:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":471:702  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":270:351  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":212:353  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n  jump(tag_14)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\ntag_12:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1550:1560  msg.sender */\n  caller\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1546  to */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1588  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_16\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_17\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_16:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1612:1614  to */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1609  s_pendingOwner */\n  0x01\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1614  s_pendingOwner = to */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1662:1664  to */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1653:1660  s_owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_20:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_22:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_23:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_37\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_22\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_24:\n    /* \"#utility.yul\":641:665   */\n  tag_39\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_23\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_40\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_40:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_25:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_42\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_24\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_45\n  tag_20\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":932:1051   */\ntag_44:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_46\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_25\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1371   */\ntag_26:\n    /* \"#utility.yul\":1286:1297   */\n  0x00\n    /* \"#utility.yul\":1320:1326   */\n  dup3\n    /* \"#utility.yul\":1315:1318   */\n  dup3\n    /* \"#utility.yul\":1308:1327   */\n  mstore\n    /* \"#utility.yul\":1360:1364   */\n  0x20\n    /* \"#utility.yul\":1355:1358   */\n  dup3\n    /* \"#utility.yul\":1351:1365   */\n  add\n    /* \"#utility.yul\":1336:1365   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1371   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1377:1551   */\ntag_27:\n    /* \"#utility.yul\":1517:1543   */\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n    /* \"#utility.yul\":1513:1514   */\n  0x00\n    /* \"#utility.yul\":1505:1511   */\n  dup3\n    /* \"#utility.yul\":1501:1515   */\n  add\n    /* \"#utility.yul\":1494:1544   */\n  mstore\n    /* \"#utility.yul\":1377:1551   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1557:1923   */\ntag_28:\n    /* \"#utility.yul\":1699:1702   */\n  0x00\n    /* \"#utility.yul\":1720:1787   */\n  tag_50\n    /* \"#utility.yul\":1784:1786   */\n  0x18\n    /* \"#utility.yul\":1779:1782   */\n  dup4\n    /* \"#utility.yul\":1720:1787   */\n  tag_26\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1713:1787   */\n  swap2\n  pop\n    /* \"#utility.yul\":1796:1889   */\n  tag_51\n    /* \"#utility.yul\":1885:1888   */\n  dup3\n    /* \"#utility.yul\":1796:1889   */\n  tag_27\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1914:1916   */\n  0x20\n    /* \"#utility.yul\":1909:1912   */\n  dup3\n    /* \"#utility.yul\":1905:1917   */\n  add\n    /* \"#utility.yul\":1898:1917   */\n  swap1\n  pop\n    /* \"#utility.yul\":1557:1923   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1929:2348   */\ntag_9:\n    /* \"#utility.yul\":2095:2099   */\n  0x00\n    /* \"#utility.yul\":2133:2135   */\n  0x20\n    /* \"#utility.yul\":2122:2131   */\n  dup3\n    /* \"#utility.yul\":2118:2136   */\n  add\n    /* \"#utility.yul\":2110:2136   */\n  swap1\n  pop\n    /* \"#utility.yul\":2182:2191   */\n  dup2\n    /* \"#utility.yul\":2176:2180   */\n  dup2\n    /* \"#utility.yul\":2172:2192   */\n  sub\n    /* \"#utility.yul\":2168:2169   */\n  0x00\n    /* \"#utility.yul\":2157:2166   */\n  dup4\n    /* \"#utility.yul\":2153:2170   */\n  add\n    /* \"#utility.yul\":2146:2193   */\n  mstore\n    /* \"#utility.yul\":2210:2341   */\n  tag_53\n    /* \"#utility.yul\":2336:2340   */\n  dup2\n    /* \"#utility.yul\":2210:2341   */\n  tag_28\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2202:2341   */\n  swap1\n  pop\n    /* \"#utility.yul\":1929:2348   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2354:2527   */\ntag_29:\n    /* \"#utility.yul\":2494:2519   */\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n    /* \"#utility.yul\":2490:2491   */\n  0x00\n    /* \"#utility.yul\":2482:2488   */\n  dup3\n    /* \"#utility.yul\":2478:2492   */\n  add\n    /* \"#utility.yul\":2471:2520   */\n  mstore\n    /* \"#utility.yul\":2354:2527   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2533:2899   */\ntag_30:\n    /* \"#utility.yul\":2675:2678   */\n  0x00\n    /* \"#utility.yul\":2696:2763   */\n  tag_56\n    /* \"#utility.yul\":2760:2762   */\n  0x17\n    /* \"#utility.yul\":2755:2758   */\n  dup4\n    /* \"#utility.yul\":2696:2763   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2689:2763   */\n  swap2\n  pop\n    /* \"#utility.yul\":2772:2865   */\n  tag_57\n    /* \"#utility.yul\":2861:2864   */\n  dup3\n    /* \"#utility.yul\":2772:2865   */\n  tag_29\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2890:2892   */\n  0x20\n    /* \"#utility.yul\":2885:2888   */\n  dup3\n    /* \"#utility.yul\":2881:2893   */\n  add\n    /* \"#utility.yul\":2874:2893   */\n  swap1\n  pop\n    /* \"#utility.yul\":2533:2899   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2905:3324   */\ntag_18:\n    /* \"#utility.yul\":3071:3075   */\n  0x00\n    /* \"#utility.yul\":3109:3111   */\n  0x20\n    /* \"#utility.yul\":3098:3107   */\n  dup3\n    /* \"#utility.yul\":3094:3112   */\n  add\n    /* \"#utility.yul\":3086:3112   */\n  swap1\n  pop\n    /* \"#utility.yul\":3158:3167   */\n  dup2\n    /* \"#utility.yul\":3152:3156   */\n  dup2\n    /* \"#utility.yul\":3148:3168   */\n  sub\n    /* \"#utility.yul\":3144:3145   */\n  0x00\n    /* \"#utility.yul\":3133:3142   */\n  dup4\n    /* \"#utility.yul\":3129:3146   */\n  add\n    /* \"#utility.yul\":3122:3169   */\n  mstore\n    /* \"#utility.yul\":3186:3317   */\n  tag_59\n    /* \"#utility.yul\":3312:3316   */\n  dup2\n    /* \"#utility.yul\":3186:3317   */\n  tag_30\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":3178:3317   */\n  swap1\n  pop\n    /* \"#utility.yul\":2905:3324   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":212:353  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":212:353  contract ConfirmedOwner is ConfirmedOwnerWithProposal {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1001:1266  function acceptOwnership() external override {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1317:1398  function owner() public view override returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":811:909  function transferOwnership(address to) public override onlyOwner {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1001:1266  function acceptOwnership() external override {... */\n    tag_7:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1074:1088  s_pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1060:1088  msg.sender == s_pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1060:1070  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1060:1088  msg.sender == s_pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1052:1115  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1122:1138  address oldOwner */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1141:1148  s_owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1122:1148  address oldOwner = s_owner */\n      swap1\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1164:1174  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1154:1161  s_owner */\n      0x00\n      dup1\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1154:1174  s_owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1205:1206  0 */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1180:1194  s_pendingOwner */\n      0x01\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1180:1207  s_pendingOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1250:1260  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1219:1261  OwnershipTransferred(oldOwner, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1240:1248  oldOwner */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1219:1261  OwnershipTransferred(oldOwner, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1046:1266  {... */\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1001:1266  function acceptOwnership() external override {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1317:1398  function owner() public view override returns (address) {... */\n    tag_9:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1364:1371  address */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1386:1393  s_owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1379:1393  return s_owner */\n      swap1\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1317:1398  function owner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":811:909  function transferOwnership(address to) public override onlyOwner {... */\n    tag_15:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1961  _validateOwnership() */\n      tag_22\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1959  _validateOwnership */\n      tag_23\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1961  _validateOwnership() */\n      jump\t// in\n    tag_22:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":882:904  _transferOwnership(to) */\n      tag_25\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":901:903  to */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":882:900  _transferOwnership */\n      tag_26\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":882:904  _transferOwnership(to) */\n      jump\t// in\n    tag_25:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":811:909  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1715:1826  function _validateOwnership() internal view {... */\n    tag_23:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1787:1794  s_owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1773:1794  msg.sender == s_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1773:1783  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1773:1794  msg.sender == s_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1765:1821  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1715:1826  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\n    tag_26:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1550:1560  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1546  to */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1588  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1612:1614  to */\n      dup1\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1609  s_pendingOwner */\n      0x01\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1614  s_pendingOwner = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1662:1664  to */\n      dup1\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1653:1660  s_owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_36:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_53\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_35\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_37:\n        /* \"#utility.yul\":328:352   */\n      tag_55\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_36\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_57\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_37\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_39:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_41:\n        /* \"#utility.yul\":993:1017   */\n      tag_62\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_63:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_42:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_65\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_41\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_14:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_68\n      tag_39\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1269:1388   */\n    tag_67:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_69\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_42\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_43:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1875   */\n    tag_44:\n        /* \"#utility.yul\":1843:1867   */\n      0x4d7573742062652070726f706f736564206f776e657200000000000000000000\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1868   */\n      mstore\n        /* \"#utility.yul\":1703:1875   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1881:2247   */\n    tag_45:\n        /* \"#utility.yul\":2023:2026   */\n      0x00\n        /* \"#utility.yul\":2044:2111   */\n      tag_73\n        /* \"#utility.yul\":2108:2110   */\n      0x16\n        /* \"#utility.yul\":2103:2106   */\n      dup4\n        /* \"#utility.yul\":2044:2111   */\n      tag_43\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2037:2111   */\n      swap2\n      pop\n        /* \"#utility.yul\":2120:2213   */\n      tag_74\n        /* \"#utility.yul\":2209:2212   */\n      dup3\n        /* \"#utility.yul\":2120:2213   */\n      tag_44\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2238:2240   */\n      0x20\n        /* \"#utility.yul\":2233:2236   */\n      dup3\n        /* \"#utility.yul\":2229:2241   */\n      add\n        /* \"#utility.yul\":2222:2241   */\n      swap1\n      pop\n        /* \"#utility.yul\":1881:2247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2253:2672   */\n    tag_19:\n        /* \"#utility.yul\":2419:2423   */\n      0x00\n        /* \"#utility.yul\":2457:2459   */\n      0x20\n        /* \"#utility.yul\":2446:2455   */\n      dup3\n        /* \"#utility.yul\":2442:2460   */\n      add\n        /* \"#utility.yul\":2434:2460   */\n      swap1\n      pop\n        /* \"#utility.yul\":2506:2515   */\n      dup2\n        /* \"#utility.yul\":2500:2504   */\n      dup2\n        /* \"#utility.yul\":2496:2516   */\n      sub\n        /* \"#utility.yul\":2492:2493   */\n      0x00\n        /* \"#utility.yul\":2481:2490   */\n      dup4\n        /* \"#utility.yul\":2477:2494   */\n      add\n        /* \"#utility.yul\":2470:2517   */\n      mstore\n        /* \"#utility.yul\":2534:2665   */\n      tag_76\n        /* \"#utility.yul\":2660:2664   */\n      dup2\n        /* \"#utility.yul\":2534:2665   */\n      tag_45\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2526:2665   */\n      swap1\n      pop\n        /* \"#utility.yul\":2253:2672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2678:2850   */\n    tag_46:\n        /* \"#utility.yul\":2818:2842   */\n      0x4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000\n        /* \"#utility.yul\":2814:2815   */\n      0x00\n        /* \"#utility.yul\":2806:2812   */\n      dup3\n        /* \"#utility.yul\":2802:2816   */\n      add\n        /* \"#utility.yul\":2795:2843   */\n      mstore\n        /* \"#utility.yul\":2678:2850   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2856:3222   */\n    tag_47:\n        /* \"#utility.yul\":2998:3001   */\n      0x00\n        /* \"#utility.yul\":3019:3086   */\n      tag_79\n        /* \"#utility.yul\":3083:3085   */\n      0x16\n        /* \"#utility.yul\":3078:3081   */\n      dup4\n        /* \"#utility.yul\":3019:3086   */\n      tag_43\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3012:3086   */\n      swap2\n      pop\n        /* \"#utility.yul\":3095:3188   */\n      tag_80\n        /* \"#utility.yul\":3184:3187   */\n      dup3\n        /* \"#utility.yul\":3095:3188   */\n      tag_46\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3213:3215   */\n      0x20\n        /* \"#utility.yul\":3208:3211   */\n      dup3\n        /* \"#utility.yul\":3204:3216   */\n      add\n        /* \"#utility.yul\":3197:3216   */\n      swap1\n      pop\n        /* \"#utility.yul\":2856:3222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3228:3647   */\n    tag_30:\n        /* \"#utility.yul\":3394:3398   */\n      0x00\n        /* \"#utility.yul\":3432:3434   */\n      0x20\n        /* \"#utility.yul\":3421:3430   */\n      dup3\n        /* \"#utility.yul\":3417:3435   */\n      add\n        /* \"#utility.yul\":3409:3435   */\n      swap1\n      pop\n        /* \"#utility.yul\":3481:3490   */\n      dup2\n        /* \"#utility.yul\":3475:3479   */\n      dup2\n        /* \"#utility.yul\":3471:3491   */\n      sub\n        /* \"#utility.yul\":3467:3468   */\n      0x00\n        /* \"#utility.yul\":3456:3465   */\n      dup4\n        /* \"#utility.yul\":3452:3469   */\n      add\n        /* \"#utility.yul\":3445:3492   */\n      mstore\n        /* \"#utility.yul\":3509:3640   */\n      tag_82\n        /* \"#utility.yul\":3635:3639   */\n      dup2\n        /* \"#utility.yul\":3509:3640   */\n      tag_47\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3501:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3228:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3826   */\n    tag_48:\n        /* \"#utility.yul\":3793:3818   */\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n        /* \"#utility.yul\":3789:3790   */\n      0x00\n        /* \"#utility.yul\":3781:3787   */\n      dup3\n        /* \"#utility.yul\":3777:3791   */\n      add\n        /* \"#utility.yul\":3770:3819   */\n      mstore\n        /* \"#utility.yul\":3653:3826   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3832:4198   */\n    tag_49:\n        /* \"#utility.yul\":3974:3977   */\n      0x00\n        /* \"#utility.yul\":3995:4062   */\n      tag_85\n        /* \"#utility.yul\":4059:4061   */\n      0x17\n        /* \"#utility.yul\":4054:4057   */\n      dup4\n        /* \"#utility.yul\":3995:4062   */\n      tag_43\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3988:4062   */\n      swap2\n      pop\n        /* \"#utility.yul\":4071:4164   */\n      tag_86\n        /* \"#utility.yul\":4160:4163   */\n      dup3\n        /* \"#utility.yul\":4071:4164   */\n      tag_48\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4189:4191   */\n      0x20\n        /* \"#utility.yul\":4184:4187   */\n      dup3\n        /* \"#utility.yul\":4180:4192   */\n      add\n        /* \"#utility.yul\":4173:4192   */\n      swap1\n      pop\n        /* \"#utility.yul\":3832:4198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4204:4623   */\n    tag_34:\n        /* \"#utility.yul\":4370:4374   */\n      0x00\n        /* \"#utility.yul\":4408:4410   */\n      0x20\n        /* \"#utility.yul\":4397:4406   */\n      dup3\n        /* \"#utility.yul\":4393:4411   */\n      add\n        /* \"#utility.yul\":4385:4411   */\n      swap1\n      pop\n        /* \"#utility.yul\":4457:4466   */\n      dup2\n        /* \"#utility.yul\":4451:4455   */\n      dup2\n        /* \"#utility.yul\":4447:4467   */\n      sub\n        /* \"#utility.yul\":4443:4444   */\n      0x00\n        /* \"#utility.yul\":4432:4441   */\n      dup4\n        /* \"#utility.yul\":4428:4445   */\n      add\n        /* \"#utility.yul\":4421:4468   */\n      mstore\n        /* \"#utility.yul\":4485:4616   */\n      tag_88\n        /* \"#utility.yul\":4611:4615   */\n      dup2\n        /* \"#utility.yul\":4485:4616   */\n      tag_49\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":4477:4616   */\n      swap1\n      pop\n        /* \"#utility.yul\":4204:4623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d5263a8af7760825e08f9fd7eb469d354286ad72270804478220a792488dfc2364736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_91": {
									"entryPoint": null,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_232": {
									"entryPoint": 299,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 671,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 894,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 597,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3327:13",
										"nodeType": "YulBlock",
										"src": "0:3327:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "922:274:13",
													"nodeType": "YulBlock",
													"src": "922:274:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:13",
																"nodeType": "YulBlock",
																"src": "968:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:13"
																			},
																			"nativeSrc": "970:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:13"
																		},
																		"nativeSrc": "970:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:13"
																		},
																		"nativeSrc": "939:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:13",
																		"nodeType": "YulLiteral",
																		"src": "964:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:13"
																},
																"nativeSrc": "935:32:13",
																"nodeType": "YulFunctionCall",
																"src": "935:32:13"
															},
															"nativeSrc": "932:119:13",
															"nodeType": "YulIf",
															"src": "932:119:13"
														},
														{
															"nativeSrc": "1061:128:13",
															"nodeType": "YulBlock",
															"src": "1061:128:13",
															"statements": [
																{
																	"nativeSrc": "1076:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:13"
																				},
																				"nativeSrc": "1147:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:13"
																		},
																		"nativeSrc": "1115:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:13",
														"nodeType": "YulTypedName",
														"src": "892:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:13",
														"nodeType": "YulTypedName",
														"src": "903:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:13",
														"nodeType": "YulTypedName",
														"src": "915:6:13",
														"type": ""
													}
												],
												"src": "845:351:13"
											},
											{
												"body": {
													"nativeSrc": "1298:73:13",
													"nodeType": "YulBlock",
													"src": "1298:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1315:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1315:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1320:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1308:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1308:6:13"
																},
																"nativeSrc": "1308:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1308:19:13"
															},
															"nativeSrc": "1308:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1308:19:13"
														},
														{
															"nativeSrc": "1336:29:13",
															"nodeType": "YulAssignment",
															"src": "1336:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1355:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1360:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1360:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1351:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1351:3:13"
																},
																"nativeSrc": "1351:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1351:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1336:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1336:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1202:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1270:3:13",
														"nodeType": "YulTypedName",
														"src": "1270:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1275:6:13",
														"nodeType": "YulTypedName",
														"src": "1275:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1286:11:13",
														"nodeType": "YulTypedName",
														"src": "1286:11:13",
														"type": ""
													}
												],
												"src": "1202:169:13"
											},
											{
												"body": {
													"nativeSrc": "1483:68:13",
													"nodeType": "YulBlock",
													"src": "1483:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1505:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1505:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1513:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1513:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1501:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1501:3:13"
																		},
																		"nativeSrc": "1501:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1501:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
																		"kind": "string",
																		"nativeSrc": "1517:26:13",
																		"nodeType": "YulLiteral",
																		"src": "1517:26:13",
																		"type": "",
																		"value": "Cannot set owner to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1494:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1494:6:13"
																},
																"nativeSrc": "1494:50:13",
																"nodeType": "YulFunctionCall",
																"src": "1494:50:13"
															},
															"nativeSrc": "1494:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "1494:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
												"nativeSrc": "1377:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1475:6:13",
														"nodeType": "YulTypedName",
														"src": "1475:6:13",
														"type": ""
													}
												],
												"src": "1377:174:13"
											},
											{
												"body": {
													"nativeSrc": "1703:220:13",
													"nodeType": "YulBlock",
													"src": "1703:220:13",
													"statements": [
														{
															"nativeSrc": "1713:74:13",
															"nodeType": "YulAssignment",
															"src": "1713:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1779:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1779:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1784:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1784:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1720:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "1720:58:13"
																},
																"nativeSrc": "1720:67:13",
																"nodeType": "YulFunctionCall",
																"src": "1720:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1713:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1713:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1885:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1885:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																	"nativeSrc": "1796:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "1796:88:13"
																},
																"nativeSrc": "1796:93:13",
																"nodeType": "YulFunctionCall",
																"src": "1796:93:13"
															},
															"nativeSrc": "1796:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "1796:93:13"
														},
														{
															"nativeSrc": "1898:19:13",
															"nodeType": "YulAssignment",
															"src": "1898:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1909:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1909:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1914:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1914:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1905:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1905:3:13"
																},
																"nativeSrc": "1905:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1905:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1898:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1898:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1557:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1699:3:13",
														"nodeType": "YulTypedName",
														"src": "1699:3:13",
														"type": ""
													}
												],
												"src": "1557:366:13"
											},
											{
												"body": {
													"nativeSrc": "2100:248:13",
													"nodeType": "YulBlock",
													"src": "2100:248:13",
													"statements": [
														{
															"nativeSrc": "2110:26:13",
															"nodeType": "YulAssignment",
															"src": "2110:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2122:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2122:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2133:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2133:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:13"
																},
																"nativeSrc": "2118:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2118:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2110:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2110:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2157:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2157:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2168:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2168:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2153:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2153:3:13"
																		},
																		"nativeSrc": "2153:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2153:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2176:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2176:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2182:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2182:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2172:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:13"
																		},
																		"nativeSrc": "2172:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2172:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2146:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2146:6:13"
																},
																"nativeSrc": "2146:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2146:47:13"
															},
															"nativeSrc": "2146:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2146:47:13"
														},
														{
															"nativeSrc": "2202:139:13",
															"nodeType": "YulAssignment",
															"src": "2202:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2336:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2336:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2210:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "2210:124:13"
																},
																"nativeSrc": "2210:131:13",
																"nodeType": "YulFunctionCall",
																"src": "2210:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2202:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2202:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1929:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2080:9:13",
														"nodeType": "YulTypedName",
														"src": "2080:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2095:4:13",
														"nodeType": "YulTypedName",
														"src": "2095:4:13",
														"type": ""
													}
												],
												"src": "1929:419:13"
											},
											{
												"body": {
													"nativeSrc": "2460:67:13",
													"nodeType": "YulBlock",
													"src": "2460:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2482:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2482:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2490:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2490:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2478:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2478:3:13"
																		},
																		"nativeSrc": "2478:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2478:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "2494:25:13",
																		"nodeType": "YulLiteral",
																		"src": "2494:25:13",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2471:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2471:6:13"
																},
																"nativeSrc": "2471:49:13",
																"nodeType": "YulFunctionCall",
																"src": "2471:49:13"
															},
															"nativeSrc": "2471:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "2471:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
												"nativeSrc": "2354:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2452:6:13",
														"nodeType": "YulTypedName",
														"src": "2452:6:13",
														"type": ""
													}
												],
												"src": "2354:173:13"
											},
											{
												"body": {
													"nativeSrc": "2679:220:13",
													"nodeType": "YulBlock",
													"src": "2679:220:13",
													"statements": [
														{
															"nativeSrc": "2689:74:13",
															"nodeType": "YulAssignment",
															"src": "2689:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2755:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2755:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2760:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2760:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2696:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2696:58:13"
																},
																"nativeSrc": "2696:67:13",
																"nodeType": "YulFunctionCall",
																"src": "2696:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2689:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2689:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2861:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2861:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																	"nativeSrc": "2772:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "2772:88:13"
																},
																"nativeSrc": "2772:93:13",
																"nodeType": "YulFunctionCall",
																"src": "2772:93:13"
															},
															"nativeSrc": "2772:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "2772:93:13"
														},
														{
															"nativeSrc": "2874:19:13",
															"nodeType": "YulAssignment",
															"src": "2874:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2885:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2885:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2890:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2890:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2881:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2881:3:13"
																},
																"nativeSrc": "2881:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2881:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2874:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2874:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2533:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2667:3:13",
														"nodeType": "YulTypedName",
														"src": "2667:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2675:3:13",
														"nodeType": "YulTypedName",
														"src": "2675:3:13",
														"type": ""
													}
												],
												"src": "2533:366:13"
											},
											{
												"body": {
													"nativeSrc": "3076:248:13",
													"nodeType": "YulBlock",
													"src": "3076:248:13",
													"statements": [
														{
															"nativeSrc": "3086:26:13",
															"nodeType": "YulAssignment",
															"src": "3086:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3098:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3098:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3109:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3109:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3094:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3094:3:13"
																},
																"nativeSrc": "3094:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3094:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3086:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3086:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3133:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3133:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3144:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3144:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3129:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:13"
																		},
																		"nativeSrc": "3129:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3129:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3152:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3152:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3158:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3158:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3148:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3148:3:13"
																		},
																		"nativeSrc": "3148:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3148:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3122:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3122:6:13"
																},
																"nativeSrc": "3122:47:13",
																"nodeType": "YulFunctionCall",
																"src": "3122:47:13"
															},
															"nativeSrc": "3122:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "3122:47:13"
														},
														{
															"nativeSrc": "3178:139:13",
															"nodeType": "YulAssignment",
															"src": "3178:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3312:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3312:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3186:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "3186:124:13"
																},
																"nativeSrc": "3186:131:13",
																"nodeType": "YulFunctionCall",
																"src": "3186:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3178:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3178:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2905:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3056:9:13",
														"nodeType": "YulTypedName",
														"src": "3056:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3071:4:13",
														"nodeType": "YulTypedName",
														"src": "3071:4:13",
														"type": ""
													}
												],
												"src": "2905:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610a04380380610a04833981810160405281019061003191906102b3565b805f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036100a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009890610338565b60405180910390fd5b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610123576101228161012b60201b60201c565b5b5050506103be565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610199576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610190906103a0565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61028282610259565b9050919050565b61029281610278565b811461029c575f80fd5b50565b5f815190506102ad81610289565b92915050565b5f602082840312156102c8576102c7610255565b5b5f6102d58482850161029f565b91505092915050565b5f82825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000005f82015250565b5f6103226018836102de565b915061032d826102ee565b602082019050919050565b5f6020820190508181035f83015261034f81610316565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f61038a6017836102de565b915061039582610356565b602082019050919050565b5f6020820190508181035f8301526103b78161037e565b9050919050565b610639806103cb5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806379ba5097146100435780638da5cb5b1461004d578063f2fde38b1461006b575b5f80fd5b61004b610087565b005b610055610216565b6040516100629190610449565b60405180910390f35b61008560048036038101906100809190610490565b61023d565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010d90610515565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610245610251565b61024e816102e0565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d59061057d565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610345906105e5565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104338261040a565b9050919050565b61044381610429565b82525050565b5f60208201905061045c5f83018461043a565b92915050565b5f80fd5b61046f81610429565b8114610479575f80fd5b50565b5f8135905061048a81610466565b92915050565b5f602082840312156104a5576104a4610462565b5b5f6104b28482850161047c565b91505092915050565b5f82825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e6572000000000000000000005f82015250565b5f6104ff6016836104bb565b915061050a826104cb565b602082019050919050565b5f6020820190508181035f83015261052c816104f3565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000005f82015250565b5f6105676016836104bb565b915061057282610533565b602082019050919050565b5f6020820190508181035f8301526105948161055b565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f6105cf6017836104bb565b91506105da8261059b565b602082019050919050565b5f6020820190508181035f8301526105fc816105c3565b905091905056fea2646970667358221220d5263a8af7760825e08f9fd7eb469d354286ad72270804478220a792488dfc2364736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA04 CODESIZE SUB DUP1 PUSH2 0xA04 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2B3 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98 SWAP1 PUSH2 0x338 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x123 JUMPI PUSH2 0x122 DUP2 PUSH2 0x12B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH2 0x3BE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x199 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190 SWAP1 PUSH2 0x3A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x282 DUP3 PUSH2 0x259 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x278 JUMP JUMPDEST DUP2 EQ PUSH2 0x29C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AD DUP2 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8 JUMPI PUSH2 0x2C7 PUSH2 0x255 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D5 DUP5 DUP3 DUP6 ADD PUSH2 0x29F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x322 PUSH1 0x18 DUP4 PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP PUSH2 0x32D DUP3 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x34F DUP2 PUSH2 0x316 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x38A PUSH1 0x17 DUP4 PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP PUSH2 0x395 DUP3 PUSH2 0x356 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3B7 DUP2 PUSH2 0x37E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x639 DUP1 PUSH2 0x3CB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x23D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D SWAP1 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x2E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x443 DUP2 PUSH2 0x429 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH0 DUP4 ADD DUP5 PUSH2 0x43A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x46F DUP2 PUSH2 0x429 JUMP JUMPDEST DUP2 EQ PUSH2 0x479 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48A DUP2 PUSH2 0x466 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x462 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B2 DUP5 DUP3 DUP6 ADD PUSH2 0x47C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4FF PUSH1 0x16 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x50A DUP3 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x52C DUP2 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x567 PUSH1 0x16 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x572 DUP3 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x594 DUP2 PUSH2 0x55B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5CF PUSH1 0x17 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x5DA DUP3 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5FC DUP2 PUSH2 0x5C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x26 GASPRICE DUP11 0xF7 PUSH23 0x825E08F9FD7EB469D354286AD72270804478220A79248 DUP14 0xFC 0x23 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "212:141:2:-:0;;;270:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;327:8;345:1;557::3;537:22;;:8;:22;;;529:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;605:8;595:7;;:18;;;;;;;;;;;;;;;;;;647:1;623:26;;:12;:26;;;619:79;;659:32;678:12;659:18;;;:32;;:::i;:::-;619:79;471:231;;270:81:2;212:141;;1482:188:3;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:169::-;1286:11;1320:6;1315:3;1308:19;1360:4;1355:3;1351:14;1336:29;;1202:169;;;;:::o;1377:174::-;1517:26;1513:1;1505:6;1501:14;1494:50;1377:174;:::o;1557:366::-;1699:3;1720:67;1784:2;1779:3;1720:67;:::i;:::-;1713:74;;1796:93;1885:3;1796:93;:::i;:::-;1914:2;1909:3;1905:12;1898:19;;1557:366;;;:::o;1929:419::-;2095:4;2133:2;2122:9;2118:18;2110:26;;2182:9;2176:4;2172:20;2168:1;2157:9;2153:17;2146:47;2210:131;2336:4;2210:131;:::i;:::-;2202:139;;1929:419;;;:::o;2354:173::-;2494:25;2490:1;2482:6;2478:14;2471:49;2354:173;:::o;2533:366::-;2675:3;2696:67;2760:2;2755:3;2696:67;:::i;:::-;2689:74;;2772:93;2861:3;2772:93;:::i;:::-;2890:2;2885:3;2881:12;2874:19;;2533:366;;;:::o;2905:419::-;3071:4;3109:2;3098:9;3094:18;3086:26;;3158:9;3152:4;3148:20;3144:1;3133:9;3129:17;3122:47;3186:131;3312:4;3186:131;:::i;:::-;3178:139;;2905:419;;;:::o;212:141:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_232": {
									"entryPoint": 736,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOwnership_245": {
									"entryPoint": 593,
									"id": 245,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_198": {
									"entryPoint": 135,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_208": {
									"entryPoint": 534,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_162": {
									"entryPoint": 573,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4626:13",
										"nodeType": "YulBlock",
										"src": "0:4626:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:13",
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nativeSrc": "62:65:13",
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:13",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nativeSrc": "73:54:13",
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nativeSrc": "184:51:13",
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nativeSrc": "194:35:13",
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nativeSrc": "205:24:13",
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:13",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:13",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nativeSrc": "306:53:13",
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nativeSrc": "328:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nativeSrc": "316:37:13",
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nativeSrc": "316:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:13",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:13",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nativeSrc": "463:124:13",
													"nodeType": "YulBlock",
													"src": "463:124:13",
													"statements": [
														{
															"nativeSrc": "473:26:13",
															"nodeType": "YulAssignment",
															"src": "473:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:13",
																		"nodeType": "YulLiteral",
																		"src": "496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:13"
																},
																"nativeSrc": "481:18:13",
																"nodeType": "YulFunctionCall",
																"src": "481:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:13",
																				"nodeType": "YulLiteral",
																				"src": "577:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:13"
																		},
																		"nativeSrc": "562:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:13"
																},
																"nativeSrc": "509:71:13",
																"nodeType": "YulFunctionCall",
																"src": "509:71:13"
															},
															"nativeSrc": "509:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:13",
														"nodeType": "YulTypedName",
														"src": "435:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:13",
														"nodeType": "YulTypedName",
														"src": "447:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:13",
														"nodeType": "YulTypedName",
														"src": "458:4:13",
														"type": ""
													}
												],
												"src": "365:222:13"
											},
											{
												"body": {
													"nativeSrc": "633:35:13",
													"nodeType": "YulBlock",
													"src": "633:35:13",
													"statements": [
														{
															"nativeSrc": "643:19:13",
															"nodeType": "YulAssignment",
															"src": "643:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:13",
																		"nodeType": "YulLiteral",
																		"src": "659:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:13"
																},
																"nativeSrc": "653:9:13",
																"nodeType": "YulFunctionCall",
																"src": "653:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:13",
														"nodeType": "YulTypedName",
														"src": "626:6:13",
														"type": ""
													}
												],
												"src": "593:75:13"
											},
											{
												"body": {
													"nativeSrc": "763:28:13",
													"nodeType": "YulBlock",
													"src": "763:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:13",
																		"nodeType": "YulLiteral",
																		"src": "780:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:13",
																		"nodeType": "YulLiteral",
																		"src": "783:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:13"
																},
																"nativeSrc": "773:12:13",
																"nodeType": "YulFunctionCall",
																"src": "773:12:13"
															},
															"nativeSrc": "773:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:13"
											},
											{
												"body": {
													"nativeSrc": "886:28:13",
													"nodeType": "YulBlock",
													"src": "886:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:13",
																		"nodeType": "YulLiteral",
																		"src": "903:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:13",
																		"nodeType": "YulLiteral",
																		"src": "906:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:13"
																},
																"nativeSrc": "896:12:13",
																"nodeType": "YulFunctionCall",
																"src": "896:12:13"
															},
															"nativeSrc": "896:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:13"
											},
											{
												"body": {
													"nativeSrc": "963:79:13",
													"nodeType": "YulBlock",
													"src": "963:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:13",
																"nodeType": "YulBlock",
																"src": "1020:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:13"
																			},
																			"nativeSrc": "1022:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:13"
																		},
																		"nativeSrc": "1022:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:13"
																				},
																				"nativeSrc": "993:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:13"
																		},
																		"nativeSrc": "983:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:13"
																},
																"nativeSrc": "976:43:13",
																"nodeType": "YulFunctionCall",
																"src": "976:43:13"
															},
															"nativeSrc": "973:63:13",
															"nodeType": "YulIf",
															"src": "973:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:13",
														"nodeType": "YulTypedName",
														"src": "956:5:13",
														"type": ""
													}
												],
												"src": "920:122:13"
											},
											{
												"body": {
													"nativeSrc": "1100:87:13",
													"nodeType": "YulBlock",
													"src": "1100:87:13",
													"statements": [
														{
															"nativeSrc": "1110:29:13",
															"nodeType": "YulAssignment",
															"src": "1110:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:13"
																},
																"nativeSrc": "1119:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:13"
																},
																"nativeSrc": "1148:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:13"
															},
															"nativeSrc": "1148:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:13",
														"nodeType": "YulTypedName",
														"src": "1078:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:13",
														"nodeType": "YulTypedName",
														"src": "1086:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:13",
														"nodeType": "YulTypedName",
														"src": "1094:5:13",
														"type": ""
													}
												],
												"src": "1048:139:13"
											},
											{
												"body": {
													"nativeSrc": "1259:263:13",
													"nodeType": "YulBlock",
													"src": "1259:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1305:83:13",
																"nodeType": "YulBlock",
																"src": "1305:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1307:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:13"
																			},
																			"nativeSrc": "1307:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:13"
																		},
																		"nativeSrc": "1307:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1280:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:13"
																		},
																		"nativeSrc": "1276:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:13"
																},
																"nativeSrc": "1272:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1272:32:13"
															},
															"nativeSrc": "1269:119:13",
															"nodeType": "YulIf",
															"src": "1269:119:13"
														},
														{
															"nativeSrc": "1398:117:13",
															"nodeType": "YulBlock",
															"src": "1398:117:13",
															"statements": [
																{
																	"nativeSrc": "1413:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1427:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1417:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1442:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1442:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1477:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1488:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1473:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:13"
																				},
																				"nativeSrc": "1473:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1497:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1452:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:13"
																		},
																		"nativeSrc": "1452:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1442:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1193:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1229:9:13",
														"nodeType": "YulTypedName",
														"src": "1229:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1240:7:13",
														"nodeType": "YulTypedName",
														"src": "1240:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1252:6:13",
														"nodeType": "YulTypedName",
														"src": "1252:6:13",
														"type": ""
													}
												],
												"src": "1193:329:13"
											},
											{
												"body": {
													"nativeSrc": "1624:73:13",
													"nodeType": "YulBlock",
													"src": "1624:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1641:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1646:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:13"
																},
																"nativeSrc": "1634:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1634:19:13"
															},
															"nativeSrc": "1634:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:13"
														},
														{
															"nativeSrc": "1662:29:13",
															"nodeType": "YulAssignment",
															"src": "1662:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1681:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1686:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1677:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:13"
																},
																"nativeSrc": "1677:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1677:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1662:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1528:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1596:3:13",
														"nodeType": "YulTypedName",
														"src": "1596:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1601:6:13",
														"nodeType": "YulTypedName",
														"src": "1601:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1612:11:13",
														"nodeType": "YulTypedName",
														"src": "1612:11:13",
														"type": ""
													}
												],
												"src": "1528:169:13"
											},
											{
												"body": {
													"nativeSrc": "1809:66:13",
													"nodeType": "YulBlock",
													"src": "1809:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1831:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1839:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:13"
																		},
																		"nativeSrc": "1827:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:13"
																	},
																	{
																		"hexValue": "4d7573742062652070726f706f736564206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1843:24:13",
																		"nodeType": "YulLiteral",
																		"src": "1843:24:13",
																		"type": "",
																		"value": "Must be proposed owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1820:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:13"
																},
																"nativeSrc": "1820:48:13",
																"nodeType": "YulFunctionCall",
																"src": "1820:48:13"
															},
															"nativeSrc": "1820:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "1820:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
												"nativeSrc": "1703:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1801:6:13",
														"nodeType": "YulTypedName",
														"src": "1801:6:13",
														"type": ""
													}
												],
												"src": "1703:172:13"
											},
											{
												"body": {
													"nativeSrc": "2027:220:13",
													"nodeType": "YulBlock",
													"src": "2027:220:13",
													"statements": [
														{
															"nativeSrc": "2037:74:13",
															"nodeType": "YulAssignment",
															"src": "2037:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2103:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2103:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2108:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2108:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2044:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2044:58:13"
																},
																"nativeSrc": "2044:67:13",
																"nodeType": "YulFunctionCall",
																"src": "2044:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2037:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2037:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2209:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																	"nativeSrc": "2120:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "2120:88:13"
																},
																"nativeSrc": "2120:93:13",
																"nodeType": "YulFunctionCall",
																"src": "2120:93:13"
															},
															"nativeSrc": "2120:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "2120:93:13"
														},
														{
															"nativeSrc": "2222:19:13",
															"nodeType": "YulAssignment",
															"src": "2222:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2233:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2233:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2238:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2238:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2229:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2229:3:13"
																},
																"nativeSrc": "2229:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2229:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2222:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1881:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2015:3:13",
														"nodeType": "YulTypedName",
														"src": "2015:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2023:3:13",
														"nodeType": "YulTypedName",
														"src": "2023:3:13",
														"type": ""
													}
												],
												"src": "1881:366:13"
											},
											{
												"body": {
													"nativeSrc": "2424:248:13",
													"nodeType": "YulBlock",
													"src": "2424:248:13",
													"statements": [
														{
															"nativeSrc": "2434:26:13",
															"nodeType": "YulAssignment",
															"src": "2434:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2446:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2446:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2457:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2457:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2442:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2442:3:13"
																},
																"nativeSrc": "2442:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2442:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2434:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2434:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2481:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2481:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2492:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2492:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2477:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:13"
																		},
																		"nativeSrc": "2477:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2477:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2500:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2500:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2506:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2496:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:13"
																		},
																		"nativeSrc": "2496:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2470:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:13"
																},
																"nativeSrc": "2470:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2470:47:13"
															},
															"nativeSrc": "2470:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2470:47:13"
														},
														{
															"nativeSrc": "2526:139:13",
															"nodeType": "YulAssignment",
															"src": "2526:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2660:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2660:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2534:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "2534:124:13"
																},
																"nativeSrc": "2534:131:13",
																"nodeType": "YulFunctionCall",
																"src": "2534:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2526:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2526:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2253:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2404:9:13",
														"nodeType": "YulTypedName",
														"src": "2404:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2419:4:13",
														"nodeType": "YulTypedName",
														"src": "2419:4:13",
														"type": ""
													}
												],
												"src": "2253:419:13"
											},
											{
												"body": {
													"nativeSrc": "2784:66:13",
													"nodeType": "YulBlock",
													"src": "2784:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2806:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2814:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2802:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:13"
																		},
																		"nativeSrc": "2802:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2802:14:13"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
																		"kind": "string",
																		"nativeSrc": "2818:24:13",
																		"nodeType": "YulLiteral",
																		"src": "2818:24:13",
																		"type": "",
																		"value": "Only callable by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2795:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:13"
																},
																"nativeSrc": "2795:48:13",
																"nodeType": "YulFunctionCall",
																"src": "2795:48:13"
															},
															"nativeSrc": "2795:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "2795:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
												"nativeSrc": "2678:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2776:6:13",
														"nodeType": "YulTypedName",
														"src": "2776:6:13",
														"type": ""
													}
												],
												"src": "2678:172:13"
											},
											{
												"body": {
													"nativeSrc": "3002:220:13",
													"nodeType": "YulBlock",
													"src": "3002:220:13",
													"statements": [
														{
															"nativeSrc": "3012:74:13",
															"nodeType": "YulAssignment",
															"src": "3012:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3078:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3078:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3083:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3083:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3019:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "3019:58:13"
																},
																"nativeSrc": "3019:67:13",
																"nodeType": "YulFunctionCall",
																"src": "3019:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3012:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3012:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3184:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3184:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																	"nativeSrc": "3095:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "3095:88:13"
																},
																"nativeSrc": "3095:93:13",
																"nodeType": "YulFunctionCall",
																"src": "3095:93:13"
															},
															"nativeSrc": "3095:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "3095:93:13"
														},
														{
															"nativeSrc": "3197:19:13",
															"nodeType": "YulAssignment",
															"src": "3197:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3208:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3208:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3213:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3213:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3204:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3204:3:13"
																},
																"nativeSrc": "3204:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3204:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3197:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2856:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2990:3:13",
														"nodeType": "YulTypedName",
														"src": "2990:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2998:3:13",
														"nodeType": "YulTypedName",
														"src": "2998:3:13",
														"type": ""
													}
												],
												"src": "2856:366:13"
											},
											{
												"body": {
													"nativeSrc": "3399:248:13",
													"nodeType": "YulBlock",
													"src": "3399:248:13",
													"statements": [
														{
															"nativeSrc": "3409:26:13",
															"nodeType": "YulAssignment",
															"src": "3409:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3421:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3421:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3432:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3432:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3417:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3417:3:13"
																},
																"nativeSrc": "3417:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3417:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3409:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3409:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3456:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3456:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3467:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3467:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3452:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3452:3:13"
																		},
																		"nativeSrc": "3452:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3452:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3475:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3475:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3481:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3481:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3471:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3471:3:13"
																		},
																		"nativeSrc": "3471:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3471:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3445:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:13"
																},
																"nativeSrc": "3445:47:13",
																"nodeType": "YulFunctionCall",
																"src": "3445:47:13"
															},
															"nativeSrc": "3445:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "3445:47:13"
														},
														{
															"nativeSrc": "3501:139:13",
															"nodeType": "YulAssignment",
															"src": "3501:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3635:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3635:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3509:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "3509:124:13"
																},
																"nativeSrc": "3509:131:13",
																"nodeType": "YulFunctionCall",
																"src": "3509:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3501:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3501:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3228:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3379:9:13",
														"nodeType": "YulTypedName",
														"src": "3379:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3394:4:13",
														"nodeType": "YulTypedName",
														"src": "3394:4:13",
														"type": ""
													}
												],
												"src": "3228:419:13"
											},
											{
												"body": {
													"nativeSrc": "3759:67:13",
													"nodeType": "YulBlock",
													"src": "3759:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3781:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3781:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3789:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3789:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3777:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3777:3:13"
																		},
																		"nativeSrc": "3777:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3777:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "3793:25:13",
																		"nodeType": "YulLiteral",
																		"src": "3793:25:13",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3770:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3770:6:13"
																},
																"nativeSrc": "3770:49:13",
																"nodeType": "YulFunctionCall",
																"src": "3770:49:13"
															},
															"nativeSrc": "3770:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "3770:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
												"nativeSrc": "3653:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3751:6:13",
														"nodeType": "YulTypedName",
														"src": "3751:6:13",
														"type": ""
													}
												],
												"src": "3653:173:13"
											},
											{
												"body": {
													"nativeSrc": "3978:220:13",
													"nodeType": "YulBlock",
													"src": "3978:220:13",
													"statements": [
														{
															"nativeSrc": "3988:74:13",
															"nodeType": "YulAssignment",
															"src": "3988:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4054:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4054:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4059:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4059:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3995:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "3995:58:13"
																},
																"nativeSrc": "3995:67:13",
																"nodeType": "YulFunctionCall",
																"src": "3995:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3988:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3988:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4160:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																	"nativeSrc": "4071:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "4071:88:13"
																},
																"nativeSrc": "4071:93:13",
																"nodeType": "YulFunctionCall",
																"src": "4071:93:13"
															},
															"nativeSrc": "4071:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "4071:93:13"
														},
														{
															"nativeSrc": "4173:19:13",
															"nodeType": "YulAssignment",
															"src": "4173:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4184:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4184:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4189:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4189:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4180:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4180:3:13"
																},
																"nativeSrc": "4180:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4180:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4173:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4173:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3832:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3966:3:13",
														"nodeType": "YulTypedName",
														"src": "3966:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3974:3:13",
														"nodeType": "YulTypedName",
														"src": "3974:3:13",
														"type": ""
													}
												],
												"src": "3832:366:13"
											},
											{
												"body": {
													"nativeSrc": "4375:248:13",
													"nodeType": "YulBlock",
													"src": "4375:248:13",
													"statements": [
														{
															"nativeSrc": "4385:26:13",
															"nodeType": "YulAssignment",
															"src": "4385:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4397:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4397:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4408:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4408:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4393:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:13"
																},
																"nativeSrc": "4393:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4393:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4385:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4385:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4432:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4432:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4443:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4443:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4428:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:13"
																		},
																		"nativeSrc": "4428:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4428:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4451:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4451:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4457:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4457:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4447:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:13"
																		},
																		"nativeSrc": "4447:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4421:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:13"
																},
																"nativeSrc": "4421:47:13",
																"nodeType": "YulFunctionCall",
																"src": "4421:47:13"
															},
															"nativeSrc": "4421:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "4421:47:13"
														},
														{
															"nativeSrc": "4477:139:13",
															"nodeType": "YulAssignment",
															"src": "4477:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4611:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4611:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4485:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "4485:124:13"
																},
																"nativeSrc": "4485:131:13",
																"nodeType": "YulFunctionCall",
																"src": "4485:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4477:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4477:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4204:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4355:9:13",
														"nodeType": "YulTypedName",
														"src": "4355:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4370:4:13",
														"nodeType": "YulTypedName",
														"src": "4370:4:13",
														"type": ""
													}
												],
												"src": "4204:419:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806379ba5097146100435780638da5cb5b1461004d578063f2fde38b1461006b575b5f80fd5b61004b610087565b005b610055610216565b6040516100629190610449565b60405180910390f35b61008560048036038101906100809190610490565b61023d565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010d90610515565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610245610251565b61024e816102e0565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d59061057d565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610345906105e5565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104338261040a565b9050919050565b61044381610429565b82525050565b5f60208201905061045c5f83018461043a565b92915050565b5f80fd5b61046f81610429565b8114610479575f80fd5b50565b5f8135905061048a81610466565b92915050565b5f602082840312156104a5576104a4610462565b5b5f6104b28482850161047c565b91505092915050565b5f82825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e6572000000000000000000005f82015250565b5f6104ff6016836104bb565b915061050a826104cb565b602082019050919050565b5f6020820190508181035f83015261052c816104f3565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000005f82015250565b5f6105676016836104bb565b915061057282610533565b602082019050919050565b5f6020820190508181035f8301526105948161055b565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f6105cf6017836104bb565b91506105da8261059b565b602082019050919050565b5f6020820190508181035f8301526105fc816105c3565b905091905056fea2646970667358221220d5263a8af7760825e08f9fd7eb469d354286ad72270804478220a792488dfc2364736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x23D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D SWAP1 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x2E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x443 DUP2 PUSH2 0x429 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH0 DUP4 ADD DUP5 PUSH2 0x43A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x46F DUP2 PUSH2 0x429 JUMP JUMPDEST DUP2 EQ PUSH2 0x479 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48A DUP2 PUSH2 0x466 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x462 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B2 DUP5 DUP3 DUP6 ADD PUSH2 0x47C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4FF PUSH1 0x16 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x50A DUP3 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x52C DUP2 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x567 PUSH1 0x16 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x572 DUP3 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x594 DUP2 PUSH2 0x55B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5CF PUSH1 0x17 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x5DA DUP3 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5FC DUP2 PUSH2 0x5C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x26 GASPRICE DUP11 0xF7 PUSH23 0x825E08F9FD7EB469D354286AD72270804478220A79248 DUP14 0xFC 0x23 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "212:141:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:265:3;;;:::i;:::-;;1317:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1001:265;1074:14;;;;;;;;;;;1060:28;;:10;:28;;;1052:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1122:16;1141:7;;;;;;;;;;;1122:26;;1164:10;1154:7;;:20;;;;;;;;;;;;;;;;;;1205:1;1180:14;;:27;;;;;;;;;;;;;;;;;;1250:10;1219:42;;1240:8;1219:42;;;;;;;;;;;;1046:220;1001:265::o;1317:81::-;1364:7;1386;;;;;;;;;;;1379:14;;1317:81;:::o;811:98::-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;1715:111::-;1787:7;;;;;;;;;;1773:21;;:10;:21;;;1765:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:111::o;1482:188::-;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "318600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "54511",
								"owner()": "2515",
								"transferOwnership(address)": "30667"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 270,
									"end": 351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 270,
									"end": 351,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 270,
									"end": 351,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 327,
									"end": 335,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 345,
									"end": 346,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 557,
									"end": 558,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 537,
									"end": 559,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 559,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 537,
									"end": 545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 537,
									"end": 559,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 559,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 537,
									"end": 559,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 529,
									"end": 588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 605,
									"end": 613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 595,
									"end": 602,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 647,
									"end": 648,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 623,
									"end": 635,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 623,
									"end": 649,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 623,
									"end": 649,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 619,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 619,
									"end": 698,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 678,
									"end": 690,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 659,
									"end": 691,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 659,
									"end": 691,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 619,
									"end": 698,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 619,
									"end": 698,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 270,
									"end": 351,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1482,
									"end": 1670,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 1482,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1536,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "tag",
									"source": 3,
									"value": "17"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "tag",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1612,
									"end": 1614,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1609,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1595,
									"end": 1609,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1662,
									"end": 1664,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1670,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 13,
									"value": "46"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1286,
									"end": 1297,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1326,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1315,
									"end": 1318,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1308,
									"end": 1327,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1360,
									"end": 1364,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1355,
									"end": 1358,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1351,
									"end": 1365,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1336,
									"end": 1365,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1371,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1202,
									"end": 1371,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1551,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1377,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1517,
									"end": 1543,
									"name": "PUSH",
									"source": 13,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 1513,
									"end": 1514,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1505,
									"end": 1511,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1501,
									"end": 1515,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1494,
									"end": 1544,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1551,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1377,
									"end": 1551,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1557,
									"end": 1923,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1557,
									"end": 1923,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1699,
									"end": 1702,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1720,
									"end": 1787,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1784,
									"end": 1786,
									"name": "PUSH",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1779,
									"end": 1782,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1720,
									"end": 1787,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1720,
									"end": 1787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1720,
									"end": 1787,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1720,
									"end": 1787,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1713,
									"end": 1787,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1713,
									"end": 1787,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1796,
									"end": 1889,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1885,
									"end": 1888,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1796,
									"end": 1889,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1796,
									"end": 1889,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1796,
									"end": 1889,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1796,
									"end": 1889,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1914,
									"end": 1916,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1909,
									"end": 1912,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1905,
									"end": 1917,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1898,
									"end": 1917,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1898,
									"end": 1917,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1557,
									"end": 1923,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1557,
									"end": 1923,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1557,
									"end": 1923,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1557,
									"end": 1923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1929,
									"end": 2348,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1929,
									"end": 2348,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2095,
									"end": 2099,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2133,
									"end": 2135,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2122,
									"end": 2131,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2118,
									"end": 2136,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2110,
									"end": 2136,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2110,
									"end": 2136,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2182,
									"end": 2191,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2176,
									"end": 2180,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2172,
									"end": 2192,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2168,
									"end": 2169,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2157,
									"end": 2166,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2153,
									"end": 2170,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2146,
									"end": 2193,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2210,
									"end": 2341,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 2336,
									"end": 2340,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2210,
									"end": 2341,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2210,
									"end": 2341,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2210,
									"end": 2341,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 2210,
									"end": 2341,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2202,
									"end": 2341,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2202,
									"end": 2341,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1929,
									"end": 2348,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1929,
									"end": 2348,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1929,
									"end": 2348,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1929,
									"end": 2348,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2354,
									"end": 2527,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2354,
									"end": 2527,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2494,
									"end": 2519,
									"name": "PUSH",
									"source": 13,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 2490,
									"end": 2491,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2482,
									"end": 2488,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2478,
									"end": 2492,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2471,
									"end": 2520,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2354,
									"end": 2527,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2354,
									"end": 2527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2533,
									"end": 2899,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 2533,
									"end": 2899,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2675,
									"end": 2678,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2696,
									"end": 2763,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2760,
									"end": 2762,
									"name": "PUSH",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 2755,
									"end": 2758,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2696,
									"end": 2763,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2696,
									"end": 2763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2696,
									"end": 2763,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2696,
									"end": 2763,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2689,
									"end": 2763,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2689,
									"end": 2763,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2772,
									"end": 2865,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 2861,
									"end": 2864,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2772,
									"end": 2865,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 2772,
									"end": 2865,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2772,
									"end": 2865,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 2772,
									"end": 2865,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2890,
									"end": 2892,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2885,
									"end": 2888,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2881,
									"end": 2893,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2874,
									"end": 2893,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2874,
									"end": 2893,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2533,
									"end": 2899,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2533,
									"end": 2899,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2533,
									"end": 2899,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2533,
									"end": 2899,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2905,
									"end": 3324,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 2905,
									"end": 3324,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3075,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3109,
									"end": 3111,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3098,
									"end": 3107,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3094,
									"end": 3112,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3086,
									"end": 3112,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3086,
									"end": 3112,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3158,
									"end": 3167,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3152,
									"end": 3156,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3148,
									"end": 3168,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3144,
									"end": 3145,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3133,
									"end": 3142,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3129,
									"end": 3146,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3122,
									"end": 3169,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3186,
									"end": 3317,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 3312,
									"end": 3316,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3186,
									"end": 3317,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 3186,
									"end": 3317,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3186,
									"end": 3317,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 3186,
									"end": 3317,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3178,
									"end": 3317,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3178,
									"end": 3317,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2905,
									"end": 3324,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2905,
									"end": 3324,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2905,
									"end": 3324,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2905,
									"end": 3324,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 212,
									"end": 353,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 212,
									"end": 353,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 353,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5263a8af7760825e08f9fd7eb469d354286ad72270804478220a792488dfc2364736f6c63430008170033",
									".code": [
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "79BA5097"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 353,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 212,
											"end": 353,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1317,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1317,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 811,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 811,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1070,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1052,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1138,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1194,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1180,
											"end": 1194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1260,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1941,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 901,
											"end": 903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 882,
											"end": 900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 882,
											"end": 904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 882,
											"end": 904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 882,
											"end": 904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1715,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1765,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1670,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1482,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1560,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1536,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1703,
											"end": 1875,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1703,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "PUSH",
											"source": 13,
											"value": "4D7573742062652070726F706F736564206F776E657200000000000000000000"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1868,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1703,
											"end": 1875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1703,
											"end": 1875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 2103,
											"end": 2106,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2044,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2111,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2044,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2037,
											"end": 2111,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2037,
											"end": 2111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2120,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2213,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2120,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2238,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2419,
											"end": 2423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2455,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2515,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2504,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2496,
											"end": 2516,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2494,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2517,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2534,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2665,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2534,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2665,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2850,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 2678,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2818,
											"end": 2842,
											"name": "PUSH",
											"source": 13,
											"value": "4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000"
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2802,
											"end": 2816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2843,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 3078,
											"end": 3081,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3019,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3086,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3019,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3012,
											"end": 3086,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3012,
											"end": 3086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3184,
											"end": 3187,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3095,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3188,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3215,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3211,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3204,
											"end": 3216,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3434,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3435,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3435,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3491,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3465,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3509,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3635,
											"end": 3639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3509,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3509,
											"end": 3640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3509,
											"end": 3640,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3509,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3826,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3653,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3818,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3770,
											"end": 3819,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 3977,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4059,
											"end": 4061,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 4054,
											"end": 4057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3995,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3995,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3995,
											"end": 4062,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 3995,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4062,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4062,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4071,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4160,
											"end": 4163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4071,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 4071,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4071,
											"end": 4164,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4071,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4189,
											"end": 4191,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4184,
											"end": 4187,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4374,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4410,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4406,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 4467,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4611,
											"end": 4615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4485,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4616,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4485,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4616,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
								"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/presale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 102,
								"contract": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol:ConfirmedOwner",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address, pending."
							}
						},
						"notice": "A contract with helpers for basic contract ownership.",
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
				"ConfirmedOwnerWithProposal": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pendingOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "The ConfirmedOwner contract",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":206:1975  contract ConfirmedOwnerWithProposal is IOwnable {... */\n  mstore(0x40, 0x80)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":471:702  constructor(address newOwner, address pendingOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":557:558  0 */\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":537:559  newOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":537:545  newOwner */\n  dup3\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":537:559  newOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":529:588  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_7\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":605:613  newOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":595:602  s_owner */\n  0x00\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":595:613  s_owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":647:648  0 */\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":623:649  pendingOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":623:635  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":623:649  pendingOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":619:698  if (pendingOwner != address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":659:691  _transferOwnership(pendingOwner) */\n  tag_10\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":678:690  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":659:677  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":659:691  _transferOwnership(pendingOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":619:698  if (pendingOwner != address(0)) {... */\ntag_9:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":471:702  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":206:1975  contract ConfirmedOwnerWithProposal is IOwnable {... */\n  jump(tag_12)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\ntag_11:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1550:1560  msg.sender */\n  caller\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1546  to */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1588  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1612:1614  to */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1609  s_pendingOwner */\n  0x01\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1614  s_pendingOwner = to */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1662:1664  to */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1653:1660  s_owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_18:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_20:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_21:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_35\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_20\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_22:\n    /* \"#utility.yul\":641:665   */\n  tag_37\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_21\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_38:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_23:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_40\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_22\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_43\n  tag_18\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":949:1068   */\ntag_42:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_44\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_23\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_45\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_23\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1527   */\ntag_24:\n    /* \"#utility.yul\":1442:1453   */\n  0x00\n    /* \"#utility.yul\":1476:1482   */\n  dup3\n    /* \"#utility.yul\":1471:1474   */\n  dup3\n    /* \"#utility.yul\":1464:1483   */\n  mstore\n    /* \"#utility.yul\":1516:1520   */\n  0x20\n    /* \"#utility.yul\":1511:1514   */\n  dup3\n    /* \"#utility.yul\":1507:1521   */\n  add\n    /* \"#utility.yul\":1492:1521   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1527   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1533:1707   */\ntag_25:\n    /* \"#utility.yul\":1673:1699   */\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n    /* \"#utility.yul\":1669:1670   */\n  0x00\n    /* \"#utility.yul\":1661:1667   */\n  dup3\n    /* \"#utility.yul\":1657:1671   */\n  add\n    /* \"#utility.yul\":1650:1700   */\n  mstore\n    /* \"#utility.yul\":1533:1707   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1713:2079   */\ntag_26:\n    /* \"#utility.yul\":1855:1858   */\n  0x00\n    /* \"#utility.yul\":1876:1943   */\n  tag_49\n    /* \"#utility.yul\":1940:1942   */\n  0x18\n    /* \"#utility.yul\":1935:1938   */\n  dup4\n    /* \"#utility.yul\":1876:1943   */\n  tag_24\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1869:1943   */\n  swap2\n  pop\n    /* \"#utility.yul\":1952:2045   */\n  tag_50\n    /* \"#utility.yul\":2041:2044   */\n  dup3\n    /* \"#utility.yul\":1952:2045   */\n  tag_25\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2070:2072   */\n  0x20\n    /* \"#utility.yul\":2065:2068   */\n  dup3\n    /* \"#utility.yul\":2061:2073   */\n  add\n    /* \"#utility.yul\":2054:2073   */\n  swap1\n  pop\n    /* \"#utility.yul\":1713:2079   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2085:2504   */\ntag_8:\n    /* \"#utility.yul\":2251:2255   */\n  0x00\n    /* \"#utility.yul\":2289:2291   */\n  0x20\n    /* \"#utility.yul\":2278:2287   */\n  dup3\n    /* \"#utility.yul\":2274:2292   */\n  add\n    /* \"#utility.yul\":2266:2292   */\n  swap1\n  pop\n    /* \"#utility.yul\":2338:2347   */\n  dup2\n    /* \"#utility.yul\":2332:2336   */\n  dup2\n    /* \"#utility.yul\":2328:2348   */\n  sub\n    /* \"#utility.yul\":2324:2325   */\n  0x00\n    /* \"#utility.yul\":2313:2322   */\n  dup4\n    /* \"#utility.yul\":2309:2326   */\n  add\n    /* \"#utility.yul\":2302:2349   */\n  mstore\n    /* \"#utility.yul\":2366:2497   */\n  tag_52\n    /* \"#utility.yul\":2492:2496   */\n  dup2\n    /* \"#utility.yul\":2366:2497   */\n  tag_26\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2358:2497   */\n  swap1\n  pop\n    /* \"#utility.yul\":2085:2504   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2510:2683   */\ntag_27:\n    /* \"#utility.yul\":2650:2675   */\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n    /* \"#utility.yul\":2646:2647   */\n  0x00\n    /* \"#utility.yul\":2638:2644   */\n  dup3\n    /* \"#utility.yul\":2634:2648   */\n  add\n    /* \"#utility.yul\":2627:2676   */\n  mstore\n    /* \"#utility.yul\":2510:2683   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2689:3055   */\ntag_28:\n    /* \"#utility.yul\":2831:2834   */\n  0x00\n    /* \"#utility.yul\":2852:2919   */\n  tag_55\n    /* \"#utility.yul\":2916:2918   */\n  0x17\n    /* \"#utility.yul\":2911:2914   */\n  dup4\n    /* \"#utility.yul\":2852:2919   */\n  tag_24\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2845:2919   */\n  swap2\n  pop\n    /* \"#utility.yul\":2928:3021   */\n  tag_56\n    /* \"#utility.yul\":3017:3020   */\n  dup3\n    /* \"#utility.yul\":2928:3021   */\n  tag_27\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":3046:3048   */\n  0x20\n    /* \"#utility.yul\":3041:3044   */\n  dup3\n    /* \"#utility.yul\":3037:3049   */\n  add\n    /* \"#utility.yul\":3030:3049   */\n  swap1\n  pop\n    /* \"#utility.yul\":2689:3055   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3061:3480   */\ntag_16:\n    /* \"#utility.yul\":3227:3231   */\n  0x00\n    /* \"#utility.yul\":3265:3267   */\n  0x20\n    /* \"#utility.yul\":3254:3263   */\n  dup3\n    /* \"#utility.yul\":3250:3268   */\n  add\n    /* \"#utility.yul\":3242:3268   */\n  swap1\n  pop\n    /* \"#utility.yul\":3314:3323   */\n  dup2\n    /* \"#utility.yul\":3308:3312   */\n  dup2\n    /* \"#utility.yul\":3304:3324   */\n  sub\n    /* \"#utility.yul\":3300:3301   */\n  0x00\n    /* \"#utility.yul\":3289:3298   */\n  dup4\n    /* \"#utility.yul\":3285:3302   */\n  add\n    /* \"#utility.yul\":3278:3325   */\n  mstore\n    /* \"#utility.yul\":3342:3473   */\n  tag_58\n    /* \"#utility.yul\":3468:3472   */\n  dup2\n    /* \"#utility.yul\":3342:3473   */\n  tag_28\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":3334:3473   */\n  swap1\n  pop\n    /* \"#utility.yul\":3061:3480   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":206:1975  contract ConfirmedOwnerWithProposal is IOwnable {... */\ntag_12:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":206:1975  contract ConfirmedOwnerWithProposal is IOwnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1001:1266  function acceptOwnership() external override {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      stop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1317:1398  function owner() public view override returns (address) {... */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":811:909  function transferOwnership(address to) public override onlyOwner {... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1001:1266  function acceptOwnership() external override {... */\n    tag_7:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1074:1088  s_pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1060:1088  msg.sender == s_pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1060:1070  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1060:1088  msg.sender == s_pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1052:1115  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_17\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_18\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_17:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1122:1138  address oldOwner */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1141:1148  s_owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1122:1148  address oldOwner = s_owner */\n      swap1\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1164:1174  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1154:1161  s_owner */\n      0x00\n      dup1\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1154:1174  s_owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1205:1206  0 */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1180:1194  s_pendingOwner */\n      0x01\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1180:1207  s_pendingOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1250:1260  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1219:1261  OwnershipTransferred(oldOwner, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1240:1248  oldOwner */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1219:1261  OwnershipTransferred(oldOwner, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1046:1266  {... */\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1001:1266  function acceptOwnership() external override {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1317:1398  function owner() public view override returns (address) {... */\n    tag_9:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1364:1371  address */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1386:1393  s_owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1379:1393  return s_owner */\n      swap1\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1317:1398  function owner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":811:909  function transferOwnership(address to) public override onlyOwner {... */\n    tag_15:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1961  _validateOwnership() */\n      tag_22\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1959  _validateOwnership */\n      tag_23\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1961  _validateOwnership() */\n      jump\t// in\n    tag_22:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":882:904  _transferOwnership(to) */\n      tag_25\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":901:903  to */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":882:900  _transferOwnership */\n      tag_26\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":882:904  _transferOwnership(to) */\n      jump\t// in\n    tag_25:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":811:909  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1715:1826  function _validateOwnership() internal view {... */\n    tag_23:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1787:1794  s_owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1773:1794  msg.sender == s_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1773:1783  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1773:1794  msg.sender == s_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1765:1821  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1715:1826  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\n    tag_26:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1550:1560  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1546  to */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1588  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_32\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_33\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_32:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1612:1614  to */\n      dup1\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1609  s_pendingOwner */\n      0x01\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1614  s_pendingOwner = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1662:1664  to */\n      dup1\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1653:1660  s_owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_35:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_36:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_53\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_35\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_37:\n        /* \"#utility.yul\":328:352   */\n      tag_55\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_36\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_57\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_37\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_39:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_41:\n        /* \"#utility.yul\":993:1017   */\n      tag_62\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_36\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_63:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_42:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_65\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_41\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1522   */\n    tag_14:\n        /* \"#utility.yul\":1252:1258   */\n      0x00\n        /* \"#utility.yul\":1301:1303   */\n      0x20\n        /* \"#utility.yul\":1289:1298   */\n      dup3\n        /* \"#utility.yul\":1280:1287   */\n      dup5\n        /* \"#utility.yul\":1276:1299   */\n      sub\n        /* \"#utility.yul\":1272:1304   */\n      slt\n        /* \"#utility.yul\":1269:1388   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":1307:1386   */\n      tag_68\n      tag_39\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1269:1388   */\n    tag_67:\n        /* \"#utility.yul\":1427:1428   */\n      0x00\n        /* \"#utility.yul\":1452:1505   */\n      tag_69\n        /* \"#utility.yul\":1497:1504   */\n      dup5\n        /* \"#utility.yul\":1488:1494   */\n      dup3\n        /* \"#utility.yul\":1477:1486   */\n      dup6\n        /* \"#utility.yul\":1473:1495   */\n      add\n        /* \"#utility.yul\":1452:1505   */\n      tag_42\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1442:1505   */\n      swap2\n      pop\n        /* \"#utility.yul\":1398:1515   */\n      pop\n        /* \"#utility.yul\":1193:1522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1528:1697   */\n    tag_43:\n        /* \"#utility.yul\":1612:1623   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup3\n        /* \"#utility.yul\":1641:1644   */\n      dup3\n        /* \"#utility.yul\":1634:1653   */\n      mstore\n        /* \"#utility.yul\":1686:1690   */\n      0x20\n        /* \"#utility.yul\":1681:1684   */\n      dup3\n        /* \"#utility.yul\":1677:1691   */\n      add\n        /* \"#utility.yul\":1662:1691   */\n      swap1\n      pop\n        /* \"#utility.yul\":1528:1697   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1703:1875   */\n    tag_44:\n        /* \"#utility.yul\":1843:1867   */\n      0x4d7573742062652070726f706f736564206f776e657200000000000000000000\n        /* \"#utility.yul\":1839:1840   */\n      0x00\n        /* \"#utility.yul\":1831:1837   */\n      dup3\n        /* \"#utility.yul\":1827:1841   */\n      add\n        /* \"#utility.yul\":1820:1868   */\n      mstore\n        /* \"#utility.yul\":1703:1875   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1881:2247   */\n    tag_45:\n        /* \"#utility.yul\":2023:2026   */\n      0x00\n        /* \"#utility.yul\":2044:2111   */\n      tag_73\n        /* \"#utility.yul\":2108:2110   */\n      0x16\n        /* \"#utility.yul\":2103:2106   */\n      dup4\n        /* \"#utility.yul\":2044:2111   */\n      tag_43\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2037:2111   */\n      swap2\n      pop\n        /* \"#utility.yul\":2120:2213   */\n      tag_74\n        /* \"#utility.yul\":2209:2212   */\n      dup3\n        /* \"#utility.yul\":2120:2213   */\n      tag_44\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2238:2240   */\n      0x20\n        /* \"#utility.yul\":2233:2236   */\n      dup3\n        /* \"#utility.yul\":2229:2241   */\n      add\n        /* \"#utility.yul\":2222:2241   */\n      swap1\n      pop\n        /* \"#utility.yul\":1881:2247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2253:2672   */\n    tag_19:\n        /* \"#utility.yul\":2419:2423   */\n      0x00\n        /* \"#utility.yul\":2457:2459   */\n      0x20\n        /* \"#utility.yul\":2446:2455   */\n      dup3\n        /* \"#utility.yul\":2442:2460   */\n      add\n        /* \"#utility.yul\":2434:2460   */\n      swap1\n      pop\n        /* \"#utility.yul\":2506:2515   */\n      dup2\n        /* \"#utility.yul\":2500:2504   */\n      dup2\n        /* \"#utility.yul\":2496:2516   */\n      sub\n        /* \"#utility.yul\":2492:2493   */\n      0x00\n        /* \"#utility.yul\":2481:2490   */\n      dup4\n        /* \"#utility.yul\":2477:2494   */\n      add\n        /* \"#utility.yul\":2470:2517   */\n      mstore\n        /* \"#utility.yul\":2534:2665   */\n      tag_76\n        /* \"#utility.yul\":2660:2664   */\n      dup2\n        /* \"#utility.yul\":2534:2665   */\n      tag_45\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2526:2665   */\n      swap1\n      pop\n        /* \"#utility.yul\":2253:2672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2678:2850   */\n    tag_46:\n        /* \"#utility.yul\":2818:2842   */\n      0x4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000\n        /* \"#utility.yul\":2814:2815   */\n      0x00\n        /* \"#utility.yul\":2806:2812   */\n      dup3\n        /* \"#utility.yul\":2802:2816   */\n      add\n        /* \"#utility.yul\":2795:2843   */\n      mstore\n        /* \"#utility.yul\":2678:2850   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2856:3222   */\n    tag_47:\n        /* \"#utility.yul\":2998:3001   */\n      0x00\n        /* \"#utility.yul\":3019:3086   */\n      tag_79\n        /* \"#utility.yul\":3083:3085   */\n      0x16\n        /* \"#utility.yul\":3078:3081   */\n      dup4\n        /* \"#utility.yul\":3019:3086   */\n      tag_43\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":3012:3086   */\n      swap2\n      pop\n        /* \"#utility.yul\":3095:3188   */\n      tag_80\n        /* \"#utility.yul\":3184:3187   */\n      dup3\n        /* \"#utility.yul\":3095:3188   */\n      tag_46\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3213:3215   */\n      0x20\n        /* \"#utility.yul\":3208:3211   */\n      dup3\n        /* \"#utility.yul\":3204:3216   */\n      add\n        /* \"#utility.yul\":3197:3216   */\n      swap1\n      pop\n        /* \"#utility.yul\":2856:3222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3228:3647   */\n    tag_30:\n        /* \"#utility.yul\":3394:3398   */\n      0x00\n        /* \"#utility.yul\":3432:3434   */\n      0x20\n        /* \"#utility.yul\":3421:3430   */\n      dup3\n        /* \"#utility.yul\":3417:3435   */\n      add\n        /* \"#utility.yul\":3409:3435   */\n      swap1\n      pop\n        /* \"#utility.yul\":3481:3490   */\n      dup2\n        /* \"#utility.yul\":3475:3479   */\n      dup2\n        /* \"#utility.yul\":3471:3491   */\n      sub\n        /* \"#utility.yul\":3467:3468   */\n      0x00\n        /* \"#utility.yul\":3456:3465   */\n      dup4\n        /* \"#utility.yul\":3452:3469   */\n      add\n        /* \"#utility.yul\":3445:3492   */\n      mstore\n        /* \"#utility.yul\":3509:3640   */\n      tag_82\n        /* \"#utility.yul\":3635:3639   */\n      dup2\n        /* \"#utility.yul\":3509:3640   */\n      tag_47\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3501:3640   */\n      swap1\n      pop\n        /* \"#utility.yul\":3228:3647   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3653:3826   */\n    tag_48:\n        /* \"#utility.yul\":3793:3818   */\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n        /* \"#utility.yul\":3789:3790   */\n      0x00\n        /* \"#utility.yul\":3781:3787   */\n      dup3\n        /* \"#utility.yul\":3777:3791   */\n      add\n        /* \"#utility.yul\":3770:3819   */\n      mstore\n        /* \"#utility.yul\":3653:3826   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3832:4198   */\n    tag_49:\n        /* \"#utility.yul\":3974:3977   */\n      0x00\n        /* \"#utility.yul\":3995:4062   */\n      tag_85\n        /* \"#utility.yul\":4059:4061   */\n      0x17\n        /* \"#utility.yul\":4054:4057   */\n      dup4\n        /* \"#utility.yul\":3995:4062   */\n      tag_43\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":3988:4062   */\n      swap2\n      pop\n        /* \"#utility.yul\":4071:4164   */\n      tag_86\n        /* \"#utility.yul\":4160:4163   */\n      dup3\n        /* \"#utility.yul\":4071:4164   */\n      tag_48\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4189:4191   */\n      0x20\n        /* \"#utility.yul\":4184:4187   */\n      dup3\n        /* \"#utility.yul\":4180:4192   */\n      add\n        /* \"#utility.yul\":4173:4192   */\n      swap1\n      pop\n        /* \"#utility.yul\":3832:4198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4204:4623   */\n    tag_34:\n        /* \"#utility.yul\":4370:4374   */\n      0x00\n        /* \"#utility.yul\":4408:4410   */\n      0x20\n        /* \"#utility.yul\":4397:4406   */\n      dup3\n        /* \"#utility.yul\":4393:4411   */\n      add\n        /* \"#utility.yul\":4385:4411   */\n      swap1\n      pop\n        /* \"#utility.yul\":4457:4466   */\n      dup2\n        /* \"#utility.yul\":4451:4455   */\n      dup2\n        /* \"#utility.yul\":4447:4467   */\n      sub\n        /* \"#utility.yul\":4443:4444   */\n      0x00\n        /* \"#utility.yul\":4432:4441   */\n      dup4\n        /* \"#utility.yul\":4428:4445   */\n      add\n        /* \"#utility.yul\":4421:4468   */\n      mstore\n        /* \"#utility.yul\":4485:4616   */\n      tag_88\n        /* \"#utility.yul\":4611:4615   */\n      dup2\n        /* \"#utility.yul\":4485:4616   */\n      tag_49\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":4477:4616   */\n      swap1\n      pop\n        /* \"#utility.yul\":4204:4623   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a95363195e22450c2583da103b20d26eb4a07cbec232e2bfad7b1eee43d8399c64736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_232": {
									"entryPoint": 296,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 688,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2": {
									"entryPoint": 766,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3483:13",
										"nodeType": "YulBlock",
										"src": "0:3483:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "939:413:13",
													"nodeType": "YulBlock",
													"src": "939:413:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:13",
																"nodeType": "YulBlock",
																"src": "985:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:13"
																			},
																			"nativeSrc": "987:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:13"
																		},
																		"nativeSrc": "987:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:13"
																		},
																		"nativeSrc": "956:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:13",
																		"nodeType": "YulLiteral",
																		"src": "981:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:13"
																},
																"nativeSrc": "952:32:13",
																"nodeType": "YulFunctionCall",
																"src": "952:32:13"
															},
															"nativeSrc": "949:119:13",
															"nodeType": "YulIf",
															"src": "949:119:13"
														},
														{
															"nativeSrc": "1078:128:13",
															"nodeType": "YulBlock",
															"src": "1078:128:13",
															"statements": [
																{
																	"nativeSrc": "1093:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:13"
																				},
																				"nativeSrc": "1164:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:13"
																		},
																		"nativeSrc": "1132:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:13",
															"nodeType": "YulBlock",
															"src": "1216:129:13",
															"statements": [
																{
																	"nativeSrc": "1231:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:13"
																				},
																				"nativeSrc": "1303:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:13"
																		},
																		"nativeSrc": "1271:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:13",
														"nodeType": "YulTypedName",
														"src": "901:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:13",
														"nodeType": "YulTypedName",
														"src": "912:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:13",
														"nodeType": "YulTypedName",
														"src": "924:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:13",
														"nodeType": "YulTypedName",
														"src": "932:6:13",
														"type": ""
													}
												],
												"src": "845:507:13"
											},
											{
												"body": {
													"nativeSrc": "1454:73:13",
													"nodeType": "YulBlock",
													"src": "1454:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1471:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1471:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1476:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1476:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1464:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:13"
																},
																"nativeSrc": "1464:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1464:19:13"
															},
															"nativeSrc": "1464:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1464:19:13"
														},
														{
															"nativeSrc": "1492:29:13",
															"nodeType": "YulAssignment",
															"src": "1492:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1511:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1511:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1516:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1516:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1507:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1507:3:13"
																},
																"nativeSrc": "1507:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1507:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1492:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1492:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1358:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1426:3:13",
														"nodeType": "YulTypedName",
														"src": "1426:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1431:6:13",
														"nodeType": "YulTypedName",
														"src": "1431:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1442:11:13",
														"nodeType": "YulTypedName",
														"src": "1442:11:13",
														"type": ""
													}
												],
												"src": "1358:169:13"
											},
											{
												"body": {
													"nativeSrc": "1639:68:13",
													"nodeType": "YulBlock",
													"src": "1639:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1661:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1661:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1669:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1669:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1657:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1657:3:13"
																		},
																		"nativeSrc": "1657:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1657:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
																		"kind": "string",
																		"nativeSrc": "1673:26:13",
																		"nodeType": "YulLiteral",
																		"src": "1673:26:13",
																		"type": "",
																		"value": "Cannot set owner to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1650:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1650:6:13"
																},
																"nativeSrc": "1650:50:13",
																"nodeType": "YulFunctionCall",
																"src": "1650:50:13"
															},
															"nativeSrc": "1650:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "1650:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
												"nativeSrc": "1533:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1631:6:13",
														"nodeType": "YulTypedName",
														"src": "1631:6:13",
														"type": ""
													}
												],
												"src": "1533:174:13"
											},
											{
												"body": {
													"nativeSrc": "1859:220:13",
													"nodeType": "YulBlock",
													"src": "1859:220:13",
													"statements": [
														{
															"nativeSrc": "1869:74:13",
															"nodeType": "YulAssignment",
															"src": "1869:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1935:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1935:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1940:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1940:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1876:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "1876:58:13"
																},
																"nativeSrc": "1876:67:13",
																"nodeType": "YulFunctionCall",
																"src": "1876:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1869:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1869:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2041:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2041:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																	"nativeSrc": "1952:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "1952:88:13"
																},
																"nativeSrc": "1952:93:13",
																"nodeType": "YulFunctionCall",
																"src": "1952:93:13"
															},
															"nativeSrc": "1952:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "1952:93:13"
														},
														{
															"nativeSrc": "2054:19:13",
															"nodeType": "YulAssignment",
															"src": "2054:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2065:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2065:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2070:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2070:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2061:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:13"
																},
																"nativeSrc": "2061:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2061:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2054:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2054:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1713:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1855:3:13",
														"nodeType": "YulTypedName",
														"src": "1855:3:13",
														"type": ""
													}
												],
												"src": "1713:366:13"
											},
											{
												"body": {
													"nativeSrc": "2256:248:13",
													"nodeType": "YulBlock",
													"src": "2256:248:13",
													"statements": [
														{
															"nativeSrc": "2266:26:13",
															"nodeType": "YulAssignment",
															"src": "2266:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2278:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2278:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2289:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2289:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2274:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2274:3:13"
																},
																"nativeSrc": "2274:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2274:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2266:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2266:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2313:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2313:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2324:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2324:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2309:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2309:3:13"
																		},
																		"nativeSrc": "2309:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2309:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2332:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2332:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2338:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2338:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2328:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2328:3:13"
																		},
																		"nativeSrc": "2328:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2328:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2302:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2302:6:13"
																},
																"nativeSrc": "2302:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2302:47:13"
															},
															"nativeSrc": "2302:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2302:47:13"
														},
														{
															"nativeSrc": "2358:139:13",
															"nodeType": "YulAssignment",
															"src": "2358:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2492:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2492:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2366:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "2366:124:13"
																},
																"nativeSrc": "2366:131:13",
																"nodeType": "YulFunctionCall",
																"src": "2366:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2358:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2358:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2085:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2236:9:13",
														"nodeType": "YulTypedName",
														"src": "2236:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2251:4:13",
														"nodeType": "YulTypedName",
														"src": "2251:4:13",
														"type": ""
													}
												],
												"src": "2085:419:13"
											},
											{
												"body": {
													"nativeSrc": "2616:67:13",
													"nodeType": "YulBlock",
													"src": "2616:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2638:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2646:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:13"
																		},
																		"nativeSrc": "2634:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "2650:25:13",
																		"nodeType": "YulLiteral",
																		"src": "2650:25:13",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2627:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2627:6:13"
																},
																"nativeSrc": "2627:49:13",
																"nodeType": "YulFunctionCall",
																"src": "2627:49:13"
															},
															"nativeSrc": "2627:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "2627:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
												"nativeSrc": "2510:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2608:6:13",
														"nodeType": "YulTypedName",
														"src": "2608:6:13",
														"type": ""
													}
												],
												"src": "2510:173:13"
											},
											{
												"body": {
													"nativeSrc": "2835:220:13",
													"nodeType": "YulBlock",
													"src": "2835:220:13",
													"statements": [
														{
															"nativeSrc": "2845:74:13",
															"nodeType": "YulAssignment",
															"src": "2845:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2911:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2911:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2916:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2916:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2852:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2852:58:13"
																},
																"nativeSrc": "2852:67:13",
																"nodeType": "YulFunctionCall",
																"src": "2852:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2845:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2845:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3017:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3017:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																	"nativeSrc": "2928:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "2928:88:13"
																},
																"nativeSrc": "2928:93:13",
																"nodeType": "YulFunctionCall",
																"src": "2928:93:13"
															},
															"nativeSrc": "2928:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "2928:93:13"
														},
														{
															"nativeSrc": "3030:19:13",
															"nodeType": "YulAssignment",
															"src": "3030:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3041:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3041:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3046:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3046:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3037:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3037:3:13"
																},
																"nativeSrc": "3037:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3037:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3030:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3030:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2689:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2823:3:13",
														"nodeType": "YulTypedName",
														"src": "2823:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2831:3:13",
														"nodeType": "YulTypedName",
														"src": "2831:3:13",
														"type": ""
													}
												],
												"src": "2689:366:13"
											},
											{
												"body": {
													"nativeSrc": "3232:248:13",
													"nodeType": "YulBlock",
													"src": "3232:248:13",
													"statements": [
														{
															"nativeSrc": "3242:26:13",
															"nodeType": "YulAssignment",
															"src": "3242:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3254:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3254:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3265:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3265:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3250:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3250:3:13"
																},
																"nativeSrc": "3250:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3250:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3242:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3242:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3289:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3289:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3300:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3300:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3285:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3285:3:13"
																		},
																		"nativeSrc": "3285:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3285:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3308:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3308:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3314:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3314:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3304:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3304:3:13"
																		},
																		"nativeSrc": "3304:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3304:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3278:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3278:6:13"
																},
																"nativeSrc": "3278:47:13",
																"nodeType": "YulFunctionCall",
																"src": "3278:47:13"
															},
															"nativeSrc": "3278:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "3278:47:13"
														},
														{
															"nativeSrc": "3334:139:13",
															"nodeType": "YulAssignment",
															"src": "3334:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3468:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3468:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3342:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "3342:124:13"
																},
																"nativeSrc": "3342:131:13",
																"nodeType": "YulFunctionCall",
																"src": "3342:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3061:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3212:9:13",
														"nodeType": "YulTypedName",
														"src": "3212:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3227:4:13",
														"nodeType": "YulTypedName",
														"src": "3227:4:13",
														"type": ""
													}
												],
												"src": "3061:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051610a14380380610a14833981810160405281019061003191906102b0565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361009f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161009690610348565b60405180910390fd5b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610121576101208161012860201b60201c565b5b50506103ce565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610196576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018d906103b0565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61027f82610256565b9050919050565b61028f81610275565b8114610299575f80fd5b50565b5f815190506102aa81610286565b92915050565b5f80604083850312156102c6576102c5610252565b5b5f6102d38582860161029c565b92505060206102e48582860161029c565b9150509250929050565b5f82825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000005f82015250565b5f6103326018836102ee565b915061033d826102fe565b602082019050919050565b5f6020820190508181035f83015261035f81610326565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f61039a6017836102ee565b91506103a582610366565b602082019050919050565b5f6020820190508181035f8301526103c78161038e565b9050919050565b610639806103db5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806379ba5097146100435780638da5cb5b1461004d578063f2fde38b1461006b575b5f80fd5b61004b610087565b005b610055610216565b6040516100629190610449565b60405180910390f35b61008560048036038101906100809190610490565b61023d565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010d90610515565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610245610251565b61024e816102e0565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d59061057d565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610345906105e5565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104338261040a565b9050919050565b61044381610429565b82525050565b5f60208201905061045c5f83018461043a565b92915050565b5f80fd5b61046f81610429565b8114610479575f80fd5b50565b5f8135905061048a81610466565b92915050565b5f602082840312156104a5576104a4610462565b5b5f6104b28482850161047c565b91505092915050565b5f82825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e6572000000000000000000005f82015250565b5f6104ff6016836104bb565b915061050a826104cb565b602082019050919050565b5f6020820190508181035f83015261052c816104f3565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000005f82015250565b5f6105676016836104bb565b915061057282610533565b602082019050919050565b5f6020820190508181035f8301526105948161055b565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f6105cf6017836104bb565b91506105da8261059b565b602082019050919050565b5f6020820190508181035f8301526105fc816105c3565b905091905056fea2646970667358221220a95363195e22450c2583da103b20d26eb4a07cbec232e2bfad7b1eee43d8399c64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA14 CODESIZE SUB DUP1 PUSH2 0xA14 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x2B0 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96 SWAP1 PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x121 JUMPI PUSH2 0x120 DUP2 PUSH2 0x128 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP PUSH2 0x3CE JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x196 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18D SWAP1 PUSH2 0x3B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27F DUP3 PUSH2 0x256 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F DUP2 PUSH2 0x275 JUMP JUMPDEST DUP2 EQ PUSH2 0x299 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2AA DUP2 PUSH2 0x286 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x2C5 PUSH2 0x252 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D3 DUP6 DUP3 DUP7 ADD PUSH2 0x29C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E4 DUP6 DUP3 DUP7 ADD PUSH2 0x29C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x332 PUSH1 0x18 DUP4 PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP PUSH2 0x33D DUP3 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x35F DUP2 PUSH2 0x326 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x39A PUSH1 0x17 DUP4 PUSH2 0x2EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3A5 DUP3 PUSH2 0x366 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3C7 DUP2 PUSH2 0x38E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x639 DUP1 PUSH2 0x3DB PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x23D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D SWAP1 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x2E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x443 DUP2 PUSH2 0x429 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH0 DUP4 ADD DUP5 PUSH2 0x43A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x46F DUP2 PUSH2 0x429 JUMP JUMPDEST DUP2 EQ PUSH2 0x479 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48A DUP2 PUSH2 0x466 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x462 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B2 DUP5 DUP3 DUP6 ADD PUSH2 0x47C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4FF PUSH1 0x16 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x50A DUP3 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x52C DUP2 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x567 PUSH1 0x16 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x572 DUP3 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x594 DUP2 PUSH2 0x55B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5CF PUSH1 0x17 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x5DA DUP3 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5FC DUP2 PUSH2 0x5C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 MSTORE8 PUSH4 0x195E2245 0xC 0x25 DUP4 0xDA LT EXTCODESIZE KECCAK256 0xD2 PUSH15 0xB4A07CBEC232E2BFAD7B1EEE43D839 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "206:1769:3:-:0;;;471:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;557:1;537:22;;:8;:22;;;529:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;605:8;595:7;;:18;;;;;;;;;;;;;;;;;;647:1;623:26;;:12;:26;;;619:79;;659:32;678:12;659:18;;;:32;;:::i;:::-;619:79;471:231;;206:1769;;1482:188;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:169::-;1442:11;1476:6;1471:3;1464:19;1516:4;1511:3;1507:14;1492:29;;1358:169;;;;:::o;1533:174::-;1673:26;1669:1;1661:6;1657:14;1650:50;1533:174;:::o;1713:366::-;1855:3;1876:67;1940:2;1935:3;1876:67;:::i;:::-;1869:74;;1952:93;2041:3;1952:93;:::i;:::-;2070:2;2065:3;2061:12;2054:19;;1713:366;;;:::o;2085:419::-;2251:4;2289:2;2278:9;2274:18;2266:26;;2338:9;2332:4;2328:20;2324:1;2313:9;2309:17;2302:47;2366:131;2492:4;2366:131;:::i;:::-;2358:139;;2085:419;;;:::o;2510:173::-;2650:25;2646:1;2638:6;2634:14;2627:49;2510:173;:::o;2689:366::-;2831:3;2852:67;2916:2;2911:3;2852:67;:::i;:::-;2845:74;;2928:93;3017:3;2928:93;:::i;:::-;3046:2;3041:3;3037:12;3030:19;;2689:366;;;:::o;3061:419::-;3227:4;3265:2;3254:9;3250:18;3242:26;;3314:9;3308:4;3304:20;3300:1;3289:9;3285:17;3278:47;3342:131;3468:4;3342:131;:::i;:::-;3334:139;;3061:419;;;:::o;206:1769:3:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_transferOwnership_232": {
									"entryPoint": 736,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOwnership_245": {
									"entryPoint": 593,
									"id": 245,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_198": {
									"entryPoint": 135,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_208": {
									"entryPoint": 534,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_162": {
									"entryPoint": 573,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1267,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1097,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1301,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1211,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c": {
									"entryPoint": 1227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2": {
									"entryPoint": 1435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4626:13",
										"nodeType": "YulBlock",
										"src": "0:4626:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:13",
													"nodeType": "YulBlock",
													"src": "52:81:13",
													"statements": [
														{
															"nativeSrc": "62:65:13",
															"nodeType": "YulAssignment",
															"src": "62:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:13",
																		"nodeType": "YulLiteral",
																		"src": "84:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:13"
																},
																"nativeSrc": "73:54:13",
																"nodeType": "YulFunctionCall",
																"src": "73:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:126:13"
											},
											{
												"body": {
													"nativeSrc": "184:51:13",
													"nodeType": "YulBlock",
													"src": "184:51:13",
													"statements": [
														{
															"nativeSrc": "194:35:13",
															"nodeType": "YulAssignment",
															"src": "194:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:13"
																},
																"nativeSrc": "205:24:13",
																"nodeType": "YulFunctionCall",
																"src": "205:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:13",
														"nodeType": "YulTypedName",
														"src": "166:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:13",
														"nodeType": "YulTypedName",
														"src": "176:7:13",
														"type": ""
													}
												],
												"src": "139:96:13"
											},
											{
												"body": {
													"nativeSrc": "306:53:13",
													"nodeType": "YulBlock",
													"src": "306:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:13"
																		},
																		"nativeSrc": "328:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:13"
																},
																"nativeSrc": "316:37:13",
																"nodeType": "YulFunctionCall",
																"src": "316:37:13"
															},
															"nativeSrc": "316:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:13",
														"nodeType": "YulTypedName",
														"src": "294:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:13",
														"nodeType": "YulTypedName",
														"src": "301:3:13",
														"type": ""
													}
												],
												"src": "241:118:13"
											},
											{
												"body": {
													"nativeSrc": "463:124:13",
													"nodeType": "YulBlock",
													"src": "463:124:13",
													"statements": [
														{
															"nativeSrc": "473:26:13",
															"nodeType": "YulAssignment",
															"src": "473:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:13",
																		"nodeType": "YulLiteral",
																		"src": "496:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:13"
																},
																"nativeSrc": "481:18:13",
																"nodeType": "YulFunctionCall",
																"src": "481:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:13",
																				"nodeType": "YulLiteral",
																				"src": "577:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:13"
																		},
																		"nativeSrc": "562:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:13"
																},
																"nativeSrc": "509:71:13",
																"nodeType": "YulFunctionCall",
																"src": "509:71:13"
															},
															"nativeSrc": "509:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:13",
														"nodeType": "YulTypedName",
														"src": "435:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:13",
														"nodeType": "YulTypedName",
														"src": "447:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:13",
														"nodeType": "YulTypedName",
														"src": "458:4:13",
														"type": ""
													}
												],
												"src": "365:222:13"
											},
											{
												"body": {
													"nativeSrc": "633:35:13",
													"nodeType": "YulBlock",
													"src": "633:35:13",
													"statements": [
														{
															"nativeSrc": "643:19:13",
															"nodeType": "YulAssignment",
															"src": "643:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:13",
																		"nodeType": "YulLiteral",
																		"src": "659:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:13"
																},
																"nativeSrc": "653:9:13",
																"nodeType": "YulFunctionCall",
																"src": "653:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:13",
														"nodeType": "YulTypedName",
														"src": "626:6:13",
														"type": ""
													}
												],
												"src": "593:75:13"
											},
											{
												"body": {
													"nativeSrc": "763:28:13",
													"nodeType": "YulBlock",
													"src": "763:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:13",
																		"nodeType": "YulLiteral",
																		"src": "780:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:13",
																		"nodeType": "YulLiteral",
																		"src": "783:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:13"
																},
																"nativeSrc": "773:12:13",
																"nodeType": "YulFunctionCall",
																"src": "773:12:13"
															},
															"nativeSrc": "773:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:13"
											},
											{
												"body": {
													"nativeSrc": "886:28:13",
													"nodeType": "YulBlock",
													"src": "886:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:13",
																		"nodeType": "YulLiteral",
																		"src": "903:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:13",
																		"nodeType": "YulLiteral",
																		"src": "906:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:13"
																},
																"nativeSrc": "896:12:13",
																"nodeType": "YulFunctionCall",
																"src": "896:12:13"
															},
															"nativeSrc": "896:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:13"
											},
											{
												"body": {
													"nativeSrc": "963:79:13",
													"nodeType": "YulBlock",
													"src": "963:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:13",
																"nodeType": "YulBlock",
																"src": "1020:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:13"
																			},
																			"nativeSrc": "1022:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:13"
																		},
																		"nativeSrc": "1022:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:13"
																				},
																				"nativeSrc": "993:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:13"
																		},
																		"nativeSrc": "983:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:13"
																},
																"nativeSrc": "976:43:13",
																"nodeType": "YulFunctionCall",
																"src": "976:43:13"
															},
															"nativeSrc": "973:63:13",
															"nodeType": "YulIf",
															"src": "973:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:13",
														"nodeType": "YulTypedName",
														"src": "956:5:13",
														"type": ""
													}
												],
												"src": "920:122:13"
											},
											{
												"body": {
													"nativeSrc": "1100:87:13",
													"nodeType": "YulBlock",
													"src": "1100:87:13",
													"statements": [
														{
															"nativeSrc": "1110:29:13",
															"nodeType": "YulAssignment",
															"src": "1110:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:13"
																},
																"nativeSrc": "1119:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:13"
																},
																"nativeSrc": "1148:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:13"
															},
															"nativeSrc": "1148:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:13",
														"nodeType": "YulTypedName",
														"src": "1078:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:13",
														"nodeType": "YulTypedName",
														"src": "1086:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:13",
														"nodeType": "YulTypedName",
														"src": "1094:5:13",
														"type": ""
													}
												],
												"src": "1048:139:13"
											},
											{
												"body": {
													"nativeSrc": "1259:263:13",
													"nodeType": "YulBlock",
													"src": "1259:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1305:83:13",
																"nodeType": "YulBlock",
																"src": "1305:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1307:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1307:77:13"
																			},
																			"nativeSrc": "1307:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1307:79:13"
																		},
																		"nativeSrc": "1307:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1307:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1280:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1280:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1289:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1289:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1276:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1276:3:13"
																		},
																		"nativeSrc": "1276:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1276:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1301:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:13"
																},
																"nativeSrc": "1272:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1272:32:13"
															},
															"nativeSrc": "1269:119:13",
															"nodeType": "YulIf",
															"src": "1269:119:13"
														},
														{
															"nativeSrc": "1398:117:13",
															"nodeType": "YulBlock",
															"src": "1398:117:13",
															"statements": [
																{
																	"nativeSrc": "1413:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1413:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1427:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1417:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1417:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1442:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1442:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1477:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1477:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1488:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1488:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1473:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1473:3:13"
																				},
																				"nativeSrc": "1473:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1473:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1497:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1497:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1452:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1452:20:13"
																		},
																		"nativeSrc": "1452:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1452:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1442:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1442:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1193:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1229:9:13",
														"nodeType": "YulTypedName",
														"src": "1229:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1240:7:13",
														"nodeType": "YulTypedName",
														"src": "1240:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1252:6:13",
														"nodeType": "YulTypedName",
														"src": "1252:6:13",
														"type": ""
													}
												],
												"src": "1193:329:13"
											},
											{
												"body": {
													"nativeSrc": "1624:73:13",
													"nodeType": "YulBlock",
													"src": "1624:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1641:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1641:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1646:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1646:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1634:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1634:6:13"
																},
																"nativeSrc": "1634:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1634:19:13"
															},
															"nativeSrc": "1634:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1634:19:13"
														},
														{
															"nativeSrc": "1662:29:13",
															"nodeType": "YulAssignment",
															"src": "1662:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1681:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1681:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1686:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1686:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1677:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1677:3:13"
																},
																"nativeSrc": "1677:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1677:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1662:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1662:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1528:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1596:3:13",
														"nodeType": "YulTypedName",
														"src": "1596:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1601:6:13",
														"nodeType": "YulTypedName",
														"src": "1601:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1612:11:13",
														"nodeType": "YulTypedName",
														"src": "1612:11:13",
														"type": ""
													}
												],
												"src": "1528:169:13"
											},
											{
												"body": {
													"nativeSrc": "1809:66:13",
													"nodeType": "YulBlock",
													"src": "1809:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "1831:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1839:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1839:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1827:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1827:3:13"
																		},
																		"nativeSrc": "1827:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1827:14:13"
																	},
																	{
																		"hexValue": "4d7573742062652070726f706f736564206f776e6572",
																		"kind": "string",
																		"nativeSrc": "1843:24:13",
																		"nodeType": "YulLiteral",
																		"src": "1843:24:13",
																		"type": "",
																		"value": "Must be proposed owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1820:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1820:6:13"
																},
																"nativeSrc": "1820:48:13",
																"nodeType": "YulFunctionCall",
																"src": "1820:48:13"
															},
															"nativeSrc": "1820:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "1820:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
												"nativeSrc": "1703:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "1801:6:13",
														"nodeType": "YulTypedName",
														"src": "1801:6:13",
														"type": ""
													}
												],
												"src": "1703:172:13"
											},
											{
												"body": {
													"nativeSrc": "2027:220:13",
													"nodeType": "YulBlock",
													"src": "2027:220:13",
													"statements": [
														{
															"nativeSrc": "2037:74:13",
															"nodeType": "YulAssignment",
															"src": "2037:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2103:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2103:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2108:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2108:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2044:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2044:58:13"
																},
																"nativeSrc": "2044:67:13",
																"nodeType": "YulFunctionCall",
																"src": "2044:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2037:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2037:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2209:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																	"nativeSrc": "2120:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "2120:88:13"
																},
																"nativeSrc": "2120:93:13",
																"nodeType": "YulFunctionCall",
																"src": "2120:93:13"
															},
															"nativeSrc": "2120:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "2120:93:13"
														},
														{
															"nativeSrc": "2222:19:13",
															"nodeType": "YulAssignment",
															"src": "2222:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2233:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2233:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2238:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2238:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2229:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2229:3:13"
																},
																"nativeSrc": "2229:12:13",
																"nodeType": "YulFunctionCall",
																"src": "2229:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2222:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2222:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "1881:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2015:3:13",
														"nodeType": "YulTypedName",
														"src": "2015:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2023:3:13",
														"nodeType": "YulTypedName",
														"src": "2023:3:13",
														"type": ""
													}
												],
												"src": "1881:366:13"
											},
											{
												"body": {
													"nativeSrc": "2424:248:13",
													"nodeType": "YulBlock",
													"src": "2424:248:13",
													"statements": [
														{
															"nativeSrc": "2434:26:13",
															"nodeType": "YulAssignment",
															"src": "2434:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2446:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2446:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2457:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2457:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2442:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2442:3:13"
																},
																"nativeSrc": "2442:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2442:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2434:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2434:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2481:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2481:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2492:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2492:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2477:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2477:3:13"
																		},
																		"nativeSrc": "2477:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2477:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2500:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2500:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2506:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2506:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2496:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:13"
																		},
																		"nativeSrc": "2496:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2496:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2470:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2470:6:13"
																},
																"nativeSrc": "2470:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2470:47:13"
															},
															"nativeSrc": "2470:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2470:47:13"
														},
														{
															"nativeSrc": "2526:139:13",
															"nodeType": "YulAssignment",
															"src": "2526:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2660:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2660:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2534:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "2534:124:13"
																},
																"nativeSrc": "2534:131:13",
																"nodeType": "YulFunctionCall",
																"src": "2534:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2526:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2526:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2253:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2404:9:13",
														"nodeType": "YulTypedName",
														"src": "2404:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2419:4:13",
														"nodeType": "YulTypedName",
														"src": "2419:4:13",
														"type": ""
													}
												],
												"src": "2253:419:13"
											},
											{
												"body": {
													"nativeSrc": "2784:66:13",
													"nodeType": "YulBlock",
													"src": "2784:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2806:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2806:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2814:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2814:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2802:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2802:3:13"
																		},
																		"nativeSrc": "2802:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2802:14:13"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
																		"kind": "string",
																		"nativeSrc": "2818:24:13",
																		"nodeType": "YulLiteral",
																		"src": "2818:24:13",
																		"type": "",
																		"value": "Only callable by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2795:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:13"
																},
																"nativeSrc": "2795:48:13",
																"nodeType": "YulFunctionCall",
																"src": "2795:48:13"
															},
															"nativeSrc": "2795:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "2795:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
												"nativeSrc": "2678:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2776:6:13",
														"nodeType": "YulTypedName",
														"src": "2776:6:13",
														"type": ""
													}
												],
												"src": "2678:172:13"
											},
											{
												"body": {
													"nativeSrc": "3002:220:13",
													"nodeType": "YulBlock",
													"src": "3002:220:13",
													"statements": [
														{
															"nativeSrc": "3012:74:13",
															"nodeType": "YulAssignment",
															"src": "3012:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3078:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3078:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3083:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3083:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3019:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "3019:58:13"
																},
																"nativeSrc": "3019:67:13",
																"nodeType": "YulFunctionCall",
																"src": "3019:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3012:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3012:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3184:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3184:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																	"nativeSrc": "3095:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "3095:88:13"
																},
																"nativeSrc": "3095:93:13",
																"nodeType": "YulFunctionCall",
																"src": "3095:93:13"
															},
															"nativeSrc": "3095:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "3095:93:13"
														},
														{
															"nativeSrc": "3197:19:13",
															"nodeType": "YulAssignment",
															"src": "3197:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3208:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3208:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3213:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3213:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3204:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3204:3:13"
																},
																"nativeSrc": "3204:12:13",
																"nodeType": "YulFunctionCall",
																"src": "3204:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3197:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2856:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2990:3:13",
														"nodeType": "YulTypedName",
														"src": "2990:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2998:3:13",
														"nodeType": "YulTypedName",
														"src": "2998:3:13",
														"type": ""
													}
												],
												"src": "2856:366:13"
											},
											{
												"body": {
													"nativeSrc": "3399:248:13",
													"nodeType": "YulBlock",
													"src": "3399:248:13",
													"statements": [
														{
															"nativeSrc": "3409:26:13",
															"nodeType": "YulAssignment",
															"src": "3409:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3421:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3421:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3432:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3432:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3417:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3417:3:13"
																},
																"nativeSrc": "3417:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3417:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3409:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3409:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3456:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3456:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3467:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3467:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3452:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3452:3:13"
																		},
																		"nativeSrc": "3452:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3452:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3475:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "3475:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3481:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3481:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3471:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3471:3:13"
																		},
																		"nativeSrc": "3471:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3471:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3445:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:13"
																},
																"nativeSrc": "3445:47:13",
																"nodeType": "YulFunctionCall",
																"src": "3445:47:13"
															},
															"nativeSrc": "3445:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "3445:47:13"
														},
														{
															"nativeSrc": "3501:139:13",
															"nodeType": "YulAssignment",
															"src": "3501:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3635:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3635:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3509:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "3509:124:13"
																},
																"nativeSrc": "3509:131:13",
																"nodeType": "YulFunctionCall",
																"src": "3509:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3501:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3501:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3228:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3379:9:13",
														"nodeType": "YulTypedName",
														"src": "3379:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3394:4:13",
														"nodeType": "YulTypedName",
														"src": "3394:4:13",
														"type": ""
													}
												],
												"src": "3228:419:13"
											},
											{
												"body": {
													"nativeSrc": "3759:67:13",
													"nodeType": "YulBlock",
													"src": "3759:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3781:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3781:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3789:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3789:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3777:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3777:3:13"
																		},
																		"nativeSrc": "3777:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3777:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "3793:25:13",
																		"nodeType": "YulLiteral",
																		"src": "3793:25:13",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3770:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3770:6:13"
																},
																"nativeSrc": "3770:49:13",
																"nodeType": "YulFunctionCall",
																"src": "3770:49:13"
															},
															"nativeSrc": "3770:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "3770:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
												"nativeSrc": "3653:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3751:6:13",
														"nodeType": "YulTypedName",
														"src": "3751:6:13",
														"type": ""
													}
												],
												"src": "3653:173:13"
											},
											{
												"body": {
													"nativeSrc": "3978:220:13",
													"nodeType": "YulBlock",
													"src": "3978:220:13",
													"statements": [
														{
															"nativeSrc": "3988:74:13",
															"nodeType": "YulAssignment",
															"src": "3988:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4054:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4054:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4059:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4059:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3995:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "3995:58:13"
																},
																"nativeSrc": "3995:67:13",
																"nodeType": "YulFunctionCall",
																"src": "3995:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3988:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3988:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4160:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																	"nativeSrc": "4071:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "4071:88:13"
																},
																"nativeSrc": "4071:93:13",
																"nodeType": "YulFunctionCall",
																"src": "4071:93:13"
															},
															"nativeSrc": "4071:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "4071:93:13"
														},
														{
															"nativeSrc": "4173:19:13",
															"nodeType": "YulAssignment",
															"src": "4173:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4184:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4184:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4189:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4189:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4180:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4180:3:13"
																},
																"nativeSrc": "4180:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4180:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4173:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4173:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3832:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3966:3:13",
														"nodeType": "YulTypedName",
														"src": "3966:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3974:3:13",
														"nodeType": "YulTypedName",
														"src": "3974:3:13",
														"type": ""
													}
												],
												"src": "3832:366:13"
											},
											{
												"body": {
													"nativeSrc": "4375:248:13",
													"nodeType": "YulBlock",
													"src": "4375:248:13",
													"statements": [
														{
															"nativeSrc": "4385:26:13",
															"nodeType": "YulAssignment",
															"src": "4385:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4397:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4397:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4408:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4408:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4393:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:13"
																},
																"nativeSrc": "4393:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4393:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4385:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4385:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4432:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4432:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4443:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4443:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4428:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4428:3:13"
																		},
																		"nativeSrc": "4428:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4428:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4451:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4451:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4457:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4457:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4447:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4447:3:13"
																		},
																		"nativeSrc": "4447:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4447:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4421:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:13"
																},
																"nativeSrc": "4421:47:13",
																"nodeType": "YulFunctionCall",
																"src": "4421:47:13"
															},
															"nativeSrc": "4421:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "4421:47:13"
														},
														{
															"nativeSrc": "4477:139:13",
															"nodeType": "YulAssignment",
															"src": "4477:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4611:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4611:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4485:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "4485:124:13"
																},
																"nativeSrc": "4485:131:13",
																"nodeType": "YulFunctionCall",
																"src": "4485:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4477:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4477:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4204:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4355:9:13",
														"nodeType": "YulTypedName",
														"src": "4355:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4370:4:13",
														"nodeType": "YulTypedName",
														"src": "4370:4:13",
														"type": ""
													}
												],
												"src": "4204:419:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806379ba5097146100435780638da5cb5b1461004d578063f2fde38b1461006b575b5f80fd5b61004b610087565b005b610055610216565b6040516100629190610449565b60405180910390f35b61008560048036038101906100809190610490565b61023d565b005b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610116576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010d90610515565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610245610251565b61024e816102e0565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d59061057d565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361034e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610345906105e5565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104338261040a565b9050919050565b61044381610429565b82525050565b5f60208201905061045c5f83018461043a565b92915050565b5f80fd5b61046f81610429565b8114610479575f80fd5b50565b5f8135905061048a81610466565b92915050565b5f602082840312156104a5576104a4610462565b5b5f6104b28482850161047c565b91505092915050565b5f82825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e6572000000000000000000005f82015250565b5f6104ff6016836104bb565b915061050a826104cb565b602082019050919050565b5f6020820190508181035f83015261052c816104f3565b9050919050565b7f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000005f82015250565b5f6105676016836104bb565b915061057282610533565b602082019050919050565b5f6020820190508181035f8301526105948161055b565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f6105cf6017836104bb565b91506105da8261059b565b602082019050919050565b5f6020820190508181035f8301526105fc816105c3565b905091905056fea2646970667358221220a95363195e22450c2583da103b20d26eb4a07cbec232e2bfad7b1eee43d8399c64736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x6B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x55 PUSH2 0x216 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x85 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x490 JUMP JUMPDEST PUSH2 0x23D JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x116 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10D SWAP1 PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x245 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x24E DUP2 PUSH2 0x2E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D5 SWAP1 PUSH2 0x57D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x34E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x345 SWAP1 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x433 DUP3 PUSH2 0x40A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x443 DUP2 PUSH2 0x429 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x45C PUSH0 DUP4 ADD DUP5 PUSH2 0x43A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x46F DUP2 PUSH2 0x429 JUMP JUMPDEST DUP2 EQ PUSH2 0x479 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x48A DUP2 PUSH2 0x466 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x462 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B2 DUP5 DUP3 DUP6 ADD PUSH2 0x47C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4FF PUSH1 0x16 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x50A DUP3 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x52C DUP2 PUSH2 0x4F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x567 PUSH1 0x16 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x572 DUP3 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x594 DUP2 PUSH2 0x55B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5CF PUSH1 0x17 DUP4 PUSH2 0x4BB JUMP JUMPDEST SWAP2 POP PUSH2 0x5DA DUP3 PUSH2 0x59B JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5FC DUP2 PUSH2 0x5C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 MSTORE8 PUSH4 0x195E2245 0xC 0x25 DUP4 0xDA LT EXTCODESIZE KECCAK256 0xD2 PUSH15 0xB4A07CBEC232E2BFAD7B1EEE43D839 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "206:1769:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:265;;;:::i;:::-;;1317:81;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:98;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1001:265;1074:14;;;;;;;;;;;1060:28;;:10;:28;;;1052:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1122:16;1141:7;;;;;;;;;;;1122:26;;1164:10;1154:7;;:20;;;;;;;;;;;;;;;;;;1205:1;1180:14;;:27;;;;;;;;;;;;;;;;;;1250:10;1219:42;;1240:8;1219:42;;;;;;;;;;;;1046:220;1001:265::o;1317:81::-;1364:7;1386;;;;;;;;;;;1379:14;;1317:81;:::o;811:98::-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;1715:111::-;1787:7;;;;;;;;;;1773:21;;:10;:21;;;1765:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:111::o;1482:188::-;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;7:126:13:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:329::-;1252:6;1301:2;1289:9;1280:7;1276:23;1272:32;1269:119;;;1307:79;;:::i;:::-;1269:119;1427:1;1452:53;1497:7;1488:6;1477:9;1473:22;1452:53;:::i;:::-;1442:63;;1398:117;1193:329;;;;:::o;1528:169::-;1612:11;1646:6;1641:3;1634:19;1686:4;1681:3;1677:14;1662:29;;1528:169;;;;:::o;1703:172::-;1843:24;1839:1;1831:6;1827:14;1820:48;1703:172;:::o;1881:366::-;2023:3;2044:67;2108:2;2103:3;2044:67;:::i;:::-;2037:74;;2120:93;2209:3;2120:93;:::i;:::-;2238:2;2233:3;2229:12;2222:19;;1881:366;;;:::o;2253:419::-;2419:4;2457:2;2446:9;2442:18;2434:26;;2506:9;2500:4;2496:20;2492:1;2481:9;2477:17;2470:47;2534:131;2660:4;2534:131;:::i;:::-;2526:139;;2253:419;;;:::o;2678:172::-;2818:24;2814:1;2806:6;2802:14;2795:48;2678:172;:::o;2856:366::-;2998:3;3019:67;3083:2;3078:3;3019:67;:::i;:::-;3012:74;;3095:93;3184:3;3095:93;:::i;:::-;3213:2;3208:3;3204:12;3197:19;;2856:366;;;:::o;3228:419::-;3394:4;3432:2;3421:9;3417:18;3409:26;;3481:9;3475:4;3471:20;3467:1;3456:9;3452:17;3445:47;3509:131;3635:4;3509:131;:::i;:::-;3501:139;;3228:419;;;:::o;3653:173::-;3793:25;3789:1;3781:6;3777:14;3770:49;3653:173;:::o;3832:366::-;3974:3;3995:67;4059:2;4054:3;3995:67;:::i;:::-;3988:74;;4071:93;4160:3;4071:93;:::i;:::-;4189:2;4184:3;4180:12;4173:19;;3832:366;;;:::o;4204:419::-;4370:4;4408:2;4397:9;4393:18;4385:26;;4457:9;4451:4;4447:20;4443:1;4432:9;4428:17;4421:47;4485:131;4611:4;4485:131;:::i;:::-;4477:139;;4204:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "318600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"acceptOwnership()": "54511",
								"owner()": "2515",
								"transferOwnership(address)": "30667"
							},
							"internal": {
								"_transferOwnership(address)": "infinite",
								"_validateOwnership()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 206,
									"end": 1975,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 702,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 471,
									"end": 702,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 471,
									"end": 702,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 471,
									"end": 702,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "CODESIZE",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "PUSHSIZE",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 471,
									"end": 702,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 471,
									"end": 702,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 471,
									"end": 702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "tag",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 471,
									"end": 702,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 557,
									"end": 558,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 559,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 559,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 537,
									"end": 545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 537,
									"end": 559,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 559,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 537,
									"end": 559,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 529,
									"end": 588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "tag",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 605,
									"end": 613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 595,
									"end": 602,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 647,
									"end": 648,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 623,
									"end": 635,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 623,
									"end": 649,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 623,
									"end": 649,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 619,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 619,
									"end": 698,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 678,
									"end": 690,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 659,
									"end": 691,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"name": "tag",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 659,
									"end": 691,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 619,
									"end": 698,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 619,
									"end": 698,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1670,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 1482,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "16"
								},
								{
									"begin": 1536,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "tag",
									"source": 3,
									"value": "15"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "tag",
									"source": 3,
									"value": "14"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1612,
									"end": 1614,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1609,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1595,
									"end": 1609,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1662,
									"end": 1664,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1670,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1442,
									"end": 1453,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1476,
									"end": 1482,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1471,
									"end": 1474,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1464,
									"end": 1483,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1520,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1511,
									"end": 1514,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1507,
									"end": 1521,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1492,
									"end": 1521,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1527,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1527,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1533,
									"end": 1707,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1533,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1673,
									"end": 1699,
									"name": "PUSH",
									"source": 13,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 1669,
									"end": 1670,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1661,
									"end": 1667,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1657,
									"end": 1671,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1650,
									"end": 1700,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1533,
									"end": 1707,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1533,
									"end": 1707,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1713,
									"end": 2079,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1713,
									"end": 2079,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1855,
									"end": 1858,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1876,
									"end": 1943,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1940,
									"end": 1942,
									"name": "PUSH",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 1935,
									"end": 1938,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1876,
									"end": 1943,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 1876,
									"end": 1943,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1876,
									"end": 1943,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1876,
									"end": 1943,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1869,
									"end": 1943,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1869,
									"end": 1943,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1952,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 2041,
									"end": 2044,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1952,
									"end": 2045,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 1952,
									"end": 2045,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1952,
									"end": 2045,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1952,
									"end": 2045,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2070,
									"end": 2072,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2065,
									"end": 2068,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2061,
									"end": 2073,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2073,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2054,
									"end": 2073,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1713,
									"end": 2079,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1713,
									"end": 2079,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1713,
									"end": 2079,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1713,
									"end": 2079,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2504,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 2085,
									"end": 2504,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2251,
									"end": 2255,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2289,
									"end": 2291,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2278,
									"end": 2287,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2274,
									"end": 2292,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2266,
									"end": 2292,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2266,
									"end": 2292,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2338,
									"end": 2347,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2332,
									"end": 2336,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2328,
									"end": 2348,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 2324,
									"end": 2325,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2313,
									"end": 2322,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2309,
									"end": 2326,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2302,
									"end": 2349,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2366,
									"end": 2497,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 2492,
									"end": 2496,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2366,
									"end": 2497,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2366,
									"end": 2497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2366,
									"end": 2497,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 2366,
									"end": 2497,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2358,
									"end": 2497,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2358,
									"end": 2497,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2504,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2504,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2504,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2085,
									"end": 2504,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2510,
									"end": 2683,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 2510,
									"end": 2683,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2650,
									"end": 2675,
									"name": "PUSH",
									"source": 13,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 2646,
									"end": 2647,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2634,
									"end": 2648,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2627,
									"end": 2676,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2510,
									"end": 2683,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2510,
									"end": 2683,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2689,
									"end": 3055,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2689,
									"end": 3055,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2831,
									"end": 2834,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2852,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2916,
									"end": 2918,
									"name": "PUSH",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 2911,
									"end": 2914,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2852,
									"end": 2919,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 2852,
									"end": 2919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2852,
									"end": 2919,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 2852,
									"end": 2919,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2845,
									"end": 2919,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2845,
									"end": 2919,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2928,
									"end": 3021,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 3017,
									"end": 3020,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2928,
									"end": 3021,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 2928,
									"end": 3021,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2928,
									"end": 3021,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 2928,
									"end": 3021,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3046,
									"end": 3048,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3041,
									"end": 3044,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 3049,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3030,
									"end": 3049,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3030,
									"end": 3049,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2689,
									"end": 3055,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2689,
									"end": 3055,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2689,
									"end": 3055,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2689,
									"end": 3055,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3061,
									"end": 3480,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 3061,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3227,
									"end": 3231,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3265,
									"end": 3267,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3254,
									"end": 3263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3250,
									"end": 3268,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3242,
									"end": 3268,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3242,
									"end": 3268,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3314,
									"end": 3323,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3308,
									"end": 3312,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3304,
									"end": 3324,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3300,
									"end": 3301,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3289,
									"end": 3298,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3285,
									"end": 3302,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3278,
									"end": 3325,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 3342,
									"end": 3473,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 3468,
									"end": 3472,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3342,
									"end": 3473,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 3342,
									"end": 3473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3342,
									"end": 3473,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 3342,
									"end": 3473,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3473,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3473,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3061,
									"end": 3480,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3061,
									"end": 3480,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3061,
									"end": 3480,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3061,
									"end": 3480,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 206,
									"end": 1975,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a95363195e22450c2583da103b20d26eb4a07cbec232e2bfad7b1eee43d8399c64736f6c63430008170033",
									".code": [
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "79BA5097"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "8DA5CB5B"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "F2FDE38B"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 206,
											"end": 1975,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1317,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 1317,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 811,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 811,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1070,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 1052,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1138,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1194,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1180,
											"end": 1194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1260,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1941,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 901,
											"end": 903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 882,
											"end": 900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 882,
											"end": 904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 882,
											"end": 904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 882,
											"end": 904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1715,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 1765,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1670,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1482,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1560,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1536,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "tag",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1252,
											"end": 1258,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1303,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1298,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1280,
											"end": 1287,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1276,
											"end": 1299,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1304,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1307,
											"end": 1386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1307,
											"end": 1386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1269,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1427,
											"end": 1428,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1497,
											"end": 1504,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1495,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1452,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1452,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1442,
											"end": 1505,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1398,
											"end": 1515,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1193,
											"end": 1522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1612,
											"end": 1623,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1641,
											"end": 1644,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1634,
											"end": 1653,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1686,
											"end": 1690,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1681,
											"end": 1684,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1691,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1662,
											"end": 1691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1528,
											"end": 1697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1703,
											"end": 1875,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1703,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "PUSH",
											"source": 13,
											"value": "4D7573742062652070726F706F736564206F776E657200000000000000000000"
										},
										{
											"begin": 1839,
											"end": 1840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1837,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1827,
											"end": 1841,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1868,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1703,
											"end": 1875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1703,
											"end": 1875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2023,
											"end": 2026,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 2103,
											"end": 2106,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2044,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2044,
											"end": 2111,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2044,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2037,
											"end": 2111,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2037,
											"end": 2111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2120,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2120,
											"end": 2213,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2120,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2238,
											"end": 2240,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2229,
											"end": 2241,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2241,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2222,
											"end": 2241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2419,
											"end": 2423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2446,
											"end": 2455,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2442,
											"end": 2460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2434,
											"end": 2460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2506,
											"end": 2515,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2500,
											"end": 2504,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2496,
											"end": 2516,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2492,
											"end": 2493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2481,
											"end": 2490,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2477,
											"end": 2494,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2470,
											"end": 2517,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2660,
											"end": 2664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 2534,
											"end": 2665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2534,
											"end": 2665,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2534,
											"end": 2665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2665,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2526,
											"end": 2665,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2253,
											"end": 2672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2850,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 2678,
											"end": 2850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2818,
											"end": 2842,
											"name": "PUSH",
											"source": 13,
											"value": "4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000"
										},
										{
											"begin": 2814,
											"end": 2815,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2806,
											"end": 2812,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2802,
											"end": 2816,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2795,
											"end": 2843,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2678,
											"end": 2850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3083,
											"end": 3085,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 3078,
											"end": 3081,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3019,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3019,
											"end": 3086,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3019,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3012,
											"end": 3086,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3012,
											"end": 3086,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3184,
											"end": 3187,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3095,
											"end": 3188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3095,
											"end": 3188,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3095,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3213,
											"end": 3215,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3208,
											"end": 3211,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3204,
											"end": 3216,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2856,
											"end": 3222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3434,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3417,
											"end": 3435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3435,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3409,
											"end": 3435,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3481,
											"end": 3490,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3479,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3491,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3467,
											"end": 3468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3465,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3452,
											"end": 3469,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3492,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3509,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3635,
											"end": 3639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3509,
											"end": 3640,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3509,
											"end": 3640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3509,
											"end": 3640,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3509,
											"end": 3640,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3640,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3228,
											"end": 3647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3826,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3653,
											"end": 3826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3793,
											"end": 3818,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 3789,
											"end": 3790,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3787,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3777,
											"end": 3791,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3770,
											"end": 3819,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3826,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3653,
											"end": 3826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 3977,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3995,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4059,
											"end": 4061,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 4054,
											"end": 4057,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3995,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 3995,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3995,
											"end": 4062,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 3995,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4062,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3988,
											"end": 4062,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4071,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4160,
											"end": 4163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4071,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 4071,
											"end": 4164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4071,
											"end": 4164,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 4071,
											"end": 4164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4189,
											"end": 4191,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4184,
											"end": 4187,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4180,
											"end": 4192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4192,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3832,
											"end": 4198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4374,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4408,
											"end": 4410,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4397,
											"end": 4406,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4411,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4385,
											"end": 4411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4457,
											"end": 4466,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4451,
											"end": 4455,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4447,
											"end": 4467,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4428,
											"end": 4445,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4421,
											"end": 4468,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4611,
											"end": 4615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4485,
											"end": 4616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4616,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 4485,
											"end": 4616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4616,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
								"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/presale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pendingOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":\"ConfirmedOwnerWithProposal\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 102,
								"contract": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address, pending."
							}
						},
						"notice": "A contract with helpers for basic contract ownership.",
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
				"IOwnable": {
					"abi": [
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":\"IOwnable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
				"LinkTokenInterface": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "remaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "decimalPlaces",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseApproval",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "increaseApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalTokensIssued",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "success",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseApproval(address,uint256)": "66188463",
							"increaseApproval(address,uint256)": "d73dd623",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845\",\"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol": {
				"VRFV2WrapperConsumerBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256[]",
									"name": "_randomWords",
									"type": "uint256[]"
								}
							],
							"name": "rawFulfillRandomWords",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "PURPOSECreate VRF V2 requests without the need for subscription management. Rather than creatingand funding a VRF V2 subscription, a user can use this wrapper to create one off requests,paying up front rather than at fulfillment.Since the price is determined using the gas price of the request transaction rather thanthe fulfillment transaction, the wrapper charges an additional premium on callback gasusage, in addition to some extra overhead costs associated with the VRFV2Wrapper contract. *****************************************************************************USAGECalling contracts must inherit from VRFV2WrapperConsumerBase. The consumer must be fundedwith enough LINK to make the request, otherwise requests will revert. To request randomness,call the 'requestRandomness' function with the desired VRF parameters. This function handlespaying for the request based on the current pricing.Consumers must implement the fullfillRandomWords function, which will be called duringfulfillment with the randomness result.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"_link": "is the address of LinkToken",
									"_vrfV2Wrapper": "is the address of the VRFV2Wrapper contract"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"rawFulfillRandomWords(uint256,uint256[])": "1fe543e3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSECreate VRF V2 requests without the need for subscription management. Rather than creatingand funding a VRF V2 subscription, a user can use this wrapper to create one off requests,paying up front rather than at fulfillment.Since the price is determined using the gas price of the request transaction rather thanthe fulfillment transaction, the wrapper charges an additional premium on callback gasusage, in addition to some extra overhead costs associated with the VRFV2Wrapper contract. *****************************************************************************USAGECalling contracts must inherit from VRFV2WrapperConsumerBase. The consumer must be fundedwith enough LINK to make the request, otherwise requests will revert. To request randomness,call the 'requestRandomness' function with the desired VRF parameters. This function handlespaying for the request based on the current pricing.Consumers must implement the fullfillRandomWords function, which will be called duringfulfillment with the randomness result.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_link\":\"is the address of LinkToken\",\"_vrfV2Wrapper\":\"is the address of the VRFV2Wrapper contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"*******************************************************************************Interface for contracts using VRF randomness through the VRF V2 wrapper ********************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol\":\"VRFV2WrapperConsumerBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol\":{\"keccak256\":\"0x44f6fa0cb1867a0bc137a195d4603bafa1cf74ecfbe69eb82a5dabeca8957738\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87ebb29c09566ab02ff62c3c29f60a08db52f032b5f2c5220cd111aad88002ce\",\"dweb:/ipfs/QmfScq3oJ6MkPXJh5JUrpz93bNMJ3ebtLcE3Q1H2DUNi93\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845\",\"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj\"]},\"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol\":{\"keccak256\":\"0x892f17652e5de9d5e0b5e9424a9b3f2a69d3e50070ba1387f2292aea8190d3bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c99ad1fdfa93095ddac209390301dc5cb9da36fb6420b4c0bb7a2c76d6665be\",\"dweb:/ipfs/QmVajNoVLwDcVh9CFoJvTRQpPjg4CRP1Vco6481sVgY9iB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "*******************************************************************************Interface for contracts using VRF randomness through the VRF V2 wrapper ********************************************************************************",
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 628,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 634,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 636,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 638,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 640,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/presale.sol": {
				"SVTLottery": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferRequested",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SLTAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "SLTtoSend",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "dollarEquiv",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "checkETHPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "dollarAmount",
									"type": "uint256"
								}
							],
							"name": "convertDollarToETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ethAmountInWei",
									"type": "uint256"
								}
							],
							"name": "convertEthToDollar",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "dollarAmountOfSLT",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/presale.sol\":348:2551  contract SVTLottery is ConfirmedOwner {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/presale.sol\":423:429  10**18 */\n  0x0de0b6b3a7640000\n    /* \"contracts/presale.sol\":393:429  uint256 private tenEighteen = 10**18 */\n  0x02\n  sstore\n    /* \"contracts/presale.sol\":463:468  10**8 */\n  0x05f5e100\n    /* \"contracts/presale.sol\":436:468  uint256 private tenEight = 10**8 */\n  0x03\n  sstore\n    /* \"contracts/presale.sol\":500:506  10**10 */\n  0x02540be400\n    /* \"contracts/presale.sol\":475:506  uint256 private tenTen = 10**10 */\n  0x04\n  sstore\n    /* \"contracts/presale.sol\":544:547  100 */\n  0x64\n    /* \"contracts/presale.sol\":513:547  uint8 private hundredPercent = 100 */\n  0x05\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/presale.sol\":554:615  string public dollarAmountOfSLT = \"1 SLT = $0.02 for Presale\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x19\n  dup2\n  mstore\n  0x20\n  add\n  0x3120534c54203d2024302e303220666f722050726573616c6500000000000000\n  dup2\n  mstore\n  pop\n  0x06\n  swap1\n  dup2\n  tag_1\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/presale.sol\":652:694  0x647c3320516692c8366fde2b08bc6D304584c020 */\n  0x647c3320516692c8366fde2b08bc6d304584c020\n    /* \"contracts/presale.sol\":624:694  address public SLTAddress = 0x647c3320516692c8366fde2b08bc6D304584c020 */\n  0x07\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/presale.sol\":729:739  SLTAddress */\n  0x07\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/presale.sol\":701:740  IERC20 private SLT = IERC20(SLTAddress) */\n  0x08\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/presale.sol\":785:827  0xd30e2101a97dcbAeBCBC04F14C3f624E67A35165 */\n  0xd30e2101a97dcbaebcbc04f14c3f624e67a35165\n    /* \"contracts/presale.sol\":753:827  address private priceFeedData = 0xd30e2101a97dcbAeBCBC04F14C3f624E67A35165 */\n  0x09\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/presale.sol\":943:956  priceFeedData */\n  0x09\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/presale.sol\":879:957  AggregatorV3Interface private priceFeed = AggregatorV3Interface(priceFeedData) */\n  0x0a\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/presale.sol\":1152:1205  constructor()... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n    /* \"contracts/presale.sol\":1186:1196  msg.sender */\n  caller\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":327:335  newOwner */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":345:346  0 */\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":557:558  0 */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":537:559  newOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":537:545  newOwner */\n  dup3\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":537:559  newOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":529:588  require(newOwner != address(0), \"Cannot set owner to zero\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":605:613  newOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":595:602  s_owner */\n  0x00\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":595:613  s_owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":647:648  0 */\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":623:649  pendingOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":623:635  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":623:649  pendingOwner != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":619:698  if (pendingOwner != address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":659:691  _transferOwnership(pendingOwner) */\n  tag_12\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":678:690  pendingOwner */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":659:677  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":659:691  _transferOwnership(pendingOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":619:698  if (pendingOwner != address(0)) {... */\ntag_11:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":471:702  constructor(address newOwner, address pendingOwner) {... */\n  pop\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":270:351  constructor(address newOwner) ConfirmedOwnerWithProposal(newOwner, address(0)) {} */\n  pop\n    /* \"contracts/presale.sol\":348:2551  contract SVTLottery is ConfirmedOwner {... */\n  jump(tag_16)\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\ntag_13:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1550:1560  msg.sender */\n  caller\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1546  to */\n  dup2\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1588  require(to != msg.sender, \"Cannot transfer to self\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1612:1614  to */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1609  s_pendingOwner */\n  0x01\n  0x00\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1614  s_pendingOwner = to */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1662:1664  to */\n  dup1\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1653:1660  s_owner */\n  0x00\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_21:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_22:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_23:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_24:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_51:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_52\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_53\n  tag_23\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":714:798   */\ntag_52:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_25:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_26:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_27:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_28:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_58\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_27\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1429:1468   */\n  tag_59\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_27\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_29:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_30:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_31:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_63\n    /* \"#utility.yul\":1818:1852   */\n  tag_64\n    /* \"#utility.yul\":1827:1851   */\n  tag_65\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_29\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1818:1852   */\n  tag_30\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":1800:1853   */\n  tag_29\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_32:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_33:\n    /* \"#utility.yul\":2056:2095   */\n  tag_68\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_31\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":2117:2208   */\n  tag_69\n    /* \"#utility.yul\":2166:2207   */\n  tag_70\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_32\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_28\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_34:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_35:\n    /* \"#utility.yul\":2377:2409   */\n  tag_73\n  tag_34\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2418:2483   */\n  tag_74\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_33\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_36:\n    /* \"#utility.yul\":2555:2675   */\ntag_76:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_79\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_35\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_76)\ntag_78:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_37:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_82\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_25\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2906:2935   */\n  tag_83\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_26\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_84:\n    /* \"#utility.yul\":3133:3213   */\n  tag_85\n    /* \"#utility.yul\":3189:3211   */\n  tag_86\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_26\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_36\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_81:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_38:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_39:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_89\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_38\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_40:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_91\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_39\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_2:\n    /* \"#utility.yul\":3950:3987   */\n  tag_93\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_21\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_94\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_95\n  tag_22\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4038:4094   */\ntag_94:\n    /* \"#utility.yul\":4118:4156   */\n  tag_96\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_24\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4203:4270   */\n  tag_97\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_37\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_99\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_100:\n    /* \"#utility.yul\":5144:5211   */\n  tag_101\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_40\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_98)\n    /* \"#utility.yul\":4365:4983   */\ntag_99:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_102\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_25\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_103:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_105\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_103)\ntag_105:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_107\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_39\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_106:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_98:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5403   */\ntag_41:\n    /* \"#utility.yul\":5318:5329   */\n  0x00\n    /* \"#utility.yul\":5352:5358   */\n  dup3\n    /* \"#utility.yul\":5347:5350   */\n  dup3\n    /* \"#utility.yul\":5340:5359   */\n  mstore\n    /* \"#utility.yul\":5392:5396   */\n  0x20\n    /* \"#utility.yul\":5387:5390   */\n  dup3\n    /* \"#utility.yul\":5383:5397   */\n  add\n    /* \"#utility.yul\":5368:5397   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5403   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5409:5583   */\ntag_42:\n    /* \"#utility.yul\":5549:5575   */\n  0x43616e6e6f7420736574206f776e657220746f207a65726f0000000000000000\n    /* \"#utility.yul\":5545:5546   */\n  0x00\n    /* \"#utility.yul\":5537:5543   */\n  dup3\n    /* \"#utility.yul\":5533:5547   */\n  add\n    /* \"#utility.yul\":5526:5576   */\n  mstore\n    /* \"#utility.yul\":5409:5583   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5589:5955   */\ntag_43:\n    /* \"#utility.yul\":5731:5734   */\n  0x00\n    /* \"#utility.yul\":5752:5819   */\n  tag_111\n    /* \"#utility.yul\":5816:5818   */\n  0x18\n    /* \"#utility.yul\":5811:5814   */\n  dup4\n    /* \"#utility.yul\":5752:5819   */\n  tag_41\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5745:5819   */\n  swap2\n  pop\n    /* \"#utility.yul\":5828:5921   */\n  tag_112\n    /* \"#utility.yul\":5917:5920   */\n  dup3\n    /* \"#utility.yul\":5828:5921   */\n  tag_42\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5946:5948   */\n  0x20\n    /* \"#utility.yul\":5941:5944   */\n  dup3\n    /* \"#utility.yul\":5937:5949   */\n  add\n    /* \"#utility.yul\":5930:5949   */\n  swap1\n  pop\n    /* \"#utility.yul\":5589:5955   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5961:6380   */\ntag_10:\n    /* \"#utility.yul\":6127:6131   */\n  0x00\n    /* \"#utility.yul\":6165:6167   */\n  0x20\n    /* \"#utility.yul\":6154:6163   */\n  dup3\n    /* \"#utility.yul\":6150:6168   */\n  add\n    /* \"#utility.yul\":6142:6168   */\n  swap1\n  pop\n    /* \"#utility.yul\":6214:6223   */\n  dup2\n    /* \"#utility.yul\":6208:6212   */\n  dup2\n    /* \"#utility.yul\":6204:6224   */\n  sub\n    /* \"#utility.yul\":6200:6201   */\n  0x00\n    /* \"#utility.yul\":6189:6198   */\n  dup4\n    /* \"#utility.yul\":6185:6202   */\n  add\n    /* \"#utility.yul\":6178:6225   */\n  mstore\n    /* \"#utility.yul\":6242:6373   */\n  tag_114\n    /* \"#utility.yul\":6368:6372   */\n  dup2\n    /* \"#utility.yul\":6242:6373   */\n  tag_43\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":6234:6373   */\n  swap1\n  pop\n    /* \"#utility.yul\":5961:6380   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6386:6559   */\ntag_44:\n    /* \"#utility.yul\":6526:6551   */\n  0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n    /* \"#utility.yul\":6522:6523   */\n  0x00\n    /* \"#utility.yul\":6514:6520   */\n  dup3\n    /* \"#utility.yul\":6510:6524   */\n  add\n    /* \"#utility.yul\":6503:6552   */\n  mstore\n    /* \"#utility.yul\":6386:6559   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6565:6931   */\ntag_45:\n    /* \"#utility.yul\":6707:6710   */\n  0x00\n    /* \"#utility.yul\":6728:6795   */\n  tag_117\n    /* \"#utility.yul\":6792:6794   */\n  0x17\n    /* \"#utility.yul\":6787:6790   */\n  dup4\n    /* \"#utility.yul\":6728:6795   */\n  tag_41\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":6721:6795   */\n  swap2\n  pop\n    /* \"#utility.yul\":6804:6897   */\n  tag_118\n    /* \"#utility.yul\":6893:6896   */\n  dup3\n    /* \"#utility.yul\":6804:6897   */\n  tag_44\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6922:6924   */\n  0x20\n    /* \"#utility.yul\":6917:6920   */\n  dup3\n    /* \"#utility.yul\":6913:6925   */\n  add\n    /* \"#utility.yul\":6906:6925   */\n  swap1\n  pop\n    /* \"#utility.yul\":6565:6931   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6937:7356   */\ntag_20:\n    /* \"#utility.yul\":7103:7107   */\n  0x00\n    /* \"#utility.yul\":7141:7143   */\n  0x20\n    /* \"#utility.yul\":7130:7139   */\n  dup3\n    /* \"#utility.yul\":7126:7144   */\n  add\n    /* \"#utility.yul\":7118:7144   */\n  swap1\n  pop\n    /* \"#utility.yul\":7190:7199   */\n  dup2\n    /* \"#utility.yul\":7184:7188   */\n  dup2\n    /* \"#utility.yul\":7180:7200   */\n  sub\n    /* \"#utility.yul\":7176:7177   */\n  0x00\n    /* \"#utility.yul\":7165:7174   */\n  dup4\n    /* \"#utility.yul\":7161:7178   */\n  add\n    /* \"#utility.yul\":7154:7201   */\n  mstore\n    /* \"#utility.yul\":7218:7349   */\n  tag_120\n    /* \"#utility.yul\":7344:7348   */\n  dup2\n    /* \"#utility.yul\":7218:7349   */\n  tag_45\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":7210:7349   */\n  swap1\n  pop\n    /* \"#utility.yul\":6937:7356   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/presale.sol\":348:2551  contract SVTLottery is ConfirmedOwner {... */\ntag_16:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/presale.sol\":348:2551  contract SVTLottery is ConfirmedOwner {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x79ba5097\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa4821719\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xaaf836ff\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_12:\n      dup1\n      0x41e550\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x04338841\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1ad46a5f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3d900d9e\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/presale.sol\":1453:1734  function convertEthToDollar(uint256 ethAmountInWei) ... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      pop\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/presale.sol\":1742:2050  function convertDollarToETH(uint256 dollarAmount)... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/presale.sol\":554:615  string public dollarAmountOfSLT = \"1 SLT = $0.02 for Presale\" */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/presale.sol\":2058:2182  function withdraw() ... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/presale.sol\":1213:1445  function checkETHPrice()... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1001:1266  function acceptOwnership() external override {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      stop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1317:1398  function owner() public view override returns (address) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/presale.sol\":2248:2542  function buyToken() ... */\n    tag_9:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap3\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/presale.sol\":624:694  address public SLTAddress = 0x647c3320516692c8366fde2b08bc6D304584c020 */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":811:909  function transferOwnership(address to) public override onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/presale.sol\":1453:1734  function convertEthToDollar(uint256 ethAmountInWei) ... */\n    tag_17:\n        /* \"contracts/presale.sol\":1544:1551  uint256 */\n      0x00\n        /* \"contracts/presale.sol\":1570:1593  uint256 currentEthPrice */\n      dup1\n        /* \"contracts/presale.sol\":1596:1611  checkETHPrice() */\n      tag_59\n        /* \"contracts/presale.sol\":1596:1609  checkETHPrice */\n      tag_35\n        /* \"contracts/presale.sol\":1596:1611  checkETHPrice() */\n      jump\t// in\n    tag_59:\n        /* \"contracts/presale.sol\":1570:1611  uint256 currentEthPrice = checkETHPrice() */\n      swap1\n      pop\n        /* \"contracts/presale.sol\":1622:1646  uint256 dollarEquivalent */\n      0x00\n        /* \"contracts/presale.sol\":1686:1692  10**18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/presale.sol\":1667:1682  currentEthPrice */\n      dup3\n        /* \"contracts/presale.sol\":1650:1664  ethAmountInWei */\n      dup6\n        /* \"contracts/presale.sol\":1650:1682  ethAmountInWei * currentEthPrice */\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"contracts/presale.sol\":1649:1692  (ethAmountInWei * currentEthPrice) / 10**18 */\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"contracts/presale.sol\":1622:1692  uint256 dollarEquivalent = (ethAmountInWei * currentEthPrice) / 10**18 */\n      swap1\n      pop\n        /* \"contracts/presale.sol\":1710:1726  dollarEquivalent */\n      dup1\n        /* \"contracts/presale.sol\":1703:1726  return dollarEquivalent */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/presale.sol\":1453:1734  function convertEthToDollar(uint256 ethAmountInWei) ... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/presale.sol\":1742:2050  function convertDollarToETH(uint256 dollarAmount)... */\n    tag_23:\n        /* \"contracts/presale.sol\":1839:1846  uint256 */\n      0x00\n        /* \"contracts/presale.sol\":1865:1888  uint256 currentETHPrice */\n      dup1\n        /* \"contracts/presale.sol\":1891:1906  checkETHPrice() */\n      tag_65\n        /* \"contracts/presale.sol\":1891:1904  checkETHPrice */\n      tag_35\n        /* \"contracts/presale.sol\":1891:1906  checkETHPrice() */\n      jump\t// in\n    tag_65:\n        /* \"contracts/presale.sol\":1865:1906  uint256 currentETHPrice = checkETHPrice() */\n      swap1\n      pop\n        /* \"contracts/presale.sol\":1917:1938  uint256 ETHEquivalent */\n      0x00\n        /* \"contracts/presale.sol\":2003:2011  tenEight */\n      sload(0x03)\n        /* \"contracts/presale.sol\":1992:1998  tenTen */\n      sload(0x04)\n        /* \"contracts/presale.sol\":1974:1989  currentETHPrice */\n      dup4\n        /* \"contracts/presale.sol\":1974:1998  currentETHPrice / tenTen */\n      tag_66\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_66:\n        /* \"contracts/presale.sol\":1958:1969  tenEighteen */\n      sload(0x02)\n        /* \"contracts/presale.sol\":1943:1955  dollarAmount */\n      dup7\n        /* \"contracts/presale.sol\":1943:1969  dollarAmount * tenEighteen */\n      tag_67\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_67:\n        /* \"contracts/presale.sol\":1942:1999  (dollarAmount * tenEighteen) / (currentETHPrice / tenTen) */\n      tag_68\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_68:\n        /* \"contracts/presale.sol\":1941:2011  ((dollarAmount * tenEighteen) / (currentETHPrice / tenTen)) * tenEight */\n      tag_69\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_69:\n        /* \"contracts/presale.sol\":1917:2011  uint256 ETHEquivalent = ((dollarAmount * tenEighteen) / (currentETHPrice / tenTen)) * tenEight */\n      swap1\n      pop\n        /* \"contracts/presale.sol\":2029:2042  ETHEquivalent */\n      dup1\n        /* \"contracts/presale.sol\":2022:2042  return ETHEquivalent */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/presale.sol\":1742:2050  function convertDollarToETH(uint256 dollarAmount)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/presale.sol\":554:615  string public dollarAmountOfSLT = \"1 SLT = $0.02 for Presale\" */\n    tag_27:\n      0x06\n      dup1\n      sload\n      tag_70\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_72\n      swap1\n      tag_71\n      jump\t// in\n    tag_72:\n      dup1\n      iszero\n      tag_73\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_74\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_73)\n    tag_74:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_75:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_75\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/presale.sol\":2058:2182  function withdraw() ... */\n    tag_32:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1961  _validateOwnership() */\n      tag_77\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1959  _validateOwnership */\n      tag_78\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1961  _validateOwnership() */\n      jump\t// in\n    tag_77:\n        /* \"contracts/presale.sol\":2131:2141  msg.sender */\n      caller\n        /* \"contracts/presale.sol\":2123:2151  payable(msg.sender).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/presale.sol\":2123:2174  payable(msg.sender).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/presale.sol\":2152:2173  address(this).balance */\n      selfbalance\n        /* \"contracts/presale.sol\":2123:2174  payable(msg.sender).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_81\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_81:\n      pop\n        /* \"contracts/presale.sol\":2058:2182  function withdraw() ... */\n      jump\t// out\n        /* \"contracts/presale.sol\":1213:1445  function checkETHPrice()... */\n    tag_35:\n        /* \"contracts/presale.sol\":1285:1292  uint256 */\n      0x00\n        /* \"contracts/presale.sol\":1312:1324  int256 price */\n      dup1\n        /* \"contracts/presale.sol\":1331:1340  priceFeed */\n      0x0a\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/presale.sol\":1331:1356  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/presale.sol\":1331:1358  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"contracts/presale.sol\":1310:1358  (,int256 price,,,) = priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/presale.sol\":1369:1385  uint256 ETHPrice */\n      0x00\n        /* \"contracts/presale.sol\":1405:1411  tenTen */\n      sload(0x04)\n        /* \"contracts/presale.sol\":1396:1401  price */\n      dup3\n        /* \"contracts/presale.sol\":1388:1411  uint256(price) * tenTen */\n      tag_87\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_87:\n        /* \"contracts/presale.sol\":1369:1411  uint256 ETHPrice = uint256(price) * tenTen */\n      swap1\n      pop\n        /* \"contracts/presale.sol\":1429:1437  ETHPrice */\n      dup1\n        /* \"contracts/presale.sol\":1422:1437  return ETHPrice */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/presale.sol\":1213:1445  function checkETHPrice()... */\n      swap1\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1001:1266  function acceptOwnership() external override {... */\n    tag_39:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1074:1088  s_pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1060:1088  msg.sender == s_pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1060:1070  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1060:1088  msg.sender == s_pendingOwner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1052:1115  require(msg.sender == s_pendingOwner, \"Must be proposed owner\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_89:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1122:1138  address oldOwner */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1141:1148  s_owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1122:1148  address oldOwner = s_owner */\n      swap1\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1164:1174  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1154:1161  s_owner */\n      0x00\n      dup1\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1154:1174  s_owner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1205:1206  0 */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1180:1194  s_pendingOwner */\n      0x01\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1180:1207  s_pendingOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1250:1260  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1219:1261  OwnershipTransferred(oldOwner, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1240:1248  oldOwner */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1219:1261  OwnershipTransferred(oldOwner, msg.sender) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1046:1266  {... */\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1001:1266  function acceptOwnership() external override {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1317:1398  function owner() public view override returns (address) {... */\n    tag_42:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1364:1371  address */\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1386:1393  s_owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1379:1393  return s_owner */\n      swap1\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1317:1398  function owner() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/presale.sol\":2248:2542  function buyToken() ... */\n    tag_46:\n        /* \"contracts/presale.sol\":2308:2325  uint256 SLTtoSend */\n      0x00\n        /* \"contracts/presale.sol\":2327:2346  uint256 dollarEquiv */\n      dup1\n        /* \"contracts/presale.sol\":2378:2407  convertEthToDollar(msg.value) */\n      tag_94\n        /* \"contracts/presale.sol\":2397:2406  msg.value */\n      callvalue\n        /* \"contracts/presale.sol\":2378:2396  convertEthToDollar */\n      tag_17\n        /* \"contracts/presale.sol\":2378:2407  convertEthToDollar(msg.value) */\n      jump\t// in\n    tag_94:\n        /* \"contracts/presale.sol\":2364:2407  dollarEquiv = convertEthToDollar(msg.value) */\n      swap1\n      pop\n        /* \"contracts/presale.sol\":2444:2446  50 */\n      0x32\n        /* \"contracts/presale.sol\":2430:2441  dollarEquiv */\n      dup2\n        /* \"contracts/presale.sol\":2430:2446  dollarEquiv / 50 */\n      tag_95\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_95:\n        /* \"contracts/presale.sol\":2418:2446  SLTtoSend = dollarEquiv / 50 */\n      swap2\n      pop\n        /* \"contracts/presale.sol\":2457:2460  SLT */\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/presale.sol\":2457:2469  SLT.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/presale.sol\":2470:2480  msg.sender */\n      caller\n        /* \"contracts/presale.sol\":2482:2491  SLTtoSend */\n      dup5\n        /* \"contracts/presale.sol\":2457:2492  SLT.transfer(msg.sender, SLTtoSend) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap3\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      pop\n        /* \"contracts/presale.sol\":2248:2542  function buyToken() ... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"contracts/presale.sol\":624:694  address public SLTAddress = 0x647c3320516692c8366fde2b08bc6D304584c020 */\n    tag_51:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":811:909  function transferOwnership(address to) public override onlyOwner {... */\n    tag_57:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1961  _validateOwnership() */\n      tag_103\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1959  _validateOwnership */\n      tag_78\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1941:1961  _validateOwnership() */\n      jump\t// in\n    tag_103:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":882:904  _transferOwnership(to) */\n      tag_105\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":901:903  to */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":882:900  _transferOwnership */\n      tag_106\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":882:904  _transferOwnership(to) */\n      jump\t// in\n    tag_105:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":811:909  function transferOwnership(address to) public override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1715:1826  function _validateOwnership() internal view {... */\n    tag_78:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1787:1794  s_owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1773:1794  msg.sender == s_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1773:1783  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1773:1794  msg.sender == s_owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1765:1821  require(msg.sender == s_owner, \"Only callable by owner\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_108:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1715:1826  function _validateOwnership() internal view {... */\n      jump\t// out\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\n    tag_106:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1550:1560  msg.sender */\n      caller\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1546  to */\n      dup2\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1544:1560  to != msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1536:1588  require(to != msg.sender, \"Cannot transfer to self\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1612:1614  to */\n      dup1\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1609  s_pendingOwner */\n      0x01\n      0x00\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1595:1614  s_pendingOwner = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1662:1664  to */\n      dup1\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1653:1660  s_owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1626:1665  OwnershipTransferRequested(s_owner, to) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":1482:1670  function _transferOwnership(address to) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_116:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_118:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_119:\n        /* \"#utility.yul\":490:514   */\n      tag_157\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_118\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_158\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_158:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_120:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_160\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_119\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_16:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_163\n      tag_116\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":766:885   */\n    tag_162:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_164\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_120\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1143   */\n    tag_121:\n        /* \"#utility.yul\":1112:1136   */\n      tag_166\n        /* \"#utility.yul\":1130:1135   */\n      dup2\n        /* \"#utility.yul\":1112:1136   */\n      tag_118\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":1107:1110   */\n      dup3\n        /* \"#utility.yul\":1100:1137   */\n      mstore\n        /* \"#utility.yul\":1025:1143   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1149:1371   */\n    tag_19:\n        /* \"#utility.yul\":1242:1246   */\n      0x00\n        /* \"#utility.yul\":1280:1282   */\n      0x20\n        /* \"#utility.yul\":1269:1278   */\n      dup3\n        /* \"#utility.yul\":1265:1283   */\n      add\n        /* \"#utility.yul\":1257:1283   */\n      swap1\n      pop\n        /* \"#utility.yul\":1293:1364   */\n      tag_168\n        /* \"#utility.yul\":1361:1362   */\n      0x00\n        /* \"#utility.yul\":1350:1359   */\n      dup4\n        /* \"#utility.yul\":1346:1363   */\n      add\n        /* \"#utility.yul\":1337:1343   */\n      dup5\n        /* \"#utility.yul\":1293:1364   */\n      tag_121\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1149:1371   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1377:1476   */\n    tag_122:\n        /* \"#utility.yul\":1429:1435   */\n      0x00\n        /* \"#utility.yul\":1463:1468   */\n      dup2\n        /* \"#utility.yul\":1457:1469   */\n      mload\n        /* \"#utility.yul\":1447:1469   */\n      swap1\n      pop\n        /* \"#utility.yul\":1377:1476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1482:1651   */\n    tag_123:\n        /* \"#utility.yul\":1566:1577   */\n      0x00\n        /* \"#utility.yul\":1600:1606   */\n      dup3\n        /* \"#utility.yul\":1595:1598   */\n      dup3\n        /* \"#utility.yul\":1588:1607   */\n      mstore\n        /* \"#utility.yul\":1640:1644   */\n      0x20\n        /* \"#utility.yul\":1635:1638   */\n      dup3\n        /* \"#utility.yul\":1631:1645   */\n      add\n        /* \"#utility.yul\":1616:1645   */\n      swap1\n      pop\n        /* \"#utility.yul\":1482:1651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1657:1903   */\n    tag_124:\n        /* \"#utility.yul\":1738:1739   */\n      0x00\n        /* \"#utility.yul\":1748:1861   */\n    tag_172:\n        /* \"#utility.yul\":1762:1768   */\n      dup4\n        /* \"#utility.yul\":1759:1760   */\n      dup2\n        /* \"#utility.yul\":1756:1769   */\n      lt\n        /* \"#utility.yul\":1748:1861   */\n      iszero\n      tag_174\n      jumpi\n        /* \"#utility.yul\":1847:1848   */\n      dup1\n        /* \"#utility.yul\":1842:1845   */\n      dup3\n        /* \"#utility.yul\":1838:1849   */\n      add\n        /* \"#utility.yul\":1832:1850   */\n      mload\n        /* \"#utility.yul\":1828:1829   */\n      dup2\n        /* \"#utility.yul\":1823:1826   */\n      dup5\n        /* \"#utility.yul\":1819:1830   */\n      add\n        /* \"#utility.yul\":1812:1851   */\n      mstore\n        /* \"#utility.yul\":1784:1786   */\n      0x20\n        /* \"#utility.yul\":1781:1782   */\n      dup2\n        /* \"#utility.yul\":1777:1787   */\n      add\n        /* \"#utility.yul\":1772:1787   */\n      swap1\n      pop\n        /* \"#utility.yul\":1748:1861   */\n      jump(tag_172)\n    tag_174:\n        /* \"#utility.yul\":1895:1896   */\n      0x00\n        /* \"#utility.yul\":1886:1892   */\n      dup5\n        /* \"#utility.yul\":1881:1884   */\n      dup5\n        /* \"#utility.yul\":1877:1893   */\n      add\n        /* \"#utility.yul\":1870:1897   */\n      mstore\n        /* \"#utility.yul\":1719:1903   */\n      pop\n        /* \"#utility.yul\":1657:1903   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1909:2011   */\n    tag_125:\n        /* \"#utility.yul\":1950:1956   */\n      0x00\n        /* \"#utility.yul\":2001:2003   */\n      0x1f\n        /* \"#utility.yul\":1997:2004   */\n      not\n        /* \"#utility.yul\":1992:1994   */\n      0x1f\n        /* \"#utility.yul\":1985:1990   */\n      dup4\n        /* \"#utility.yul\":1981:1995   */\n      add\n        /* \"#utility.yul\":1977:2005   */\n      and\n        /* \"#utility.yul\":1967:2005   */\n      swap1\n      pop\n        /* \"#utility.yul\":1909:2011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2017:2394   */\n    tag_126:\n        /* \"#utility.yul\":2105:2108   */\n      0x00\n        /* \"#utility.yul\":2133:2172   */\n      tag_177\n        /* \"#utility.yul\":2166:2171   */\n      dup3\n        /* \"#utility.yul\":2133:2172   */\n      tag_122\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":2188:2259   */\n      tag_178\n        /* \"#utility.yul\":2252:2258   */\n      dup2\n        /* \"#utility.yul\":2247:2250   */\n      dup6\n        /* \"#utility.yul\":2188:2259   */\n      tag_123\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":2181:2259   */\n      swap4\n      pop\n        /* \"#utility.yul\":2268:2333   */\n      tag_179\n        /* \"#utility.yul\":2326:2332   */\n      dup2\n        /* \"#utility.yul\":2321:2324   */\n      dup6\n        /* \"#utility.yul\":2314:2318   */\n      0x20\n        /* \"#utility.yul\":2307:2312   */\n      dup7\n        /* \"#utility.yul\":2303:2319   */\n      add\n        /* \"#utility.yul\":2268:2333   */\n      tag_124\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2358:2387   */\n      tag_180\n        /* \"#utility.yul\":2380:2386   */\n      dup2\n        /* \"#utility.yul\":2358:2387   */\n      tag_125\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2353:2356   */\n      dup5\n        /* \"#utility.yul\":2349:2388   */\n      add\n        /* \"#utility.yul\":2342:2388   */\n      swap2\n      pop\n        /* \"#utility.yul\":2109:2394   */\n      pop\n        /* \"#utility.yul\":2017:2394   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2400:2713   */\n    tag_29:\n        /* \"#utility.yul\":2513:2517   */\n      0x00\n        /* \"#utility.yul\":2551:2553   */\n      0x20\n        /* \"#utility.yul\":2540:2549   */\n      dup3\n        /* \"#utility.yul\":2536:2554   */\n      add\n        /* \"#utility.yul\":2528:2554   */\n      swap1\n      pop\n        /* \"#utility.yul\":2600:2609   */\n      dup2\n        /* \"#utility.yul\":2594:2598   */\n      dup2\n        /* \"#utility.yul\":2590:2610   */\n      sub\n        /* \"#utility.yul\":2586:2587   */\n      0x00\n        /* \"#utility.yul\":2575:2584   */\n      dup4\n        /* \"#utility.yul\":2571:2588   */\n      add\n        /* \"#utility.yul\":2564:2611   */\n      mstore\n        /* \"#utility.yul\":2628:2706   */\n      tag_182\n        /* \"#utility.yul\":2701:2705   */\n      dup2\n        /* \"#utility.yul\":2692:2698   */\n      dup5\n        /* \"#utility.yul\":2628:2706   */\n      tag_126\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2620:2706   */\n      swap1\n      pop\n        /* \"#utility.yul\":2400:2713   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2719:2845   */\n    tag_127:\n        /* \"#utility.yul\":2756:2763   */\n      0x00\n        /* \"#utility.yul\":2796:2838   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2789:2794   */\n      dup3\n        /* \"#utility.yul\":2785:2839   */\n      and\n        /* \"#utility.yul\":2774:2839   */\n      swap1\n      pop\n        /* \"#utility.yul\":2719:2845   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2851:2947   */\n    tag_128:\n        /* \"#utility.yul\":2888:2895   */\n      0x00\n        /* \"#utility.yul\":2917:2941   */\n      tag_185\n        /* \"#utility.yul\":2935:2940   */\n      dup3\n        /* \"#utility.yul\":2917:2941   */\n      tag_127\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":2906:2941   */\n      swap1\n      pop\n        /* \"#utility.yul\":2851:2947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2953:3071   */\n    tag_129:\n        /* \"#utility.yul\":3040:3064   */\n      tag_187\n        /* \"#utility.yul\":3058:3063   */\n      dup2\n        /* \"#utility.yul\":3040:3064   */\n      tag_128\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":3035:3038   */\n      dup3\n        /* \"#utility.yul\":3028:3065   */\n      mstore\n        /* \"#utility.yul\":2953:3071   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3077:3299   */\n    tag_44:\n        /* \"#utility.yul\":3170:3174   */\n      0x00\n        /* \"#utility.yul\":3208:3210   */\n      0x20\n        /* \"#utility.yul\":3197:3206   */\n      dup3\n        /* \"#utility.yul\":3193:3211   */\n      add\n        /* \"#utility.yul\":3185:3211   */\n      swap1\n      pop\n        /* \"#utility.yul\":3221:3292   */\n      tag_189\n        /* \"#utility.yul\":3289:3290   */\n      0x00\n        /* \"#utility.yul\":3278:3287   */\n      dup4\n        /* \"#utility.yul\":3274:3291   */\n      add\n        /* \"#utility.yul\":3265:3271   */\n      dup5\n        /* \"#utility.yul\":3221:3292   */\n      tag_129\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":3077:3299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3305:3637   */\n    tag_48:\n        /* \"#utility.yul\":3426:3430   */\n      0x00\n        /* \"#utility.yul\":3464:3466   */\n      0x40\n        /* \"#utility.yul\":3453:3462   */\n      dup3\n        /* \"#utility.yul\":3449:3467   */\n      add\n        /* \"#utility.yul\":3441:3467   */\n      swap1\n      pop\n        /* \"#utility.yul\":3477:3548   */\n      tag_191\n        /* \"#utility.yul\":3545:3546   */\n      0x00\n        /* \"#utility.yul\":3534:3543   */\n      dup4\n        /* \"#utility.yul\":3530:3547   */\n      add\n        /* \"#utility.yul\":3521:3527   */\n      dup6\n        /* \"#utility.yul\":3477:3548   */\n      tag_121\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":3558:3630   */\n      tag_192\n        /* \"#utility.yul\":3626:3628   */\n      0x20\n        /* \"#utility.yul\":3615:3624   */\n      dup4\n        /* \"#utility.yul\":3611:3629   */\n      add\n        /* \"#utility.yul\":3602:3608   */\n      dup5\n        /* \"#utility.yul\":3558:3630   */\n      tag_121\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3305:3637   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3643:3765   */\n    tag_130:\n        /* \"#utility.yul\":3716:3740   */\n      tag_194\n        /* \"#utility.yul\":3734:3739   */\n      dup2\n        /* \"#utility.yul\":3716:3740   */\n      tag_128\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":3709:3714   */\n      dup2\n        /* \"#utility.yul\":3706:3741   */\n      eq\n        /* \"#utility.yul\":3696:3759   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":3755:3756   */\n      0x00\n        /* \"#utility.yul\":3752:3753   */\n      dup1\n        /* \"#utility.yul\":3745:3757   */\n      revert\n        /* \"#utility.yul\":3696:3759   */\n    tag_195:\n        /* \"#utility.yul\":3643:3765   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3771:3910   */\n    tag_131:\n        /* \"#utility.yul\":3817:3822   */\n      0x00\n        /* \"#utility.yul\":3855:3861   */\n      dup2\n        /* \"#utility.yul\":3842:3862   */\n      calldataload\n        /* \"#utility.yul\":3833:3862   */\n      swap1\n      pop\n        /* \"#utility.yul\":3871:3904   */\n      tag_197\n        /* \"#utility.yul\":3898:3903   */\n      dup2\n        /* \"#utility.yul\":3871:3904   */\n      tag_130\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3771:3910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3916:4245   */\n    tag_56:\n        /* \"#utility.yul\":3975:3981   */\n      0x00\n        /* \"#utility.yul\":4024:4026   */\n      0x20\n        /* \"#utility.yul\":4012:4021   */\n      dup3\n        /* \"#utility.yul\":4003:4010   */\n      dup5\n        /* \"#utility.yul\":3999:4022   */\n      sub\n        /* \"#utility.yul\":3995:4027   */\n      slt\n        /* \"#utility.yul\":3992:4111   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":4030:4109   */\n      tag_200\n      tag_116\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":3992:4111   */\n    tag_199:\n        /* \"#utility.yul\":4150:4151   */\n      0x00\n        /* \"#utility.yul\":4175:4228   */\n      tag_201\n        /* \"#utility.yul\":4220:4227   */\n      dup5\n        /* \"#utility.yul\":4211:4217   */\n      dup3\n        /* \"#utility.yul\":4200:4209   */\n      dup6\n        /* \"#utility.yul\":4196:4218   */\n      add\n        /* \"#utility.yul\":4175:4228   */\n      tag_131\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":4165:4228   */\n      swap2\n      pop\n        /* \"#utility.yul\":4121:4238   */\n      pop\n        /* \"#utility.yul\":3916:4245   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4251:4431   */\n    tag_132:\n        /* \"#utility.yul\":4299:4376   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4296:4297   */\n      0x00\n        /* \"#utility.yul\":4289:4377   */\n      mstore\n        /* \"#utility.yul\":4396:4400   */\n      0x11\n        /* \"#utility.yul\":4393:4394   */\n      0x04\n        /* \"#utility.yul\":4386:4401   */\n      mstore\n        /* \"#utility.yul\":4420:4424   */\n      0x24\n        /* \"#utility.yul\":4417:4418   */\n      0x00\n        /* \"#utility.yul\":4410:4425   */\n      revert\n        /* \"#utility.yul\":4437:4847   */\n    tag_61:\n        /* \"#utility.yul\":4477:4484   */\n      0x00\n        /* \"#utility.yul\":4500:4520   */\n      tag_204\n        /* \"#utility.yul\":4518:4519   */\n      dup3\n        /* \"#utility.yul\":4500:4520   */\n      tag_118\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":4495:4520   */\n      swap2\n      pop\n        /* \"#utility.yul\":4534:4554   */\n      tag_205\n        /* \"#utility.yul\":4552:4553   */\n      dup4\n        /* \"#utility.yul\":4534:4554   */\n      tag_118\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":4529:4554   */\n      swap3\n      pop\n        /* \"#utility.yul\":4589:4590   */\n      dup3\n        /* \"#utility.yul\":4586:4587   */\n      dup3\n        /* \"#utility.yul\":4582:4591   */\n      mul\n        /* \"#utility.yul\":4611:4641   */\n      tag_206\n        /* \"#utility.yul\":4629:4640   */\n      dup2\n        /* \"#utility.yul\":4611:4641   */\n      tag_118\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":4600:4641   */\n      swap2\n      pop\n        /* \"#utility.yul\":4790:4791   */\n      dup3\n        /* \"#utility.yul\":4781:4788   */\n      dup3\n        /* \"#utility.yul\":4777:4792   */\n      div\n        /* \"#utility.yul\":4774:4775   */\n      dup5\n        /* \"#utility.yul\":4771:4793   */\n      eq\n        /* \"#utility.yul\":4751:4752   */\n      dup4\n        /* \"#utility.yul\":4744:4753   */\n      iszero\n        /* \"#utility.yul\":4724:4807   */\n      or\n        /* \"#utility.yul\":4701:4840   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":4820:4838   */\n      tag_208\n      tag_132\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":4701:4840   */\n    tag_207:\n        /* \"#utility.yul\":4485:4847   */\n      pop\n        /* \"#utility.yul\":4437:4847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4853:5033   */\n    tag_133:\n        /* \"#utility.yul\":4901:4978   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4898:4899   */\n      0x00\n        /* \"#utility.yul\":4891:4979   */\n      mstore\n        /* \"#utility.yul\":4998:5002   */\n      0x12\n        /* \"#utility.yul\":4995:4996   */\n      0x04\n        /* \"#utility.yul\":4988:5003   */\n      mstore\n        /* \"#utility.yul\":5022:5026   */\n      0x24\n        /* \"#utility.yul\":5019:5020   */\n      0x00\n        /* \"#utility.yul\":5012:5027   */\n      revert\n        /* \"#utility.yul\":5039:5224   */\n    tag_63:\n        /* \"#utility.yul\":5079:5080   */\n      0x00\n        /* \"#utility.yul\":5096:5116   */\n      tag_211\n        /* \"#utility.yul\":5114:5115   */\n      dup3\n        /* \"#utility.yul\":5096:5116   */\n      tag_118\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":5091:5116   */\n      swap2\n      pop\n        /* \"#utility.yul\":5130:5150   */\n      tag_212\n        /* \"#utility.yul\":5148:5149   */\n      dup4\n        /* \"#utility.yul\":5130:5150   */\n      tag_118\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":5125:5150   */\n      swap3\n      pop\n        /* \"#utility.yul\":5169:5170   */\n      dup3\n        /* \"#utility.yul\":5159:5194   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":5174:5192   */\n      tag_214\n      tag_133\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":5159:5194   */\n    tag_213:\n        /* \"#utility.yul\":5216:5217   */\n      dup3\n        /* \"#utility.yul\":5213:5214   */\n      dup3\n        /* \"#utility.yul\":5209:5218   */\n      div\n        /* \"#utility.yul\":5204:5218   */\n      swap1\n      pop\n        /* \"#utility.yul\":5039:5224   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5230:5410   */\n    tag_134:\n        /* \"#utility.yul\":5278:5355   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5275:5276   */\n      0x00\n        /* \"#utility.yul\":5268:5356   */\n      mstore\n        /* \"#utility.yul\":5375:5379   */\n      0x22\n        /* \"#utility.yul\":5372:5373   */\n      0x04\n        /* \"#utility.yul\":5365:5380   */\n      mstore\n        /* \"#utility.yul\":5399:5403   */\n      0x24\n        /* \"#utility.yul\":5396:5397   */\n      0x00\n        /* \"#utility.yul\":5389:5404   */\n      revert\n        /* \"#utility.yul\":5416:5736   */\n    tag_71:\n        /* \"#utility.yul\":5460:5466   */\n      0x00\n        /* \"#utility.yul\":5497:5498   */\n      0x02\n        /* \"#utility.yul\":5491:5495   */\n      dup3\n        /* \"#utility.yul\":5487:5499   */\n      div\n        /* \"#utility.yul\":5477:5499   */\n      swap1\n      pop\n        /* \"#utility.yul\":5544:5545   */\n      0x01\n        /* \"#utility.yul\":5538:5542   */\n      dup3\n        /* \"#utility.yul\":5534:5546   */\n      and\n        /* \"#utility.yul\":5565:5583   */\n      dup1\n        /* \"#utility.yul\":5555:5636   */\n      tag_217\n      jumpi\n        /* \"#utility.yul\":5621:5625   */\n      0x7f\n        /* \"#utility.yul\":5613:5619   */\n      dup3\n        /* \"#utility.yul\":5609:5626   */\n      and\n        /* \"#utility.yul\":5599:5626   */\n      swap2\n      pop\n        /* \"#utility.yul\":5555:5636   */\n    tag_217:\n        /* \"#utility.yul\":5683:5685   */\n      0x20\n        /* \"#utility.yul\":5675:5681   */\n      dup3\n        /* \"#utility.yul\":5672:5686   */\n      lt\n        /* \"#utility.yul\":5652:5670   */\n      dup2\n        /* \"#utility.yul\":5649:5687   */\n      sub\n        /* \"#utility.yul\":5646:5730   */\n      tag_218\n      jumpi\n        /* \"#utility.yul\":5702:5720   */\n      tag_219\n      tag_134\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":5646:5730   */\n    tag_218:\n        /* \"#utility.yul\":5467:5736   */\n      pop\n        /* \"#utility.yul\":5416:5736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5742:5847   */\n    tag_135:\n        /* \"#utility.yul\":5778:5785   */\n      0x00\n        /* \"#utility.yul\":5818:5840   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":5811:5816   */\n      dup3\n        /* \"#utility.yul\":5807:5841   */\n      and\n        /* \"#utility.yul\":5796:5841   */\n      swap1\n      pop\n        /* \"#utility.yul\":5742:5847   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5853:5973   */\n    tag_136:\n        /* \"#utility.yul\":5925:5948   */\n      tag_222\n        /* \"#utility.yul\":5942:5947   */\n      dup2\n        /* \"#utility.yul\":5925:5948   */\n      tag_135\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":5918:5923   */\n      dup2\n        /* \"#utility.yul\":5915:5949   */\n      eq\n        /* \"#utility.yul\":5905:5967   */\n      tag_223\n      jumpi\n        /* \"#utility.yul\":5963:5964   */\n      0x00\n        /* \"#utility.yul\":5960:5961   */\n      dup1\n        /* \"#utility.yul\":5953:5965   */\n      revert\n        /* \"#utility.yul\":5905:5967   */\n    tag_223:\n        /* \"#utility.yul\":5853:5973   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5979:6120   */\n    tag_137:\n        /* \"#utility.yul\":6035:6040   */\n      0x00\n        /* \"#utility.yul\":6066:6072   */\n      dup2\n        /* \"#utility.yul\":6060:6073   */\n      mload\n        /* \"#utility.yul\":6051:6073   */\n      swap1\n      pop\n        /* \"#utility.yul\":6082:6114   */\n      tag_225\n        /* \"#utility.yul\":6108:6113   */\n      dup2\n        /* \"#utility.yul\":6082:6114   */\n      tag_136\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":5979:6120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6126:6202   */\n    tag_138:\n        /* \"#utility.yul\":6162:6169   */\n      0x00\n        /* \"#utility.yul\":6191:6196   */\n      dup2\n        /* \"#utility.yul\":6180:6196   */\n      swap1\n      pop\n        /* \"#utility.yul\":6126:6202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6208:6328   */\n    tag_139:\n        /* \"#utility.yul\":6280:6303   */\n      tag_228\n        /* \"#utility.yul\":6297:6302   */\n      dup2\n        /* \"#utility.yul\":6280:6303   */\n      tag_138\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":6273:6278   */\n      dup2\n        /* \"#utility.yul\":6270:6304   */\n      eq\n        /* \"#utility.yul\":6260:6322   */\n      tag_229\n      jumpi\n        /* \"#utility.yul\":6318:6319   */\n      0x00\n        /* \"#utility.yul\":6315:6316   */\n      dup1\n        /* \"#utility.yul\":6308:6320   */\n      revert\n        /* \"#utility.yul\":6260:6322   */\n    tag_229:\n        /* \"#utility.yul\":6208:6328   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6334:6475   */\n    tag_140:\n        /* \"#utility.yul\":6390:6395   */\n      0x00\n        /* \"#utility.yul\":6421:6427   */\n      dup2\n        /* \"#utility.yul\":6415:6428   */\n      mload\n        /* \"#utility.yul\":6406:6428   */\n      swap1\n      pop\n        /* \"#utility.yul\":6437:6469   */\n      tag_231\n        /* \"#utility.yul\":6463:6468   */\n      dup2\n        /* \"#utility.yul\":6437:6469   */\n      tag_139\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":6334:6475   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6481:6624   */\n    tag_141:\n        /* \"#utility.yul\":6538:6543   */\n      0x00\n        /* \"#utility.yul\":6569:6575   */\n      dup2\n        /* \"#utility.yul\":6563:6576   */\n      mload\n        /* \"#utility.yul\":6554:6576   */\n      swap1\n      pop\n        /* \"#utility.yul\":6585:6618   */\n      tag_233\n        /* \"#utility.yul\":6612:6617   */\n      dup2\n        /* \"#utility.yul\":6585:6618   */\n      tag_119\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":6481:6624   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6630:7601   */\n    tag_86:\n        /* \"#utility.yul\":6733:6739   */\n      0x00\n        /* \"#utility.yul\":6741:6747   */\n      dup1\n        /* \"#utility.yul\":6749:6755   */\n      0x00\n        /* \"#utility.yul\":6757:6763   */\n      dup1\n        /* \"#utility.yul\":6765:6771   */\n      0x00\n        /* \"#utility.yul\":6814:6817   */\n      0xa0\n        /* \"#utility.yul\":6802:6811   */\n      dup7\n        /* \"#utility.yul\":6793:6800   */\n      dup9\n        /* \"#utility.yul\":6789:6812   */\n      sub\n        /* \"#utility.yul\":6785:6818   */\n      slt\n        /* \"#utility.yul\":6782:6902   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":6821:6900   */\n      tag_236\n      tag_116\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":6782:6902   */\n    tag_235:\n        /* \"#utility.yul\":6941:6942   */\n      0x00\n        /* \"#utility.yul\":6966:7029   */\n      tag_237\n        /* \"#utility.yul\":7021:7028   */\n      dup9\n        /* \"#utility.yul\":7012:7018   */\n      dup3\n        /* \"#utility.yul\":7001:7010   */\n      dup10\n        /* \"#utility.yul\":6997:7019   */\n      add\n        /* \"#utility.yul\":6966:7029   */\n      tag_137\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":6956:7029   */\n      swap6\n      pop\n        /* \"#utility.yul\":6912:7039   */\n      pop\n        /* \"#utility.yul\":7078:7080   */\n      0x20\n        /* \"#utility.yul\":7104:7167   */\n      tag_238\n        /* \"#utility.yul\":7159:7166   */\n      dup9\n        /* \"#utility.yul\":7150:7156   */\n      dup3\n        /* \"#utility.yul\":7139:7148   */\n      dup10\n        /* \"#utility.yul\":7135:7157   */\n      add\n        /* \"#utility.yul\":7104:7167   */\n      tag_140\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":7094:7167   */\n      swap5\n      pop\n        /* \"#utility.yul\":7049:7177   */\n      pop\n        /* \"#utility.yul\":7216:7218   */\n      0x40\n        /* \"#utility.yul\":7242:7306   */\n      tag_239\n        /* \"#utility.yul\":7298:7305   */\n      dup9\n        /* \"#utility.yul\":7289:7295   */\n      dup3\n        /* \"#utility.yul\":7278:7287   */\n      dup10\n        /* \"#utility.yul\":7274:7296   */\n      add\n        /* \"#utility.yul\":7242:7306   */\n      tag_141\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":7232:7306   */\n      swap4\n      pop\n        /* \"#utility.yul\":7187:7316   */\n      pop\n        /* \"#utility.yul\":7355:7357   */\n      0x60\n        /* \"#utility.yul\":7381:7445   */\n      tag_240\n        /* \"#utility.yul\":7437:7444   */\n      dup9\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup10\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7381:7445   */\n      tag_141\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":7371:7445   */\n      swap3\n      pop\n        /* \"#utility.yul\":7326:7455   */\n      pop\n        /* \"#utility.yul\":7494:7497   */\n      0x80\n        /* \"#utility.yul\":7521:7584   */\n      tag_241\n        /* \"#utility.yul\":7576:7583   */\n      dup9\n        /* \"#utility.yul\":7567:7573   */\n      dup3\n        /* \"#utility.yul\":7556:7565   */\n      dup10\n        /* \"#utility.yul\":7552:7574   */\n      add\n        /* \"#utility.yul\":7521:7584   */\n      tag_137\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":7511:7584   */\n      swap2\n      pop\n        /* \"#utility.yul\":7465:7594   */\n      pop\n        /* \"#utility.yul\":6630:7601   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7607:7779   */\n    tag_142:\n        /* \"#utility.yul\":7747:7771   */\n      0x4d7573742062652070726f706f736564206f776e657200000000000000000000\n        /* \"#utility.yul\":7743:7744   */\n      0x00\n        /* \"#utility.yul\":7735:7741   */\n      dup3\n        /* \"#utility.yul\":7731:7745   */\n      add\n        /* \"#utility.yul\":7724:7772   */\n      mstore\n        /* \"#utility.yul\":7607:7779   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7785:8151   */\n    tag_143:\n        /* \"#utility.yul\":7927:7930   */\n      0x00\n        /* \"#utility.yul\":7948:8015   */\n      tag_244\n        /* \"#utility.yul\":8012:8014   */\n      0x16\n        /* \"#utility.yul\":8007:8010   */\n      dup4\n        /* \"#utility.yul\":7948:8015   */\n      tag_123\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7941:8015   */\n      swap2\n      pop\n        /* \"#utility.yul\":8024:8117   */\n      tag_245\n        /* \"#utility.yul\":8113:8116   */\n      dup3\n        /* \"#utility.yul\":8024:8117   */\n      tag_142\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":8142:8144   */\n      0x20\n        /* \"#utility.yul\":8137:8140   */\n      dup3\n        /* \"#utility.yul\":8133:8145   */\n      add\n        /* \"#utility.yul\":8126:8145   */\n      swap1\n      pop\n        /* \"#utility.yul\":7785:8151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8157:8576   */\n    tag_91:\n        /* \"#utility.yul\":8323:8327   */\n      0x00\n        /* \"#utility.yul\":8361:8363   */\n      0x20\n        /* \"#utility.yul\":8350:8359   */\n      dup3\n        /* \"#utility.yul\":8346:8364   */\n      add\n        /* \"#utility.yul\":8338:8364   */\n      swap1\n      pop\n        /* \"#utility.yul\":8410:8419   */\n      dup2\n        /* \"#utility.yul\":8404:8408   */\n      dup2\n        /* \"#utility.yul\":8400:8420   */\n      sub\n        /* \"#utility.yul\":8396:8397   */\n      0x00\n        /* \"#utility.yul\":8385:8394   */\n      dup4\n        /* \"#utility.yul\":8381:8398   */\n      add\n        /* \"#utility.yul\":8374:8421   */\n      mstore\n        /* \"#utility.yul\":8438:8569   */\n      tag_247\n        /* \"#utility.yul\":8564:8568   */\n      dup2\n        /* \"#utility.yul\":8438:8569   */\n      tag_143\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":8430:8569   */\n      swap1\n      pop\n        /* \"#utility.yul\":8157:8576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8582:8914   */\n    tag_97:\n        /* \"#utility.yul\":8703:8707   */\n      0x00\n        /* \"#utility.yul\":8741:8743   */\n      0x40\n        /* \"#utility.yul\":8730:8739   */\n      dup3\n        /* \"#utility.yul\":8726:8744   */\n      add\n        /* \"#utility.yul\":8718:8744   */\n      swap1\n      pop\n        /* \"#utility.yul\":8754:8825   */\n      tag_249\n        /* \"#utility.yul\":8822:8823   */\n      0x00\n        /* \"#utility.yul\":8811:8820   */\n      dup4\n        /* \"#utility.yul\":8807:8824   */\n      add\n        /* \"#utility.yul\":8798:8804   */\n      dup6\n        /* \"#utility.yul\":8754:8825   */\n      tag_129\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":8835:8907   */\n      tag_250\n        /* \"#utility.yul\":8903:8905   */\n      0x20\n        /* \"#utility.yul\":8892:8901   */\n      dup4\n        /* \"#utility.yul\":8888:8906   */\n      add\n        /* \"#utility.yul\":8879:8885   */\n      dup5\n        /* \"#utility.yul\":8835:8907   */\n      tag_121\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8582:8914   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8920:9010   */\n    tag_144:\n        /* \"#utility.yul\":8954:8961   */\n      0x00\n        /* \"#utility.yul\":8997:9002   */\n      dup2\n        /* \"#utility.yul\":8990:9003   */\n      iszero\n        /* \"#utility.yul\":8983:9004   */\n      iszero\n        /* \"#utility.yul\":8972:9004   */\n      swap1\n      pop\n        /* \"#utility.yul\":8920:9010   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9016:9132   */\n    tag_145:\n        /* \"#utility.yul\":9086:9107   */\n      tag_253\n        /* \"#utility.yul\":9101:9106   */\n      dup2\n        /* \"#utility.yul\":9086:9107   */\n      tag_144\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":9079:9084   */\n      dup2\n        /* \"#utility.yul\":9076:9108   */\n      eq\n        /* \"#utility.yul\":9066:9126   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":9122:9123   */\n      0x00\n        /* \"#utility.yul\":9119:9120   */\n      dup1\n        /* \"#utility.yul\":9112:9124   */\n      revert\n        /* \"#utility.yul\":9066:9126   */\n    tag_254:\n        /* \"#utility.yul\":9016:9132   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9138:9275   */\n    tag_146:\n        /* \"#utility.yul\":9192:9197   */\n      0x00\n        /* \"#utility.yul\":9223:9229   */\n      dup2\n        /* \"#utility.yul\":9217:9230   */\n      mload\n        /* \"#utility.yul\":9208:9230   */\n      swap1\n      pop\n        /* \"#utility.yul\":9239:9269   */\n      tag_256\n        /* \"#utility.yul\":9263:9268   */\n      dup2\n        /* \"#utility.yul\":9239:9269   */\n      tag_145\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9138:9275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9281:9626   */\n    tag_101:\n        /* \"#utility.yul\":9348:9354   */\n      0x00\n        /* \"#utility.yul\":9397:9399   */\n      0x20\n        /* \"#utility.yul\":9385:9394   */\n      dup3\n        /* \"#utility.yul\":9376:9383   */\n      dup5\n        /* \"#utility.yul\":9372:9395   */\n      sub\n        /* \"#utility.yul\":9368:9400   */\n      slt\n        /* \"#utility.yul\":9365:9484   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":9403:9482   */\n      tag_259\n      tag_116\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9365:9484   */\n    tag_258:\n        /* \"#utility.yul\":9523:9524   */\n      0x00\n        /* \"#utility.yul\":9548:9609   */\n      tag_260\n        /* \"#utility.yul\":9601:9608   */\n      dup5\n        /* \"#utility.yul\":9592:9598   */\n      dup3\n        /* \"#utility.yul\":9581:9590   */\n      dup6\n        /* \"#utility.yul\":9577:9599   */\n      add\n        /* \"#utility.yul\":9548:9609   */\n      tag_146\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":9538:9609   */\n      swap2\n      pop\n        /* \"#utility.yul\":9494:9619   */\n      pop\n        /* \"#utility.yul\":9281:9626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9632:9804   */\n    tag_147:\n        /* \"#utility.yul\":9772:9796   */\n      0x4f6e6c792063616c6c61626c65206279206f776e657200000000000000000000\n        /* \"#utility.yul\":9768:9769   */\n      0x00\n        /* \"#utility.yul\":9760:9766   */\n      dup3\n        /* \"#utility.yul\":9756:9770   */\n      add\n        /* \"#utility.yul\":9749:9797   */\n      mstore\n        /* \"#utility.yul\":9632:9804   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9810:10176   */\n    tag_148:\n        /* \"#utility.yul\":9952:9955   */\n      0x00\n        /* \"#utility.yul\":9973:10040   */\n      tag_263\n        /* \"#utility.yul\":10037:10039   */\n      0x16\n        /* \"#utility.yul\":10032:10035   */\n      dup4\n        /* \"#utility.yul\":9973:10040   */\n      tag_123\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":9966:10040   */\n      swap2\n      pop\n        /* \"#utility.yul\":10049:10142   */\n      tag_264\n        /* \"#utility.yul\":10138:10141   */\n      dup3\n        /* \"#utility.yul\":10049:10142   */\n      tag_147\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":10167:10169   */\n      0x20\n        /* \"#utility.yul\":10162:10165   */\n      dup3\n        /* \"#utility.yul\":10158:10170   */\n      add\n        /* \"#utility.yul\":10151:10170   */\n      swap1\n      pop\n        /* \"#utility.yul\":9810:10176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10182:10601   */\n    tag_110:\n        /* \"#utility.yul\":10348:10352   */\n      0x00\n        /* \"#utility.yul\":10386:10388   */\n      0x20\n        /* \"#utility.yul\":10375:10384   */\n      dup3\n        /* \"#utility.yul\":10371:10389   */\n      add\n        /* \"#utility.yul\":10363:10389   */\n      swap1\n      pop\n        /* \"#utility.yul\":10435:10444   */\n      dup2\n        /* \"#utility.yul\":10429:10433   */\n      dup2\n        /* \"#utility.yul\":10425:10445   */\n      sub\n        /* \"#utility.yul\":10421:10422   */\n      0x00\n        /* \"#utility.yul\":10410:10419   */\n      dup4\n        /* \"#utility.yul\":10406:10423   */\n      add\n        /* \"#utility.yul\":10399:10446   */\n      mstore\n        /* \"#utility.yul\":10463:10594   */\n      tag_266\n        /* \"#utility.yul\":10589:10593   */\n      dup2\n        /* \"#utility.yul\":10463:10594   */\n      tag_148\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":10455:10594   */\n      swap1\n      pop\n        /* \"#utility.yul\":10182:10601   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10607:10780   */\n    tag_149:\n        /* \"#utility.yul\":10747:10772   */\n      0x43616e6e6f74207472616e7366657220746f2073656c66000000000000000000\n        /* \"#utility.yul\":10743:10744   */\n      0x00\n        /* \"#utility.yul\":10735:10741   */\n      dup3\n        /* \"#utility.yul\":10731:10745   */\n      add\n        /* \"#utility.yul\":10724:10773   */\n      mstore\n        /* \"#utility.yul\":10607:10780   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10786:11152   */\n    tag_150:\n        /* \"#utility.yul\":10928:10931   */\n      0x00\n        /* \"#utility.yul\":10949:11016   */\n      tag_269\n        /* \"#utility.yul\":11013:11015   */\n      0x17\n        /* \"#utility.yul\":11008:11011   */\n      dup4\n        /* \"#utility.yul\":10949:11016   */\n      tag_123\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":10942:11016   */\n      swap2\n      pop\n        /* \"#utility.yul\":11025:11118   */\n      tag_270\n        /* \"#utility.yul\":11114:11117   */\n      dup3\n        /* \"#utility.yul\":11025:11118   */\n      tag_149\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":11143:11145   */\n      0x20\n        /* \"#utility.yul\":11138:11141   */\n      dup3\n        /* \"#utility.yul\":11134:11146   */\n      add\n        /* \"#utility.yul\":11127:11146   */\n      swap1\n      pop\n        /* \"#utility.yul\":10786:11152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11158:11577   */\n    tag_114:\n        /* \"#utility.yul\":11324:11328   */\n      0x00\n        /* \"#utility.yul\":11362:11364   */\n      0x20\n        /* \"#utility.yul\":11351:11360   */\n      dup3\n        /* \"#utility.yul\":11347:11365   */\n      add\n        /* \"#utility.yul\":11339:11365   */\n      swap1\n      pop\n        /* \"#utility.yul\":11411:11420   */\n      dup2\n        /* \"#utility.yul\":11405:11409   */\n      dup2\n        /* \"#utility.yul\":11401:11421   */\n      sub\n        /* \"#utility.yul\":11397:11398   */\n      0x00\n        /* \"#utility.yul\":11386:11395   */\n      dup4\n        /* \"#utility.yul\":11382:11399   */\n      add\n        /* \"#utility.yul\":11375:11422   */\n      mstore\n        /* \"#utility.yul\":11439:11570   */\n      tag_272\n        /* \"#utility.yul\":11565:11569   */\n      dup2\n        /* \"#utility.yul\":11439:11570   */\n      tag_150\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":11431:11570   */\n      swap1\n      pop\n        /* \"#utility.yul\":11158:11577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122039933867532f54c68c612aa4c105709806c109c7a282494402db4f37891c280164736f6c63430008170033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1328": {
									"entryPoint": null,
									"id": 1328,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_148": {
									"entryPoint": null,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_91": {
									"entryPoint": null,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_232": {
									"entryPoint": 764,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1356,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1075,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2": {
									"entryPoint": 1921,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2": {
									"entryPoint": 2031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1262,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1413,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7359:13",
										"nodeType": "YulBlock",
										"src": "0:7359:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:13",
													"nodeType": "YulBlock",
													"src": "66:40:13",
													"statements": [
														{
															"nativeSrc": "77:22:13",
															"nodeType": "YulAssignment",
															"src": "77:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:13"
																},
																"nativeSrc": "87:12:13",
																"nodeType": "YulFunctionCall",
																"src": "87:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:13",
														"nodeType": "YulTypedName",
														"src": "49:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:13",
														"nodeType": "YulTypedName",
														"src": "59:6:13",
														"type": ""
													}
												],
												"src": "7:99:13"
											},
											{
												"body": {
													"nativeSrc": "140:152:13",
													"nodeType": "YulBlock",
													"src": "140:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:13",
																		"nodeType": "YulLiteral",
																		"src": "157:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:13",
																		"nodeType": "YulLiteral",
																		"src": "160:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:13"
																},
																"nativeSrc": "150:88:13",
																"nodeType": "YulFunctionCall",
																"src": "150:88:13"
															},
															"nativeSrc": "150:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:13",
																		"nodeType": "YulLiteral",
																		"src": "254:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:13",
																		"nodeType": "YulLiteral",
																		"src": "257:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:13"
																},
																"nativeSrc": "247:15:13",
																"nodeType": "YulFunctionCall",
																"src": "247:15:13"
															},
															"nativeSrc": "247:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:13",
																		"nodeType": "YulLiteral",
																		"src": "278:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:13",
																		"nodeType": "YulLiteral",
																		"src": "281:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:13"
																},
																"nativeSrc": "271:15:13",
																"nodeType": "YulFunctionCall",
																"src": "271:15:13"
															},
															"nativeSrc": "271:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:13"
											},
											{
												"body": {
													"nativeSrc": "326:152:13",
													"nodeType": "YulBlock",
													"src": "326:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:13",
																		"nodeType": "YulLiteral",
																		"src": "343:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:13",
																		"nodeType": "YulLiteral",
																		"src": "346:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:13"
																},
																"nativeSrc": "336:88:13",
																"nodeType": "YulFunctionCall",
																"src": "336:88:13"
															},
															"nativeSrc": "336:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:13",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:13",
																		"nodeType": "YulLiteral",
																		"src": "443:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nativeSrc": "433:15:13",
																"nodeType": "YulFunctionCall",
																"src": "433:15:13"
															},
															"nativeSrc": "433:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:13",
																		"nodeType": "YulLiteral",
																		"src": "464:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:13",
																		"nodeType": "YulLiteral",
																		"src": "467:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:13"
																},
																"nativeSrc": "457:15:13",
																"nodeType": "YulFunctionCall",
																"src": "457:15:13"
															},
															"nativeSrc": "457:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:13"
											},
											{
												"body": {
													"nativeSrc": "535:269:13",
													"nodeType": "YulBlock",
													"src": "535:269:13",
													"statements": [
														{
															"nativeSrc": "545:22:13",
															"nodeType": "YulAssignment",
															"src": "545:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:13",
																		"nodeType": "YulLiteral",
																		"src": "565:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:13"
																},
																"nativeSrc": "555:12:13",
																"nodeType": "YulFunctionCall",
																"src": "555:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:13"
																}
															]
														},
														{
															"nativeSrc": "576:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:13",
																		"nodeType": "YulLiteral",
																		"src": "612:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:13"
																},
																"nativeSrc": "602:12:13",
																"nodeType": "YulFunctionCall",
																"src": "602:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:13",
																	"nodeType": "YulTypedName",
																	"src": "580:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:13",
																"nodeType": "YulBlock",
																"src": "653:51:13",
																"statements": [
																	{
																		"nativeSrc": "667:27:13",
																		"nodeType": "YulAssignment",
																		"src": "667:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:13",
																					"nodeType": "YulLiteral",
																					"src": "689:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:13"
																			},
																			"nativeSrc": "677:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:13"
																},
																"nativeSrc": "626:26:13",
																"nodeType": "YulFunctionCall",
																"src": "626:26:13"
															},
															"nativeSrc": "623:81:13",
															"nodeType": "YulIf",
															"src": "623:81:13"
														},
														{
															"body": {
																"nativeSrc": "756:42:13",
																"nodeType": "YulBlock",
																"src": "756:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:13"
																			},
																			"nativeSrc": "770:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:13"
																		},
																		"nativeSrc": "770:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:13",
																				"nodeType": "YulLiteral",
																				"src": "751:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:13"
																		},
																		"nativeSrc": "740:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:13"
																},
																"nativeSrc": "717:38:13",
																"nodeType": "YulFunctionCall",
																"src": "717:38:13"
															},
															"nativeSrc": "714:84:13",
															"nodeType": "YulIf",
															"src": "714:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:13",
														"nodeType": "YulTypedName",
														"src": "519:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:13",
														"nodeType": "YulTypedName",
														"src": "528:6:13",
														"type": ""
													}
												],
												"src": "484:320:13"
											},
											{
												"body": {
													"nativeSrc": "864:87:13",
													"nodeType": "YulBlock",
													"src": "864:87:13",
													"statements": [
														{
															"nativeSrc": "874:11:13",
															"nodeType": "YulAssignment",
															"src": "874:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:13",
																"nodeType": "YulIdentifier",
																"src": "882:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:13",
																		"nodeType": "YulLiteral",
																		"src": "902:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:13"
																},
																"nativeSrc": "895:14:13",
																"nodeType": "YulFunctionCall",
																"src": "895:14:13"
															},
															"nativeSrc": "895:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:13"
														},
														{
															"nativeSrc": "918:26:13",
															"nodeType": "YulAssignment",
															"src": "918:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:13",
																		"nodeType": "YulLiteral",
																		"src": "936:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:13",
																		"nodeType": "YulLiteral",
																		"src": "939:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:13"
																},
																"nativeSrc": "926:18:13",
																"nodeType": "YulFunctionCall",
																"src": "926:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:13",
														"nodeType": "YulTypedName",
														"src": "851:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:13",
														"nodeType": "YulTypedName",
														"src": "859:4:13",
														"type": ""
													}
												],
												"src": "810:141:13"
											},
											{
												"body": {
													"nativeSrc": "1001:49:13",
													"nodeType": "YulBlock",
													"src": "1001:49:13",
													"statements": [
														{
															"nativeSrc": "1011:33:13",
															"nodeType": "YulAssignment",
															"src": "1011:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:13"
																		},
																		"nativeSrc": "1025:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:13"
																},
																"nativeSrc": "1021:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:13",
														"nodeType": "YulTypedName",
														"src": "984:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:13",
														"nodeType": "YulTypedName",
														"src": "994:6:13",
														"type": ""
													}
												],
												"src": "957:93:13"
											},
											{
												"body": {
													"nativeSrc": "1109:54:13",
													"nodeType": "YulBlock",
													"src": "1109:54:13",
													"statements": [
														{
															"nativeSrc": "1119:37:13",
															"nodeType": "YulAssignment",
															"src": "1119:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:13"
																},
																"nativeSrc": "1140:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:13",
														"nodeType": "YulTypedName",
														"src": "1084:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:13",
														"nodeType": "YulTypedName",
														"src": "1090:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:13",
														"nodeType": "YulTypedName",
														"src": "1100:8:13",
														"type": ""
													}
												],
												"src": "1056:107:13"
											},
											{
												"body": {
													"nativeSrc": "1245:317:13",
													"nodeType": "YulBlock",
													"src": "1245:317:13",
													"statements": [
														{
															"nativeSrc": "1255:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:13"
																},
																"nativeSrc": "1272:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:13",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:13",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:13"
																},
																"nativeSrc": "1311:97:13",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:13",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:13",
															"nodeType": "YulAssignment",
															"src": "1417:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:13"
																},
																"nativeSrc": "1429:39:13",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:13"
																}
															]
														},
														{
															"nativeSrc": "1477:30:13",
															"nodeType": "YulAssignment",
															"src": "1477:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:13"
																		},
																		"nativeSrc": "1497:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:13"
																},
																"nativeSrc": "1486:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:13"
																}
															]
														},
														{
															"nativeSrc": "1516:40:13",
															"nodeType": "YulAssignment",
															"src": "1516:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:13"
																		},
																		"nativeSrc": "1536:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:13"
																},
																"nativeSrc": "1526:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:13",
														"nodeType": "YulTypedName",
														"src": "1206:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:13",
														"nodeType": "YulTypedName",
														"src": "1213:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:13",
														"nodeType": "YulTypedName",
														"src": "1225:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:13",
														"nodeType": "YulTypedName",
														"src": "1238:6:13",
														"type": ""
													}
												],
												"src": "1169:393:13"
											},
											{
												"body": {
													"nativeSrc": "1613:32:13",
													"nodeType": "YulBlock",
													"src": "1613:32:13",
													"statements": [
														{
															"nativeSrc": "1623:16:13",
															"nodeType": "YulAssignment",
															"src": "1623:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:13",
																"nodeType": "YulIdentifier",
																"src": "1634:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:13",
														"nodeType": "YulTypedName",
														"src": "1595:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:13",
														"nodeType": "YulTypedName",
														"src": "1605:7:13",
														"type": ""
													}
												],
												"src": "1568:77:13"
											},
											{
												"body": {
													"nativeSrc": "1683:28:13",
													"nodeType": "YulBlock",
													"src": "1683:28:13",
													"statements": [
														{
															"nativeSrc": "1693:12:13",
															"nodeType": "YulAssignment",
															"src": "1693:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:13",
																"nodeType": "YulIdentifier",
																"src": "1700:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:13",
														"nodeType": "YulTypedName",
														"src": "1669:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:13",
														"nodeType": "YulTypedName",
														"src": "1679:3:13",
														"type": ""
													}
												],
												"src": "1651:60:13"
											},
											{
												"body": {
													"nativeSrc": "1777:82:13",
													"nodeType": "YulBlock",
													"src": "1777:82:13",
													"statements": [
														{
															"nativeSrc": "1787:66:13",
															"nodeType": "YulAssignment",
															"src": "1787:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:13"
																				},
																				"nativeSrc": "1827:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:13"
																		},
																		"nativeSrc": "1818:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:13"
																},
																"nativeSrc": "1800:53:13",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:13",
														"nodeType": "YulTypedName",
														"src": "1757:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:13",
														"nodeType": "YulTypedName",
														"src": "1767:9:13",
														"type": ""
													}
												],
												"src": "1717:142:13"
											},
											{
												"body": {
													"nativeSrc": "1912:28:13",
													"nodeType": "YulBlock",
													"src": "1912:28:13",
													"statements": [
														{
															"nativeSrc": "1922:12:13",
															"nodeType": "YulAssignment",
															"src": "1922:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:13",
																"nodeType": "YulIdentifier",
																"src": "1929:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:13",
														"nodeType": "YulTypedName",
														"src": "1898:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:13",
														"nodeType": "YulTypedName",
														"src": "1908:3:13",
														"type": ""
													}
												],
												"src": "1865:75:13"
											},
											{
												"body": {
													"nativeSrc": "2022:193:13",
													"nodeType": "YulBlock",
													"src": "2022:193:13",
													"statements": [
														{
															"nativeSrc": "2032:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:13"
																},
																"nativeSrc": "2056:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:13",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:13"
																				},
																				"nativeSrc": "2145:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:13"
																				},
																				"nativeSrc": "2166:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:13"
																		},
																		"nativeSrc": "2117:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:13"
																},
																"nativeSrc": "2104:105:13",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:13"
															},
															"nativeSrc": "2104:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:13",
														"nodeType": "YulTypedName",
														"src": "1999:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:13",
														"nodeType": "YulTypedName",
														"src": "2005:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:13",
														"nodeType": "YulTypedName",
														"src": "2013:7:13",
														"type": ""
													}
												],
												"src": "1946:269:13"
											},
											{
												"body": {
													"nativeSrc": "2270:24:13",
													"nodeType": "YulBlock",
													"src": "2270:24:13",
													"statements": [
														{
															"nativeSrc": "2280:8:13",
															"nodeType": "YulAssignment",
															"src": "2280:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:13",
																"nodeType": "YulLiteral",
																"src": "2287:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:13",
														"nodeType": "YulTypedName",
														"src": "2266:3:13",
														"type": ""
													}
												],
												"src": "2221:73:13"
											},
											{
												"body": {
													"nativeSrc": "2353:136:13",
													"nodeType": "YulBlock",
													"src": "2353:136:13",
													"statements": [
														{
															"nativeSrc": "2363:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:13"
																},
																"nativeSrc": "2377:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:13"
																},
																"nativeSrc": "2418:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:13"
															},
															"nativeSrc": "2418:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:13",
														"nodeType": "YulTypedName",
														"src": "2339:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:13",
														"nodeType": "YulTypedName",
														"src": "2345:6:13",
														"type": ""
													}
												],
												"src": "2300:189:13"
											},
											{
												"body": {
													"nativeSrc": "2545:136:13",
													"nodeType": "YulBlock",
													"src": "2545:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:13",
																"nodeType": "YulBlock",
																"src": "2612:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:13"
																			},
																			"nativeSrc": "2626:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:13"
																		},
																		"nativeSrc": "2626:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:13"
																},
																"nativeSrc": "2562:14:13",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:13"
															},
															"nativeSrc": "2555:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:13",
																"nodeType": "YulBlock",
																"src": "2577:26:13",
																"statements": [
																	{
																		"nativeSrc": "2579:22:13",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:13"
																			},
																			"nativeSrc": "2588:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:13",
																"nodeType": "YulBlock",
																"src": "2559:2:13",
																"statements": []
															},
															"src": "2555:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:13",
														"nodeType": "YulTypedName",
														"src": "2533:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:13",
														"nodeType": "YulTypedName",
														"src": "2540:3:13",
														"type": ""
													}
												],
												"src": "2495:186:13"
											},
											{
												"body": {
													"nativeSrc": "2766:464:13",
													"nodeType": "YulBlock",
													"src": "2766:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:13",
																"nodeType": "YulBlock",
																"src": "2792:431:13",
																"statements": [
																	{
																		"nativeSrc": "2806:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:13"
																			},
																			"nativeSrc": "2822:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:13",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:13"
																					},
																					"nativeSrc": "2906:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:13"
																			},
																			"nativeSrc": "2892:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:13",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:13",
																			"nodeType": "YulBlock",
																			"src": "3093:27:13",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:13",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:13",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:13"
																			},
																			"nativeSrc": "3074:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:13"
																		},
																		"nativeSrc": "3071:49:13",
																		"nodeType": "YulIf",
																		"src": "3071:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:13"
																							},
																							"nativeSrc": "3189:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:13"
																					},
																					"nativeSrc": "3175:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:13"
																			},
																			"nativeSrc": "3133:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:13"
																		},
																		"nativeSrc": "3133:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:13"
																},
																"nativeSrc": "2780:11:13",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:13"
															},
															"nativeSrc": "2777:446:13",
															"nodeType": "YulIf",
															"src": "2777:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:13",
														"nodeType": "YulTypedName",
														"src": "2742:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:13",
														"nodeType": "YulTypedName",
														"src": "2749:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:13",
														"nodeType": "YulTypedName",
														"src": "2754:10:13",
														"type": ""
													}
												],
												"src": "2687:543:13"
											},
											{
												"body": {
													"nativeSrc": "3299:54:13",
													"nodeType": "YulBlock",
													"src": "3299:54:13",
													"statements": [
														{
															"nativeSrc": "3309:37:13",
															"nodeType": "YulAssignment",
															"src": "3309:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:13"
																},
																"nativeSrc": "3330:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:13",
														"nodeType": "YulTypedName",
														"src": "3274:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:13",
														"nodeType": "YulTypedName",
														"src": "3280:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:13",
														"nodeType": "YulTypedName",
														"src": "3290:8:13",
														"type": ""
													}
												],
												"src": "3236:117:13"
											},
											{
												"body": {
													"nativeSrc": "3410:118:13",
													"nodeType": "YulBlock",
													"src": "3410:118:13",
													"statements": [
														{
															"nativeSrc": "3420:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:13"
																				},
																				"nativeSrc": "3465:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:13"
																				},
																				"nativeSrc": "3480:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:13"
																		},
																		"nativeSrc": "3436:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:13"
																},
																"nativeSrc": "3432:56:13",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:13",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:13",
															"nodeType": "YulAssignment",
															"src": "3497:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:13"
																},
																"nativeSrc": "3507:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:13",
														"nodeType": "YulTypedName",
														"src": "3387:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:13",
														"nodeType": "YulTypedName",
														"src": "3393:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:13",
														"nodeType": "YulTypedName",
														"src": "3403:6:13",
														"type": ""
													}
												],
												"src": "3359:169:13"
											},
											{
												"body": {
													"nativeSrc": "3614:214:13",
													"nodeType": "YulBlock",
													"src": "3614:214:13",
													"statements": [
														{
															"nativeSrc": "3747:37:13",
															"nodeType": "YulAssignment",
															"src": "3747:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:13"
																},
																"nativeSrc": "3755:29:13",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:13"
																}
															]
														},
														{
															"nativeSrc": "3793:29:13",
															"nodeType": "YulAssignment",
															"src": "3793:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:13"
																		},
																		"nativeSrc": "3810:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:13"
																},
																"nativeSrc": "3801:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:13",
														"nodeType": "YulTypedName",
														"src": "3595:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:13",
														"nodeType": "YulTypedName",
														"src": "3601:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:13",
														"nodeType": "YulTypedName",
														"src": "3609:4:13",
														"type": ""
													}
												],
												"src": "3533:295:13"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:13",
													"nodeType": "YulBlock",
													"src": "3925:1303:13",
													"statements": [
														{
															"nativeSrc": "3936:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:13"
																},
																"nativeSrc": "3950:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:13",
																"nodeType": "YulBlock",
																"src": "4072:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:13"
																			},
																			"nativeSrc": "4074:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:13"
																		},
																		"nativeSrc": "4074:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:13",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:13"
																},
																"nativeSrc": "4041:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:13"
															},
															"nativeSrc": "4038:56:13",
															"nodeType": "YulIf",
															"src": "4038:56:13"
														},
														{
															"nativeSrc": "4104:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:13"
																		},
																		"nativeSrc": "4144:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:13"
																},
																"nativeSrc": "4118:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:13"
																},
																"nativeSrc": "4203:67:13",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:13"
															},
															"nativeSrc": "4203:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:13"
														},
														{
															"nativeSrc": "4280:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:13",
																"nodeType": "YulLiteral",
																"src": "4297:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:13",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:13",
															"nodeType": "YulAssignment",
															"src": "4308:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:13",
																"nodeType": "YulLiteral",
																"src": "4321:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:13",
																		"nodeType": "YulBlock",
																		"src": "4372:611:13",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:13",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:13"
																							},
																							"nativeSrc": "4413:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:13"
																					},
																					"nativeSrc": "4401:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:13",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:13"
																					},
																					"nativeSrc": "4451:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:13",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:13",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:13",
																					"nodeType": "YulBlock",
																					"src": "4569:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:13"
																												},
																												"nativeSrc": "4608:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:13"
																										},
																										"nativeSrc": "4602:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:13"
																								},
																								"nativeSrc": "4587:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:13"
																							},
																							"nativeSrc": "4587:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:13"
																						},
																						{
																							"nativeSrc": "4646:24:13",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:13",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:13"
																								},
																								"nativeSrc": "4656:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:13",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:13",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:13"
																								},
																								"nativeSrc": "4700:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:13"
																					},
																					"nativeSrc": "4532:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:13"
																				},
																				"nativeSrc": "4524:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:13",
																					"nodeType": "YulBlock",
																					"src": "4547:21:13",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:13",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:13",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:13"
																								},
																								"nativeSrc": "4554:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:13",
																					"nodeType": "YulBlock",
																					"src": "4528:3:13",
																					"statements": []
																				},
																				"src": "4524:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:13",
																					"nodeType": "YulBlock",
																					"src": "4768:156:13",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:13"
																										},
																										"nativeSrc": "4809:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:13"
																								},
																								"nativeSrc": "4803:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:13",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:13",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:13"
																												},
																												"nativeSrc": "4891:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:13"
																										},
																										"nativeSrc": "4861:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:13"
																								},
																								"nativeSrc": "4846:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:13"
																							},
																							"nativeSrc": "4846:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:13"
																					},
																					"nativeSrc": "4748:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:13"
																				},
																				"nativeSrc": "4745:179:13",
																				"nodeType": "YulIf",
																				"src": "4745:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:13",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:13"
																									},
																									"nativeSrc": "4954:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:13",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:13"
																							},
																							"nativeSrc": "4950:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:13"
																					},
																					"nativeSrc": "4937:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:13"
																				},
																				"nativeSrc": "4937:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:13"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:13",
																	"nodeType": "YulCase",
																	"src": "4365:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:13",
																		"nodeType": "YulBlock",
																		"src": "5000:222:13",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:13",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:13",
																					"nodeType": "YulBlock",
																					"src": "5051:67:13",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:13",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:13"
																										},
																										"nativeSrc": "5084:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:13"
																								},
																								"nativeSrc": "5078:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:13"
																				},
																				"nativeSrc": "5041:77:13",
																				"nodeType": "YulIf",
																				"src": "5041:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:13"
																							},
																							"nativeSrc": "5144:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:13"
																					},
																					"nativeSrc": "5131:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:13"
																				},
																				"nativeSrc": "5131:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:13"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:13",
																	"nodeType": "YulCase",
																	"src": "4992:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:13"
																},
																"nativeSrc": "4342:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:13"
															},
															"nativeSrc": "4335:887:13",
															"nodeType": "YulSwitch",
															"src": "4335:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:13",
														"nodeType": "YulTypedName",
														"src": "3914:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:13",
														"nodeType": "YulTypedName",
														"src": "3920:3:13",
														"type": ""
													}
												],
												"src": "3833:1395:13"
											},
											{
												"body": {
													"nativeSrc": "5330:73:13",
													"nodeType": "YulBlock",
													"src": "5330:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5347:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5347:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5352:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5352:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5340:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:13"
																},
																"nativeSrc": "5340:19:13",
																"nodeType": "YulFunctionCall",
																"src": "5340:19:13"
															},
															"nativeSrc": "5340:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "5340:19:13"
														},
														{
															"nativeSrc": "5368:29:13",
															"nodeType": "YulAssignment",
															"src": "5368:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5387:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5387:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5392:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5392:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5383:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5383:3:13"
																},
																"nativeSrc": "5383:14:13",
																"nodeType": "YulFunctionCall",
																"src": "5383:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5368:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "5368:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5234:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5302:3:13",
														"nodeType": "YulTypedName",
														"src": "5302:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5307:6:13",
														"nodeType": "YulTypedName",
														"src": "5307:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5318:11:13",
														"nodeType": "YulTypedName",
														"src": "5318:11:13",
														"type": ""
													}
												],
												"src": "5234:169:13"
											},
											{
												"body": {
													"nativeSrc": "5515:68:13",
													"nodeType": "YulBlock",
													"src": "5515:68:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5537:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5537:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5545:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5545:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:13"
																		},
																		"nativeSrc": "5533:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
																		"kind": "string",
																		"nativeSrc": "5549:26:13",
																		"nodeType": "YulLiteral",
																		"src": "5549:26:13",
																		"type": "",
																		"value": "Cannot set owner to zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:13"
																},
																"nativeSrc": "5526:50:13",
																"nodeType": "YulFunctionCall",
																"src": "5526:50:13"
															},
															"nativeSrc": "5526:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "5526:50:13"
														}
													]
												},
												"name": "store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
												"nativeSrc": "5409:174:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5507:6:13",
														"nodeType": "YulTypedName",
														"src": "5507:6:13",
														"type": ""
													}
												],
												"src": "5409:174:13"
											},
											{
												"body": {
													"nativeSrc": "5735:220:13",
													"nodeType": "YulBlock",
													"src": "5735:220:13",
													"statements": [
														{
															"nativeSrc": "5745:74:13",
															"nodeType": "YulAssignment",
															"src": "5745:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5811:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5811:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5816:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5816:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5752:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "5752:58:13"
																},
																"nativeSrc": "5752:67:13",
																"nodeType": "YulFunctionCall",
																"src": "5752:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5745:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5745:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5917:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5917:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																	"nativeSrc": "5828:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "5828:88:13"
																},
																"nativeSrc": "5828:93:13",
																"nodeType": "YulFunctionCall",
																"src": "5828:93:13"
															},
															"nativeSrc": "5828:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "5828:93:13"
														},
														{
															"nativeSrc": "5930:19:13",
															"nodeType": "YulAssignment",
															"src": "5930:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5941:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5941:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5946:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5946:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5937:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5937:3:13"
																},
																"nativeSrc": "5937:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5937:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5930:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5589:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5723:3:13",
														"nodeType": "YulTypedName",
														"src": "5723:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5731:3:13",
														"nodeType": "YulTypedName",
														"src": "5731:3:13",
														"type": ""
													}
												],
												"src": "5589:366:13"
											},
											{
												"body": {
													"nativeSrc": "6132:248:13",
													"nodeType": "YulBlock",
													"src": "6132:248:13",
													"statements": [
														{
															"nativeSrc": "6142:26:13",
															"nodeType": "YulAssignment",
															"src": "6142:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6154:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6154:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6165:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6165:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6150:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6150:3:13"
																},
																"nativeSrc": "6150:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6150:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6142:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6142:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6189:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6189:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6200:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6200:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6185:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6185:3:13"
																		},
																		"nativeSrc": "6185:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6185:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "6208:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6208:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6214:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6214:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6204:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6204:3:13"
																		},
																		"nativeSrc": "6204:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6204:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6178:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6178:6:13"
																},
																"nativeSrc": "6178:47:13",
																"nodeType": "YulFunctionCall",
																"src": "6178:47:13"
															},
															"nativeSrc": "6178:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "6178:47:13"
														},
														{
															"nativeSrc": "6234:139:13",
															"nodeType": "YulAssignment",
															"src": "6234:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6368:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6368:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6242:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "6242:124:13"
																},
																"nativeSrc": "6242:131:13",
																"nodeType": "YulFunctionCall",
																"src": "6242:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6234:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6234:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5961:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6112:9:13",
														"nodeType": "YulTypedName",
														"src": "6112:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6127:4:13",
														"nodeType": "YulTypedName",
														"src": "6127:4:13",
														"type": ""
													}
												],
												"src": "5961:419:13"
											},
											{
												"body": {
													"nativeSrc": "6492:67:13",
													"nodeType": "YulBlock",
													"src": "6492:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6514:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6514:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6522:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6522:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6510:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6510:3:13"
																		},
																		"nativeSrc": "6510:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6510:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "6526:25:13",
																		"nodeType": "YulLiteral",
																		"src": "6526:25:13",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6503:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6503:6:13"
																},
																"nativeSrc": "6503:49:13",
																"nodeType": "YulFunctionCall",
																"src": "6503:49:13"
															},
															"nativeSrc": "6503:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "6503:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
												"nativeSrc": "6386:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6484:6:13",
														"nodeType": "YulTypedName",
														"src": "6484:6:13",
														"type": ""
													}
												],
												"src": "6386:173:13"
											},
											{
												"body": {
													"nativeSrc": "6711:220:13",
													"nodeType": "YulBlock",
													"src": "6711:220:13",
													"statements": [
														{
															"nativeSrc": "6721:74:13",
															"nodeType": "YulAssignment",
															"src": "6721:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6787:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6787:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6792:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6792:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6728:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "6728:58:13"
																},
																"nativeSrc": "6728:67:13",
																"nodeType": "YulFunctionCall",
																"src": "6728:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6721:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6721:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6893:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6893:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																	"nativeSrc": "6804:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "6804:88:13"
																},
																"nativeSrc": "6804:93:13",
																"nodeType": "YulFunctionCall",
																"src": "6804:93:13"
															},
															"nativeSrc": "6804:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "6804:93:13"
														},
														{
															"nativeSrc": "6906:19:13",
															"nodeType": "YulAssignment",
															"src": "6906:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6917:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6917:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6922:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6922:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6913:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6913:3:13"
																},
																"nativeSrc": "6913:12:13",
																"nodeType": "YulFunctionCall",
																"src": "6913:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6906:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6906:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6565:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6699:3:13",
														"nodeType": "YulTypedName",
														"src": "6699:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6707:3:13",
														"nodeType": "YulTypedName",
														"src": "6707:3:13",
														"type": ""
													}
												],
												"src": "6565:366:13"
											},
											{
												"body": {
													"nativeSrc": "7108:248:13",
													"nodeType": "YulBlock",
													"src": "7108:248:13",
													"statements": [
														{
															"nativeSrc": "7118:26:13",
															"nodeType": "YulAssignment",
															"src": "7118:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7130:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7130:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7141:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7141:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7126:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7126:3:13"
																},
																"nativeSrc": "7126:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7126:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7118:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7118:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7165:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7165:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7176:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7176:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7161:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7161:3:13"
																		},
																		"nativeSrc": "7161:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7161:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7184:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7184:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7190:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7190:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7180:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7180:3:13"
																		},
																		"nativeSrc": "7180:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7180:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7154:6:13"
																},
																"nativeSrc": "7154:47:13",
																"nodeType": "YulFunctionCall",
																"src": "7154:47:13"
															},
															"nativeSrc": "7154:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "7154:47:13"
														},
														{
															"nativeSrc": "7210:139:13",
															"nodeType": "YulAssignment",
															"src": "7210:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7344:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7344:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7218:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "7218:124:13"
																},
																"nativeSrc": "7218:131:13",
																"nodeType": "YulFunctionCall",
																"src": "7218:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7210:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7210:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6937:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7088:9:13",
														"nodeType": "YulTypedName",
														"src": "7088:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7103:4:13",
														"nodeType": "YulTypedName",
														"src": "7103:4:13",
														"type": ""
													}
												],
												"src": "6937:419:13"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot set owner to zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052670de0b6b3a76400006002556305f5e1006003556402540be400600455606460055f6101000a81548160ff021916908360ff1602179055506040518060400160405280601981526020017f3120534c54203d2024302e303220666f722050726573616c6500000000000000815250600690816200008291906200068d565b5073647c3320516692c8366fde2b08bc6d304584c02060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660085f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073d30e2101a97dcbaebcbc04f14c3f624e67a3516560095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600a5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348015620001f9575f80fd5b5033805f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200026e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200026590620007cf565b60405180910390fd5b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614620002f357620002f281620002fc60201b60201c565b5b5050506200085d565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000364906200083d565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620004a557607f821691505b602082108103620004bb57620004ba62000460565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200051f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004e2565b6200052b8683620004e2565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620005756200056f620005698462000543565b6200054c565b62000543565b9050919050565b5f819050919050565b620005908362000555565b620005a86200059f826200057c565b848454620004ee565b825550505050565b5f90565b620005be620005b0565b620005cb81848462000585565b505050565b5b81811015620005f257620005e65f82620005b4565b600181019050620005d1565b5050565b601f82111562000641576200060b81620004c1565b6200061684620004d3565b8101602085101562000626578190505b6200063e6200063585620004d3565b830182620005d0565b50505b505050565b5f82821c905092915050565b5f620006635f198460080262000646565b1980831691505092915050565b5f6200067d838362000652565b9150826002028217905092915050565b620006988262000429565b67ffffffffffffffff811115620006b457620006b362000433565b5b620006c082546200048d565b620006cd828285620005f6565b5f60209050601f83116001811462000703575f8415620006ee578287015190505b620006fa858262000670565b86555062000769565b601f1984166200071386620004c1565b5f5b828110156200073c5784890151825560018201915060208501945060208101905062000715565b868310156200075c578489015162000758601f89168262000652565b8355505b6001600288020188555050505b505050505050565b5f82825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000005f82015250565b5f620007b760188362000771565b9150620007c48262000781565b602082019050919050565b5f6020820190508181035f830152620007e881620007a9565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f6200082560178362000771565b91506200083282620007ef565b602082019050919050565b5f6020820190508181035f830152620008568162000817565b9050919050565b610eba806200086b5f395ff3fe60806040526004361061008f575f3560e01c806379ba50971161005857806379ba5097146101755780638da5cb5b1461018b578063a4821719146101b5578063aaf836ff146101d4578063f2fde38b146101fe5761008f565b806241e5501461009357806304338841146100cf5780631ad46a5f1461010b5780633ccfd60b146101355780633d900d9e1461014b575b5f80fd5b34801561009e575f80fd5b506100b960048036038101906100b491906108cf565b610226565b6040516100c69190610909565b60405180910390f35b3480156100da575f80fd5b506100f560048036038101906100f091906108cf565b61025e565b6040516101029190610909565b60405180910390f35b348015610116575f80fd5b5061011f6102aa565b60405161012c91906109ac565b60405180910390f35b348015610140575f80fd5b50610149610336565b005b348015610156575f80fd5b5061015f610384565b60405161016c9190610909565b60405180910390f35b348015610180575f80fd5b50610189610433565b005b348015610196575f80fd5b5061019f6105c2565b6040516101ac9190610a0b565b60405180910390f35b6101bd6105e9565b6040516101cb929190610a24565b60405180910390f35b3480156101df575f80fd5b506101e86106a6565b6040516101f59190610a0b565b60405180910390f35b348015610209575f80fd5b50610224600480360381019061021f9190610a75565b6106cb565b005b5f80610230610384565b90505f670de0b6b3a764000082856102489190610acd565b6102529190610b3b565b90508092505050919050565b5f80610268610384565b90505f6003546004548361027c9190610b3b565b6002548661028a9190610acd565b6102949190610b3b565b61029e9190610acd565b90508092505050919050565b600680546102b790610b98565b80601f01602080910402602001604051908101604052809291908181526020018280546102e390610b98565b801561032e5780601f106103055761010080835404028352916020019161032e565b820191905f5260205f20905b81548152906001019060200180831161031157829003601f168201915b505050505081565b61033e6106df565b3373ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610381573d5f803e3d5ffd5b50565b5f80600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104149190610c4e565b5050509150505f600454826104299190610acd565b9050809250505090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610d0f565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f806105f434610226565b90506032816106039190610b3b565b915060085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610661929190610d2d565b6020604051808303815f875af115801561067d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a19190610d89565b509091565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106d36106df565b6106dc8161076e565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076390610dfe565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d390610e66565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f80fd5b5f819050919050565b6108ae8161089c565b81146108b8575f80fd5b50565b5f813590506108c9816108a5565b92915050565b5f602082840312156108e4576108e3610898565b5b5f6108f1848285016108bb565b91505092915050565b6109038161089c565b82525050565b5f60208201905061091c5f8301846108fa565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561095957808201518184015260208101905061093e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61097e82610922565b610988818561092c565b935061099881856020860161093c565b6109a181610964565b840191505092915050565b5f6020820190508181035f8301526109c48184610974565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109f5826109cc565b9050919050565b610a05816109eb565b82525050565b5f602082019050610a1e5f8301846109fc565b92915050565b5f604082019050610a375f8301856108fa565b610a4460208301846108fa565b9392505050565b610a54816109eb565b8114610a5e575f80fd5b50565b5f81359050610a6f81610a4b565b92915050565b5f60208284031215610a8a57610a89610898565b5b5f610a9784828501610a61565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ad78261089c565b9150610ae28361089c565b9250828202610af08161089c565b91508282048414831517610b0757610b06610aa0565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b458261089c565b9150610b508361089c565b925082610b6057610b5f610b0e565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610baf57607f821691505b602082108103610bc257610bc1610b6b565b5b50919050565b5f69ffffffffffffffffffff82169050919050565b610be681610bc8565b8114610bf0575f80fd5b50565b5f81519050610c0181610bdd565b92915050565b5f819050919050565b610c1981610c07565b8114610c23575f80fd5b50565b5f81519050610c3481610c10565b92915050565b5f81519050610c48816108a5565b92915050565b5f805f805f60a08688031215610c6757610c66610898565b5b5f610c7488828901610bf3565b9550506020610c8588828901610c26565b9450506040610c9688828901610c3a565b9350506060610ca788828901610c3a565b9250506080610cb888828901610bf3565b9150509295509295909350565b7f4d7573742062652070726f706f736564206f776e6572000000000000000000005f82015250565b5f610cf960168361092c565b9150610d0482610cc5565b602082019050919050565b5f6020820190508181035f830152610d2681610ced565b9050919050565b5f604082019050610d405f8301856109fc565b610d4d60208301846108fa565b9392505050565b5f8115159050919050565b610d6881610d54565b8114610d72575f80fd5b50565b5f81519050610d8381610d5f565b92915050565b5f60208284031215610d9e57610d9d610898565b5b5f610dab84828501610d75565b91505092915050565b7f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000005f82015250565b5f610de860168361092c565b9150610df382610db4565b602082019050919050565b5f6020820190508181035f830152610e1581610ddc565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f610e5060178361092c565b9150610e5b82610e1c565b602082019050919050565b5f6020820190508181035f830152610e7d81610e44565b905091905056fea264697066735822122039933867532f54c68c612aa4c105709806c109c7a282494402db4f37891c280164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0x2 SSTORE PUSH4 0x5F5E100 PUSH1 0x3 SSTORE PUSH5 0x2540BE400 PUSH1 0x4 SSTORE PUSH1 0x64 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x3120534C54203D2024302E303220666F722050726573616C6500000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH3 0x82 SWAP2 SWAP1 PUSH3 0x68D JUMP JUMPDEST POP PUSH20 0x647C3320516692C8366FDE2B08BC6D304584C020 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x8 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0xD30E2101A97DCBAEBCBC04F14C3F624E67A35165 PUSH1 0x9 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x9 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x26E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x265 SWAP1 PUSH3 0x7CF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH3 0x2F3 JUMPI PUSH3 0x2F2 DUP2 PUSH3 0x2FC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST JUMPDEST POP POP POP PUSH3 0x85D JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x36D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x364 SWAP1 PUSH3 0x83D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4A5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x4BB JUMPI PUSH3 0x4BA PUSH3 0x460 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x51F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x4E2 JUMP JUMPDEST PUSH3 0x52B DUP7 DUP4 PUSH3 0x4E2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x575 PUSH3 0x56F PUSH3 0x569 DUP5 PUSH3 0x543 JUMP JUMPDEST PUSH3 0x54C JUMP JUMPDEST PUSH3 0x543 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x590 DUP4 PUSH3 0x555 JUMP JUMPDEST PUSH3 0x5A8 PUSH3 0x59F DUP3 PUSH3 0x57C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x4EE JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x5BE PUSH3 0x5B0 JUMP JUMPDEST PUSH3 0x5CB DUP2 DUP5 DUP5 PUSH3 0x585 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x5F2 JUMPI PUSH3 0x5E6 PUSH0 DUP3 PUSH3 0x5B4 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x5D1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x641 JUMPI PUSH3 0x60B DUP2 PUSH3 0x4C1 JUMP JUMPDEST PUSH3 0x616 DUP5 PUSH3 0x4D3 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x626 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x63E PUSH3 0x635 DUP6 PUSH3 0x4D3 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x5D0 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x663 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x646 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x67D DUP4 DUP4 PUSH3 0x652 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x698 DUP3 PUSH3 0x429 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6B4 JUMPI PUSH3 0x6B3 PUSH3 0x433 JUMP JUMPDEST JUMPDEST PUSH3 0x6C0 DUP3 SLOAD PUSH3 0x48D JUMP JUMPDEST PUSH3 0x6CD DUP3 DUP3 DUP6 PUSH3 0x5F6 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x703 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x6EE JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x6FA DUP6 DUP3 PUSH3 0x670 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x769 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x713 DUP7 PUSH3 0x4C1 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x73C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x715 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x75C JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x758 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x652 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x7B7 PUSH1 0x18 DUP4 PUSH3 0x771 JUMP JUMPDEST SWAP2 POP PUSH3 0x7C4 DUP3 PUSH3 0x781 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x7E8 DUP2 PUSH3 0x7A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH3 0x825 PUSH1 0x17 DUP4 PUSH3 0x771 JUMP JUMPDEST SWAP2 POP PUSH3 0x832 DUP3 PUSH3 0x7EF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH3 0x856 DUP2 PUSH3 0x817 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xEBA DUP1 PUSH3 0x86B PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xAAF836FF EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FE JUMPI PUSH2 0x8F JUMP JUMPDEST DUP1 PUSH3 0x41E550 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x4338841 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x1AD46A5F EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x3D900D9E EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x433 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP3 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH2 0x230 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP6 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x268 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD DUP4 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x2 SLOAD DUP7 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0xB98 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0xB98 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x305 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x311 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6DF JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x381 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x4 SLOAD DUP3 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B9 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5F4 CALLVALUE PUSH2 0x226 JUMP JUMPDEST SWAP1 POP PUSH1 0x32 DUP2 PUSH2 0x603 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST SWAP2 POP PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x661 SWAP3 SWAP2 SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0xD89 JUMP JUMPDEST POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6D3 PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x6DC DUP2 PUSH2 0x76E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0x89C JUMP JUMPDEST DUP2 EQ PUSH2 0x8B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C9 DUP2 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E4 JUMPI PUSH2 0x8E3 PUSH2 0x898 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8F1 DUP5 DUP3 DUP6 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x89C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91C PUSH0 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x959 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x93E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x97E DUP3 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x988 DUP2 DUP6 PUSH2 0x92C JUMP JUMPDEST SWAP4 POP PUSH2 0x998 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x93C JUMP JUMPDEST PUSH2 0x9A1 DUP2 PUSH2 0x964 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C4 DUP2 DUP5 PUSH2 0x974 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F5 DUP3 PUSH2 0x9CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA05 DUP2 PUSH2 0x9EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1E PUSH0 DUP4 ADD DUP5 PUSH2 0x9FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA37 PUSH0 DUP4 ADD DUP6 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0xA44 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA54 DUP2 PUSH2 0x9EB JUMP JUMPDEST DUP2 EQ PUSH2 0xA5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA6F DUP2 PUSH2 0xA4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8A JUMPI PUSH2 0xA89 PUSH2 0x898 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA97 DUP5 DUP3 DUP6 ADD PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAD7 DUP3 PUSH2 0x89C JUMP JUMPDEST SWAP2 POP PUSH2 0xAE2 DUP4 PUSH2 0x89C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xAF0 DUP2 PUSH2 0x89C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB07 JUMPI PUSH2 0xB06 PUSH2 0xAA0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB45 DUP3 PUSH2 0x89C JUMP JUMPDEST SWAP2 POP PUSH2 0xB50 DUP4 PUSH2 0x89C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB60 JUMPI PUSH2 0xB5F PUSH2 0xB0E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xBAF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBC2 JUMPI PUSH2 0xBC1 PUSH2 0xB6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE6 DUP2 PUSH2 0xBC8 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC01 DUP2 PUSH2 0xBDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC19 DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP2 EQ PUSH2 0xC23 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC34 DUP2 PUSH2 0xC10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC48 DUP2 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC67 JUMPI PUSH2 0xC66 PUSH2 0x898 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC74 DUP9 DUP3 DUP10 ADD PUSH2 0xBF3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xC85 DUP9 DUP3 DUP10 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xC96 DUP9 DUP3 DUP10 ADD PUSH2 0xC3A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xCA7 DUP9 DUP3 DUP10 ADD PUSH2 0xC3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xCB8 DUP9 DUP3 DUP10 ADD PUSH2 0xBF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF9 PUSH1 0x16 DUP4 PUSH2 0x92C JUMP JUMPDEST SWAP2 POP PUSH2 0xD04 DUP3 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD26 DUP2 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD40 PUSH0 DUP4 ADD DUP6 PUSH2 0x9FC JUMP JUMPDEST PUSH2 0xD4D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD68 DUP2 PUSH2 0xD54 JUMP JUMPDEST DUP2 EQ PUSH2 0xD72 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD83 DUP2 PUSH2 0xD5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9E JUMPI PUSH2 0xD9D PUSH2 0x898 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDAB DUP5 DUP3 DUP6 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDE8 PUSH1 0x16 DUP4 PUSH2 0x92C JUMP JUMPDEST SWAP2 POP PUSH2 0xDF3 DUP3 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE15 DUP2 PUSH2 0xDDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE50 PUSH1 0x17 DUP4 PUSH2 0x92C JUMP JUMPDEST SWAP2 POP PUSH2 0xE5B DUP3 PUSH2 0xE1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE7D DUP2 PUSH2 0xE44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY SWAP4 CODESIZE PUSH8 0x532F54C68C612AA4 0xC1 SDIV PUSH17 0x9806C109C7A282494402DB4F37891C2801 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "348:2203:12:-:0;;;423:6;393:36;;463:5;436:32;;500:6;475:31;;544:3;513:34;;;;;;;;;;;;;;;;;;;;554:61;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;652:42;624:70;;;;;;;;;;;;;;;;;;;;729:10;;;;;;;;;;;701:39;;;;;;;;;;;;;;;;;;;;785:42;753:74;;;;;;;;;;;;;;;;;;;;943:13;;;;;;;;;;;879:78;;;;;;;;;;;;;;;;;;;;1152:53;;;;;;;;;;1186:10;327:8:2;345:1;557::3;537:22;;:8;:22;;;529:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;605:8;595:7;;:18;;;;;;;;;;;;;;;;;;647:1;623:26;;:12;:26;;;619:79;;659:32;678:12;659:18;;;:32;;:::i;:::-;619:79;471:231;;270:81:2;348:2203:12;;1482:188:3;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;7:99:13:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:169::-;5318:11;5352:6;5347:3;5340:19;5392:4;5387:3;5383:14;5368:29;;5234:169;;;;:::o;5409:174::-;5549:26;5545:1;5537:6;5533:14;5526:50;5409:174;:::o;5589:366::-;5731:3;5752:67;5816:2;5811:3;5752:67;:::i;:::-;5745:74;;5828:93;5917:3;5828:93;:::i;:::-;5946:2;5941:3;5937:12;5930:19;;5589:366;;;:::o;5961:419::-;6127:4;6165:2;6154:9;6150:18;6142:26;;6214:9;6208:4;6204:20;6200:1;6189:9;6185:17;6178:47;6242:131;6368:4;6242:131;:::i;:::-;6234:139;;5961:419;;;:::o;6386:173::-;6526:25;6522:1;6514:6;6510:14;6503:49;6386:173;:::o;6565:366::-;6707:3;6728:67;6792:2;6787:3;6728:67;:::i;:::-;6721:74;;6804:93;6893:3;6804:93;:::i;:::-;6922:2;6917:3;6913:12;6906:19;;6565:366;;;:::o;6937:419::-;7103:4;7141:2;7130:9;7126:18;7118:26;;7190:9;7184:4;7180:20;7176:1;7165:9;7161:17;7154:47;7218:131;7344:4;7218:131;:::i;:::-;7210:139;;6937:419;;;:::o;348:2203:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SLTAddress_1286": {
									"entryPoint": 1702,
									"id": 1286,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_232": {
									"entryPoint": 1902,
									"id": 232,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateOwnership_245": {
									"entryPoint": 1759,
									"id": 245,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_198": {
									"entryPoint": 1075,
									"id": 198,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyToken_1459": {
									"entryPoint": 1513,
									"id": 1459,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@checkETHPrice_1351": {
									"entryPoint": 900,
									"id": 1351,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@convertDollarToETH_1407": {
									"entryPoint": 606,
									"id": 1407,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@convertEthToDollar_1377": {
									"entryPoint": 550,
									"id": 1377,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@dollarAmountOfSLT_1283": {
									"entryPoint": 682,
									"id": 1283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_208": {
									"entryPoint": 1474,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferOwnership_162": {
									"entryPoint": 1739,
									"id": 162,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_1426": {
									"entryPoint": 822,
									"id": 1426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 3110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2677,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 3150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3373,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2476,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2596,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 3412,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 3079,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 3016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 2968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2720,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2830,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 2923,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2200,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c": {
									"entryPoint": 3269,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3": {
									"entryPoint": 3508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2": {
									"entryPoint": 3612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 3088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 3037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11580:13",
										"nodeType": "YulBlock",
										"src": "0:11580:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:32:13",
													"nodeType": "YulBlock",
													"src": "379:32:13",
													"statements": [
														{
															"nativeSrc": "389:16:13",
															"nodeType": "YulAssignment",
															"src": "389:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:13",
																"nodeType": "YulIdentifier",
																"src": "400:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:77:13"
											},
											{
												"body": {
													"nativeSrc": "460:79:13",
													"nodeType": "YulBlock",
													"src": "460:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:13",
																"nodeType": "YulBlock",
																"src": "517:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:13",
																					"nodeType": "YulLiteral",
																					"src": "526:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:13",
																					"nodeType": "YulLiteral",
																					"src": "529:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:13"
																			},
																			"nativeSrc": "519:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:13"
																		},
																		"nativeSrc": "519:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:13"
																				},
																				"nativeSrc": "490:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:13"
																		},
																		"nativeSrc": "480:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:13"
																},
																"nativeSrc": "473:43:13",
																"nodeType": "YulFunctionCall",
																"src": "473:43:13"
															},
															"nativeSrc": "470:63:13",
															"nodeType": "YulIf",
															"src": "470:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:13",
														"nodeType": "YulTypedName",
														"src": "453:5:13",
														"type": ""
													}
												],
												"src": "417:122:13"
											},
											{
												"body": {
													"nativeSrc": "597:87:13",
													"nodeType": "YulBlock",
													"src": "597:87:13",
													"statements": [
														{
															"nativeSrc": "607:29:13",
															"nodeType": "YulAssignment",
															"src": "607:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:13"
																},
																"nativeSrc": "616:20:13",
																"nodeType": "YulFunctionCall",
																"src": "616:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:13"
																},
																"nativeSrc": "645:33:13",
																"nodeType": "YulFunctionCall",
																"src": "645:33:13"
															},
															"nativeSrc": "645:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:13",
														"nodeType": "YulTypedName",
														"src": "575:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:13",
														"nodeType": "YulTypedName",
														"src": "583:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:13",
														"nodeType": "YulTypedName",
														"src": "591:5:13",
														"type": ""
													}
												],
												"src": "545:139:13"
											},
											{
												"body": {
													"nativeSrc": "756:263:13",
													"nodeType": "YulBlock",
													"src": "756:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:13",
																"nodeType": "YulBlock",
																"src": "802:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:13"
																			},
																			"nativeSrc": "804:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:13"
																		},
																		"nativeSrc": "804:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:13"
																		},
																		"nativeSrc": "773:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:13",
																		"nodeType": "YulLiteral",
																		"src": "798:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:13"
																},
																"nativeSrc": "769:32:13",
																"nodeType": "YulFunctionCall",
																"src": "769:32:13"
															},
															"nativeSrc": "766:119:13",
															"nodeType": "YulIf",
															"src": "766:119:13"
														},
														{
															"nativeSrc": "895:117:13",
															"nodeType": "YulBlock",
															"src": "895:117:13",
															"statements": [
																{
																	"nativeSrc": "910:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:13",
																		"nodeType": "YulLiteral",
																		"src": "924:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:13",
																			"nodeType": "YulTypedName",
																			"src": "914:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:13",
																	"nodeType": "YulAssignment",
																	"src": "939:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:13"
																				},
																				"nativeSrc": "970:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:13"
																		},
																		"nativeSrc": "949:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:13",
														"nodeType": "YulTypedName",
														"src": "726:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:13",
														"nodeType": "YulTypedName",
														"src": "737:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:13",
														"nodeType": "YulTypedName",
														"src": "749:6:13",
														"type": ""
													}
												],
												"src": "690:329:13"
											},
											{
												"body": {
													"nativeSrc": "1090:53:13",
													"nodeType": "YulBlock",
													"src": "1090:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1107:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1107:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1130:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1130:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1112:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1112:17:13"
																		},
																		"nativeSrc": "1112:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1100:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1100:6:13"
																},
																"nativeSrc": "1100:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1100:37:13"
															},
															"nativeSrc": "1100:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1100:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1025:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1078:5:13",
														"nodeType": "YulTypedName",
														"src": "1078:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1085:3:13",
														"nodeType": "YulTypedName",
														"src": "1085:3:13",
														"type": ""
													}
												],
												"src": "1025:118:13"
											},
											{
												"body": {
													"nativeSrc": "1247:124:13",
													"nodeType": "YulBlock",
													"src": "1247:124:13",
													"statements": [
														{
															"nativeSrc": "1257:26:13",
															"nodeType": "YulAssignment",
															"src": "1257:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1269:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1280:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1265:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1265:3:13"
																},
																"nativeSrc": "1265:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1265:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1257:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1257:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1337:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1337:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1350:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1350:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1361:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1361:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1346:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1346:3:13"
																		},
																		"nativeSrc": "1346:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1293:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1293:43:13"
																},
																"nativeSrc": "1293:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1293:71:13"
															},
															"nativeSrc": "1293:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1293:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1149:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1219:9:13",
														"nodeType": "YulTypedName",
														"src": "1219:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1231:6:13",
														"nodeType": "YulTypedName",
														"src": "1231:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1242:4:13",
														"nodeType": "YulTypedName",
														"src": "1242:4:13",
														"type": ""
													}
												],
												"src": "1149:222:13"
											},
											{
												"body": {
													"nativeSrc": "1436:40:13",
													"nodeType": "YulBlock",
													"src": "1436:40:13",
													"statements": [
														{
															"nativeSrc": "1447:22:13",
															"nodeType": "YulAssignment",
															"src": "1447:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1463:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1463:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1457:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1457:5:13"
																},
																"nativeSrc": "1457:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1457:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1447:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1377:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1419:5:13",
														"nodeType": "YulTypedName",
														"src": "1419:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1429:6:13",
														"nodeType": "YulTypedName",
														"src": "1429:6:13",
														"type": ""
													}
												],
												"src": "1377:99:13"
											},
											{
												"body": {
													"nativeSrc": "1578:73:13",
													"nodeType": "YulBlock",
													"src": "1578:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1595:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1595:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1600:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1600:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																},
																"nativeSrc": "1588:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1588:19:13"
															},
															"nativeSrc": "1588:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1588:19:13"
														},
														{
															"nativeSrc": "1616:29:13",
															"nodeType": "YulAssignment",
															"src": "1616:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1635:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1635:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1640:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1640:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1631:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1631:3:13"
																},
																"nativeSrc": "1631:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1631:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1616:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1616:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1482:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1550:3:13",
														"nodeType": "YulTypedName",
														"src": "1550:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1555:6:13",
														"nodeType": "YulTypedName",
														"src": "1555:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1566:11:13",
														"nodeType": "YulTypedName",
														"src": "1566:11:13",
														"type": ""
													}
												],
												"src": "1482:169:13"
											},
											{
												"body": {
													"nativeSrc": "1719:184:13",
													"nodeType": "YulBlock",
													"src": "1719:184:13",
													"statements": [
														{
															"nativeSrc": "1729:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1729:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1738:1:13",
																"nodeType": "YulLiteral",
																"src": "1738:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1733:1:13",
																	"nodeType": "YulTypedName",
																	"src": "1733:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1798:63:13",
																"nodeType": "YulBlock",
																"src": "1798:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1823:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1823:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1828:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "1828:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1819:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1819:3:13"
																					},
																					"nativeSrc": "1819:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1819:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1842:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1842:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1847:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "1847:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1838:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1838:3:13"
																							},
																							"nativeSrc": "1838:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1838:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1832:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1832:5:13"
																					},
																					"nativeSrc": "1832:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1832:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1812:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1812:6:13"
																			},
																			"nativeSrc": "1812:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1812:39:13"
																		},
																		"nativeSrc": "1812:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1812:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1759:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "1759:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1762:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1762:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1756:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1756:2:13"
																},
																"nativeSrc": "1756:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1756:13:13"
															},
															"nativeSrc": "1748:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1770:19:13",
																"nodeType": "YulBlock",
																"src": "1770:19:13",
																"statements": [
																	{
																		"nativeSrc": "1772:15:13",
																		"nodeType": "YulAssignment",
																		"src": "1772:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1781:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "1781:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1784:2:13",
																					"nodeType": "YulLiteral",
																					"src": "1784:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1777:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1777:3:13"
																			},
																			"nativeSrc": "1777:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1777:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1772:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "1772:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1752:3:13",
																"nodeType": "YulBlock",
																"src": "1752:3:13",
																"statements": []
															},
															"src": "1748:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1881:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1881:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1886:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1886:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1877:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:13"
																		},
																		"nativeSrc": "1877:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1877:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1895:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1895:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1870:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:13"
																},
																"nativeSrc": "1870:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1870:27:13"
															},
															"nativeSrc": "1870:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1870:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1657:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1701:3:13",
														"nodeType": "YulTypedName",
														"src": "1701:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1706:3:13",
														"nodeType": "YulTypedName",
														"src": "1706:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1711:6:13",
														"nodeType": "YulTypedName",
														"src": "1711:6:13",
														"type": ""
													}
												],
												"src": "1657:246:13"
											},
											{
												"body": {
													"nativeSrc": "1957:54:13",
													"nodeType": "YulBlock",
													"src": "1957:54:13",
													"statements": [
														{
															"nativeSrc": "1967:38:13",
															"nodeType": "YulAssignment",
															"src": "1967:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1985:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1985:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1992:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1992:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1981:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1981:3:13"
																		},
																		"nativeSrc": "1981:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1981:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2001:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2001:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1997:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1997:3:13"
																		},
																		"nativeSrc": "1997:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1997:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1977:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1977:3:13"
																},
																"nativeSrc": "1977:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1977:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1967:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1967:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1909:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1940:5:13",
														"nodeType": "YulTypedName",
														"src": "1940:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1950:6:13",
														"nodeType": "YulTypedName",
														"src": "1950:6:13",
														"type": ""
													}
												],
												"src": "1909:102:13"
											},
											{
												"body": {
													"nativeSrc": "2109:285:13",
													"nodeType": "YulBlock",
													"src": "2109:285:13",
													"statements": [
														{
															"nativeSrc": "2119:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2119:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2166:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2166:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2133:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2133:32:13"
																},
																"nativeSrc": "2133:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2133:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2123:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2123:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2181:78:13",
															"nodeType": "YulAssignment",
															"src": "2181:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2247:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2247:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2252:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2252:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2188:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2188:58:13"
																},
																"nativeSrc": "2188:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2188:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2181:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2181:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2307:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2307:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2314:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2314:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2303:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2303:3:13"
																		},
																		"nativeSrc": "2303:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2303:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2321:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2321:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2326:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2326:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2268:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2268:34:13"
																},
																"nativeSrc": "2268:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2268:65:13"
															},
															"nativeSrc": "2268:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2268:65:13"
														},
														{
															"nativeSrc": "2342:46:13",
															"nodeType": "YulAssignment",
															"src": "2342:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2353:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2353:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2380:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2380:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2358:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2358:21:13"
																		},
																		"nativeSrc": "2358:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2358:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2349:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2349:3:13"
																},
																"nativeSrc": "2349:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2349:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2342:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2342:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2017:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2090:5:13",
														"nodeType": "YulTypedName",
														"src": "2090:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2097:3:13",
														"nodeType": "YulTypedName",
														"src": "2097:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2105:3:13",
														"nodeType": "YulTypedName",
														"src": "2105:3:13",
														"type": ""
													}
												],
												"src": "2017:377:13"
											},
											{
												"body": {
													"nativeSrc": "2518:195:13",
													"nodeType": "YulBlock",
													"src": "2518:195:13",
													"statements": [
														{
															"nativeSrc": "2528:26:13",
															"nodeType": "YulAssignment",
															"src": "2528:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2540:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2540:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2551:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2551:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2536:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2536:3:13"
																},
																"nativeSrc": "2536:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2536:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2528:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2528:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2575:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2575:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2586:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2586:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2571:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2571:3:13"
																		},
																		"nativeSrc": "2571:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2571:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2594:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2600:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2600:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2590:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2590:3:13"
																		},
																		"nativeSrc": "2590:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2590:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2564:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:13"
																},
																"nativeSrc": "2564:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2564:47:13"
															},
															"nativeSrc": "2564:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2564:47:13"
														},
														{
															"nativeSrc": "2620:86:13",
															"nodeType": "YulAssignment",
															"src": "2620:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2692:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2692:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2701:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2701:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2628:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2628:63:13"
																},
																"nativeSrc": "2628:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2628:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2620:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2620:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2400:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2490:9:13",
														"nodeType": "YulTypedName",
														"src": "2490:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2502:6:13",
														"nodeType": "YulTypedName",
														"src": "2502:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2513:4:13",
														"nodeType": "YulTypedName",
														"src": "2513:4:13",
														"type": ""
													}
												],
												"src": "2400:313:13"
											},
											{
												"body": {
													"nativeSrc": "2764:81:13",
													"nodeType": "YulBlock",
													"src": "2764:81:13",
													"statements": [
														{
															"nativeSrc": "2774:65:13",
															"nodeType": "YulAssignment",
															"src": "2774:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2789:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2789:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2796:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2796:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2785:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2785:3:13"
																},
																"nativeSrc": "2785:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2785:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2774:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2774:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2719:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2746:5:13",
														"nodeType": "YulTypedName",
														"src": "2746:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2756:7:13",
														"nodeType": "YulTypedName",
														"src": "2756:7:13",
														"type": ""
													}
												],
												"src": "2719:126:13"
											},
											{
												"body": {
													"nativeSrc": "2896:51:13",
													"nodeType": "YulBlock",
													"src": "2896:51:13",
													"statements": [
														{
															"nativeSrc": "2906:35:13",
															"nodeType": "YulAssignment",
															"src": "2906:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2935:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2935:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2917:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "2917:17:13"
																},
																"nativeSrc": "2917:24:13",
																"nodeType": "YulFunctionCall",
																"src": "2917:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2906:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2906:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2851:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2878:5:13",
														"nodeType": "YulTypedName",
														"src": "2878:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2888:7:13",
														"nodeType": "YulTypedName",
														"src": "2888:7:13",
														"type": ""
													}
												],
												"src": "2851:96:13"
											},
											{
												"body": {
													"nativeSrc": "3018:53:13",
													"nodeType": "YulBlock",
													"src": "3018:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3035:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3035:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3058:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3058:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3040:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "3040:17:13"
																		},
																		"nativeSrc": "3040:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3040:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3028:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3028:6:13"
																},
																"nativeSrc": "3028:37:13",
																"nodeType": "YulFunctionCall",
																"src": "3028:37:13"
															},
															"nativeSrc": "3028:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "3028:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2953:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3006:5:13",
														"nodeType": "YulTypedName",
														"src": "3006:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3013:3:13",
														"nodeType": "YulTypedName",
														"src": "3013:3:13",
														"type": ""
													}
												],
												"src": "2953:118:13"
											},
											{
												"body": {
													"nativeSrc": "3175:124:13",
													"nodeType": "YulBlock",
													"src": "3175:124:13",
													"statements": [
														{
															"nativeSrc": "3185:26:13",
															"nodeType": "YulAssignment",
															"src": "3185:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3197:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3197:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3208:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3208:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3193:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3193:3:13"
																},
																"nativeSrc": "3193:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3193:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3185:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3185:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3265:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3265:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3278:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3278:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3289:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3289:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3274:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:13"
																		},
																		"nativeSrc": "3274:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3274:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3221:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3221:43:13"
																},
																"nativeSrc": "3221:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3221:71:13"
															},
															"nativeSrc": "3221:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "3221:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3077:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3147:9:13",
														"nodeType": "YulTypedName",
														"src": "3147:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3159:6:13",
														"nodeType": "YulTypedName",
														"src": "3159:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3170:4:13",
														"nodeType": "YulTypedName",
														"src": "3170:4:13",
														"type": ""
													}
												],
												"src": "3077:222:13"
											},
											{
												"body": {
													"nativeSrc": "3431:206:13",
													"nodeType": "YulBlock",
													"src": "3431:206:13",
													"statements": [
														{
															"nativeSrc": "3441:26:13",
															"nodeType": "YulAssignment",
															"src": "3441:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3453:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3453:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3464:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3464:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3449:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3449:3:13"
																},
																"nativeSrc": "3449:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3449:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3441:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3441:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3521:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3521:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3534:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3534:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3545:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3545:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3530:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3530:3:13"
																		},
																		"nativeSrc": "3530:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3530:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3477:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3477:43:13"
																},
																"nativeSrc": "3477:71:13",
																"nodeType": "YulFunctionCall",
																"src": "3477:71:13"
															},
															"nativeSrc": "3477:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "3477:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3602:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3602:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3615:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3615:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3626:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3626:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3611:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3611:3:13"
																		},
																		"nativeSrc": "3611:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3611:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3558:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3558:43:13"
																},
																"nativeSrc": "3558:72:13",
																"nodeType": "YulFunctionCall",
																"src": "3558:72:13"
															},
															"nativeSrc": "3558:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "3558:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3305:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3395:9:13",
														"nodeType": "YulTypedName",
														"src": "3395:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3407:6:13",
														"nodeType": "YulTypedName",
														"src": "3407:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3415:6:13",
														"nodeType": "YulTypedName",
														"src": "3415:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3426:4:13",
														"nodeType": "YulTypedName",
														"src": "3426:4:13",
														"type": ""
													}
												],
												"src": "3305:332:13"
											},
											{
												"body": {
													"nativeSrc": "3686:79:13",
													"nodeType": "YulBlock",
													"src": "3686:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3743:16:13",
																"nodeType": "YulBlock",
																"src": "3743:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3752:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3752:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3755:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3755:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3745:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3745:6:13"
																			},
																			"nativeSrc": "3745:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3745:12:13"
																		},
																		"nativeSrc": "3745:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3745:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3709:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3709:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3734:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3734:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3716:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3716:17:13"
																				},
																				"nativeSrc": "3716:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3716:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3706:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3706:2:13"
																		},
																		"nativeSrc": "3706:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3706:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3699:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3699:6:13"
																},
																"nativeSrc": "3699:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3699:43:13"
															},
															"nativeSrc": "3696:63:13",
															"nodeType": "YulIf",
															"src": "3696:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3643:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3679:5:13",
														"nodeType": "YulTypedName",
														"src": "3679:5:13",
														"type": ""
													}
												],
												"src": "3643:122:13"
											},
											{
												"body": {
													"nativeSrc": "3823:87:13",
													"nodeType": "YulBlock",
													"src": "3823:87:13",
													"statements": [
														{
															"nativeSrc": "3833:29:13",
															"nodeType": "YulAssignment",
															"src": "3833:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3855:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3855:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3842:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3842:12:13"
																},
																"nativeSrc": "3842:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3842:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3833:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3833:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3898:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3898:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3871:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3871:26:13"
																},
																"nativeSrc": "3871:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3871:33:13"
															},
															"nativeSrc": "3871:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3871:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3771:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3801:6:13",
														"nodeType": "YulTypedName",
														"src": "3801:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3809:3:13",
														"nodeType": "YulTypedName",
														"src": "3809:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3817:5:13",
														"nodeType": "YulTypedName",
														"src": "3817:5:13",
														"type": ""
													}
												],
												"src": "3771:139:13"
											},
											{
												"body": {
													"nativeSrc": "3982:263:13",
													"nodeType": "YulBlock",
													"src": "3982:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4028:83:13",
																"nodeType": "YulBlock",
																"src": "4028:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4030:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4030:77:13"
																			},
																			"nativeSrc": "4030:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4030:79:13"
																		},
																		"nativeSrc": "4030:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4030:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4003:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4003:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4012:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4012:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:13"
																		},
																		"nativeSrc": "3999:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4024:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4024:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3995:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3995:3:13"
																},
																"nativeSrc": "3995:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3995:32:13"
															},
															"nativeSrc": "3992:119:13",
															"nodeType": "YulIf",
															"src": "3992:119:13"
														},
														{
															"nativeSrc": "4121:117:13",
															"nodeType": "YulBlock",
															"src": "4121:117:13",
															"statements": [
																{
																	"nativeSrc": "4136:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4136:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4150:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4150:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4140:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4140:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4165:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4165:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4200:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4200:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4211:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4211:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4196:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4196:3:13"
																				},
																				"nativeSrc": "4196:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4196:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4220:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4220:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4175:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4175:20:13"
																		},
																		"nativeSrc": "4175:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4175:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4165:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4165:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3916:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3952:9:13",
														"nodeType": "YulTypedName",
														"src": "3952:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3963:7:13",
														"nodeType": "YulTypedName",
														"src": "3963:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3975:6:13",
														"nodeType": "YulTypedName",
														"src": "3975:6:13",
														"type": ""
													}
												],
												"src": "3916:329:13"
											},
											{
												"body": {
													"nativeSrc": "4279:152:13",
													"nodeType": "YulBlock",
													"src": "4279:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4296:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4296:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4299:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4299:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4289:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4289:6:13"
																},
																"nativeSrc": "4289:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4289:88:13"
															},
															"nativeSrc": "4289:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4289:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4393:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4393:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4396:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4396:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4386:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4386:6:13"
																},
																"nativeSrc": "4386:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4386:15:13"
															},
															"nativeSrc": "4386:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4386:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4417:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4417:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4420:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4420:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4410:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4410:6:13"
																},
																"nativeSrc": "4410:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4410:15:13"
															},
															"nativeSrc": "4410:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4410:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4251:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4251:180:13"
											},
											{
												"body": {
													"nativeSrc": "4485:362:13",
													"nodeType": "YulBlock",
													"src": "4485:362:13",
													"statements": [
														{
															"nativeSrc": "4495:25:13",
															"nodeType": "YulAssignment",
															"src": "4495:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4518:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4518:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4500:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4500:17:13"
																},
																"nativeSrc": "4500:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4500:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "4495:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "4495:1:13"
																}
															]
														},
														{
															"nativeSrc": "4529:25:13",
															"nodeType": "YulAssignment",
															"src": "4529:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "4552:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4552:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4534:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4534:17:13"
																},
																"nativeSrc": "4534:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4534:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "4529:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "4529:1:13"
																}
															]
														},
														{
															"nativeSrc": "4563:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4563:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4586:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4586:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4589:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "4589:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4582:3:13"
																},
																"nativeSrc": "4582:9:13",
																"nodeType": "YulFunctionCall",
																"src": "4582:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "4567:11:13",
																	"nodeType": "YulTypedName",
																	"src": "4567:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4600:41:13",
															"nodeType": "YulAssignment",
															"src": "4600:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "4629:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "4629:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "4611:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "4611:17:13"
																},
																"nativeSrc": "4611:30:13",
																"nodeType": "YulFunctionCall",
																"src": "4611:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4600:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4600:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4818:22:13",
																"nodeType": "YulBlock",
																"src": "4818:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4820:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4820:16:13"
																			},
																			"nativeSrc": "4820:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4820:18:13"
																		},
																		"nativeSrc": "4820:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4820:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4751:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "4751:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4744:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4744:6:13"
																				},
																				"nativeSrc": "4744:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4744:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4774:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "4774:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4781:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "4781:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4790:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "4790:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4777:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4777:3:13"
																						},
																						"nativeSrc": "4777:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4777:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4771:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4771:2:13"
																				},
																				"nativeSrc": "4771:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4771:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4724:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4724:2:13"
																		},
																		"nativeSrc": "4724:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4724:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4704:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4704:6:13"
																},
																"nativeSrc": "4704:113:13",
																"nodeType": "YulFunctionCall",
																"src": "4704:113:13"
															},
															"nativeSrc": "4701:139:13",
															"nodeType": "YulIf",
															"src": "4701:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4437:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4468:1:13",
														"nodeType": "YulTypedName",
														"src": "4468:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4471:1:13",
														"nodeType": "YulTypedName",
														"src": "4471:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4477:7:13",
														"nodeType": "YulTypedName",
														"src": "4477:7:13",
														"type": ""
													}
												],
												"src": "4437:410:13"
											},
											{
												"body": {
													"nativeSrc": "4881:152:13",
													"nodeType": "YulBlock",
													"src": "4881:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4898:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4898:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4901:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4901:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4891:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4891:6:13"
																},
																"nativeSrc": "4891:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4891:88:13"
															},
															"nativeSrc": "4891:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4891:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4995:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4995:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4998:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4998:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4988:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4988:6:13"
																},
																"nativeSrc": "4988:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4988:15:13"
															},
															"nativeSrc": "4988:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4988:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5019:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5019:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5022:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5022:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5012:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5012:6:13"
																},
																"nativeSrc": "5012:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5012:15:13"
															},
															"nativeSrc": "5012:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5012:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "4853:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4853:180:13"
											},
											{
												"body": {
													"nativeSrc": "5081:143:13",
													"nodeType": "YulBlock",
													"src": "5081:143:13",
													"statements": [
														{
															"nativeSrc": "5091:25:13",
															"nodeType": "YulAssignment",
															"src": "5091:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5114:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5114:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5096:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5096:17:13"
																},
																"nativeSrc": "5096:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5096:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5091:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5091:1:13"
																}
															]
														},
														{
															"nativeSrc": "5125:25:13",
															"nodeType": "YulAssignment",
															"src": "5125:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5148:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5148:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5130:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5130:17:13"
																},
																"nativeSrc": "5130:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5130:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5125:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5125:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5172:22:13",
																"nodeType": "YulBlock",
																"src": "5172:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5174:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5174:16:13"
																			},
																			"nativeSrc": "5174:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5174:18:13"
																		},
																		"nativeSrc": "5174:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5174:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5169:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5169:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5162:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5162:6:13"
																},
																"nativeSrc": "5162:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5162:9:13"
															},
															"nativeSrc": "5159:35:13",
															"nodeType": "YulIf",
															"src": "5159:35:13"
														},
														{
															"nativeSrc": "5204:14:13",
															"nodeType": "YulAssignment",
															"src": "5204:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5213:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5213:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5216:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5216:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5209:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5209:3:13"
																},
																"nativeSrc": "5209:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5209:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "5204:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5204:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5039:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5070:1:13",
														"nodeType": "YulTypedName",
														"src": "5070:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5073:1:13",
														"nodeType": "YulTypedName",
														"src": "5073:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5079:1:13",
														"nodeType": "YulTypedName",
														"src": "5079:1:13",
														"type": ""
													}
												],
												"src": "5039:185:13"
											},
											{
												"body": {
													"nativeSrc": "5258:152:13",
													"nodeType": "YulBlock",
													"src": "5258:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5275:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5275:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5278:77:13",
																		"nodeType": "YulLiteral",
																		"src": "5278:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5268:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5268:6:13"
																},
																"nativeSrc": "5268:88:13",
																"nodeType": "YulFunctionCall",
																"src": "5268:88:13"
															},
															"nativeSrc": "5268:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "5268:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5372:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5372:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5375:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5375:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5365:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5365:6:13"
																},
																"nativeSrc": "5365:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5365:15:13"
															},
															"nativeSrc": "5365:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5365:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5396:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5396:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5399:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5399:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5389:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5389:6:13"
																},
																"nativeSrc": "5389:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5389:15:13"
															},
															"nativeSrc": "5389:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5389:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5230:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5230:180:13"
											},
											{
												"body": {
													"nativeSrc": "5467:269:13",
													"nodeType": "YulBlock",
													"src": "5467:269:13",
													"statements": [
														{
															"nativeSrc": "5477:22:13",
															"nodeType": "YulAssignment",
															"src": "5477:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5491:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5491:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5497:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5497:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5487:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5487:3:13"
																},
																"nativeSrc": "5487:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5487:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5477:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5477:6:13"
																}
															]
														},
														{
															"nativeSrc": "5508:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5508:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5538:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5538:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5544:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5544:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5534:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:13"
																},
																"nativeSrc": "5534:12:13",
																"nodeType": "YulFunctionCall",
																"src": "5534:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5512:18:13",
																	"nodeType": "YulTypedName",
																	"src": "5512:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5585:51:13",
																"nodeType": "YulBlock",
																"src": "5585:51:13",
																"statements": [
																	{
																		"nativeSrc": "5599:27:13",
																		"nodeType": "YulAssignment",
																		"src": "5599:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5613:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5613:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5621:4:13",
																					"nodeType": "YulLiteral",
																					"src": "5621:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5609:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "5609:3:13"
																			},
																			"nativeSrc": "5609:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5609:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5599:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5599:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5565:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "5565:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5558:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5558:6:13"
																},
																"nativeSrc": "5558:26:13",
																"nodeType": "YulFunctionCall",
																"src": "5558:26:13"
															},
															"nativeSrc": "5555:81:13",
															"nodeType": "YulIf",
															"src": "5555:81:13"
														},
														{
															"body": {
																"nativeSrc": "5688:42:13",
																"nodeType": "YulBlock",
																"src": "5688:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "5702:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5702:16:13"
																			},
																			"nativeSrc": "5702:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5702:18:13"
																		},
																		"nativeSrc": "5702:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5652:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "5652:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5675:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5675:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5683:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5683:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5672:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5672:2:13"
																		},
																		"nativeSrc": "5672:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5672:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5649:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5649:2:13"
																},
																"nativeSrc": "5649:38:13",
																"nodeType": "YulFunctionCall",
																"src": "5649:38:13"
															},
															"nativeSrc": "5646:84:13",
															"nodeType": "YulIf",
															"src": "5646:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5416:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5451:4:13",
														"nodeType": "YulTypedName",
														"src": "5451:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5460:6:13",
														"nodeType": "YulTypedName",
														"src": "5460:6:13",
														"type": ""
													}
												],
												"src": "5416:320:13"
											},
											{
												"body": {
													"nativeSrc": "5786:61:13",
													"nodeType": "YulBlock",
													"src": "5786:61:13",
													"statements": [
														{
															"nativeSrc": "5796:45:13",
															"nodeType": "YulAssignment",
															"src": "5796:45:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5811:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5811:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5818:22:13",
																		"nodeType": "YulLiteral",
																		"src": "5818:22:13",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5807:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5807:3:13"
																},
																"nativeSrc": "5807:34:13",
																"nodeType": "YulFunctionCall",
																"src": "5807:34:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5796:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5796:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "5742:105:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5768:5:13",
														"nodeType": "YulTypedName",
														"src": "5768:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5778:7:13",
														"nodeType": "YulTypedName",
														"src": "5778:7:13",
														"type": ""
													}
												],
												"src": "5742:105:13"
											},
											{
												"body": {
													"nativeSrc": "5895:78:13",
													"nodeType": "YulBlock",
													"src": "5895:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5951:16:13",
																"nodeType": "YulBlock",
																"src": "5951:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5960:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5960:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5963:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5963:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5953:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5953:6:13"
																			},
																			"nativeSrc": "5953:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5953:12:13"
																		},
																		"nativeSrc": "5953:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5953:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5918:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5918:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5942:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5942:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "5925:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "5925:16:13"
																				},
																				"nativeSrc": "5925:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5925:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5915:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5915:2:13"
																		},
																		"nativeSrc": "5915:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5915:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5908:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5908:6:13"
																},
																"nativeSrc": "5908:42:13",
																"nodeType": "YulFunctionCall",
																"src": "5908:42:13"
															},
															"nativeSrc": "5905:62:13",
															"nodeType": "YulIf",
															"src": "5905:62:13"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "5853:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5888:5:13",
														"nodeType": "YulTypedName",
														"src": "5888:5:13",
														"type": ""
													}
												],
												"src": "5853:120:13"
											},
											{
												"body": {
													"nativeSrc": "6041:79:13",
													"nodeType": "YulBlock",
													"src": "6041:79:13",
													"statements": [
														{
															"nativeSrc": "6051:22:13",
															"nodeType": "YulAssignment",
															"src": "6051:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6066:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6066:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6060:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6060:5:13"
																},
																"nativeSrc": "6060:13:13",
																"nodeType": "YulFunctionCall",
																"src": "6060:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6051:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6051:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6108:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6108:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "6082:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "6082:25:13"
																},
																"nativeSrc": "6082:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6082:32:13"
															},
															"nativeSrc": "6082:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "6082:32:13"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "5979:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6019:6:13",
														"nodeType": "YulTypedName",
														"src": "6019:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6027:3:13",
														"nodeType": "YulTypedName",
														"src": "6027:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6035:5:13",
														"nodeType": "YulTypedName",
														"src": "6035:5:13",
														"type": ""
													}
												],
												"src": "5979:141:13"
											},
											{
												"body": {
													"nativeSrc": "6170:32:13",
													"nodeType": "YulBlock",
													"src": "6170:32:13",
													"statements": [
														{
															"nativeSrc": "6180:16:13",
															"nodeType": "YulAssignment",
															"src": "6180:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "6191:5:13",
																"nodeType": "YulIdentifier",
																"src": "6191:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6180:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6180:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "6126:76:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6152:5:13",
														"nodeType": "YulTypedName",
														"src": "6152:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6162:7:13",
														"nodeType": "YulTypedName",
														"src": "6162:7:13",
														"type": ""
													}
												],
												"src": "6126:76:13"
											},
											{
												"body": {
													"nativeSrc": "6250:78:13",
													"nodeType": "YulBlock",
													"src": "6250:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6306:16:13",
																"nodeType": "YulBlock",
																"src": "6306:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6315:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6315:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6318:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6318:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6308:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6308:6:13"
																			},
																			"nativeSrc": "6308:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6308:12:13"
																		},
																		"nativeSrc": "6308:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6308:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6273:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6273:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6297:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6297:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "6280:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "6280:16:13"
																				},
																				"nativeSrc": "6280:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6280:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6270:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6270:2:13"
																		},
																		"nativeSrc": "6270:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6270:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6263:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6263:6:13"
																},
																"nativeSrc": "6263:42:13",
																"nodeType": "YulFunctionCall",
																"src": "6263:42:13"
															},
															"nativeSrc": "6260:62:13",
															"nodeType": "YulIf",
															"src": "6260:62:13"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "6208:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6243:5:13",
														"nodeType": "YulTypedName",
														"src": "6243:5:13",
														"type": ""
													}
												],
												"src": "6208:120:13"
											},
											{
												"body": {
													"nativeSrc": "6396:79:13",
													"nodeType": "YulBlock",
													"src": "6396:79:13",
													"statements": [
														{
															"nativeSrc": "6406:22:13",
															"nodeType": "YulAssignment",
															"src": "6406:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6421:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6421:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6415:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6415:5:13"
																},
																"nativeSrc": "6415:13:13",
																"nodeType": "YulFunctionCall",
																"src": "6415:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6406:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6406:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6463:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6463:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "6437:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "6437:25:13"
																},
																"nativeSrc": "6437:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6437:32:13"
															},
															"nativeSrc": "6437:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "6437:32:13"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "6334:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6374:6:13",
														"nodeType": "YulTypedName",
														"src": "6374:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6382:3:13",
														"nodeType": "YulTypedName",
														"src": "6382:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6390:5:13",
														"nodeType": "YulTypedName",
														"src": "6390:5:13",
														"type": ""
													}
												],
												"src": "6334:141:13"
											},
											{
												"body": {
													"nativeSrc": "6544:80:13",
													"nodeType": "YulBlock",
													"src": "6544:80:13",
													"statements": [
														{
															"nativeSrc": "6554:22:13",
															"nodeType": "YulAssignment",
															"src": "6554:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6569:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6569:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6563:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6563:5:13"
																},
																"nativeSrc": "6563:13:13",
																"nodeType": "YulFunctionCall",
																"src": "6563:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6554:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6554:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6612:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6612:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6585:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "6585:26:13"
																},
																"nativeSrc": "6585:33:13",
																"nodeType": "YulFunctionCall",
																"src": "6585:33:13"
															},
															"nativeSrc": "6585:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "6585:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "6481:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6522:6:13",
														"nodeType": "YulTypedName",
														"src": "6522:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6530:3:13",
														"nodeType": "YulTypedName",
														"src": "6530:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6538:5:13",
														"nodeType": "YulTypedName",
														"src": "6538:5:13",
														"type": ""
													}
												],
												"src": "6481:143:13"
											},
											{
												"body": {
													"nativeSrc": "6772:829:13",
													"nodeType": "YulBlock",
													"src": "6772:829:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6819:83:13",
																"nodeType": "YulBlock",
																"src": "6819:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6821:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6821:77:13"
																			},
																			"nativeSrc": "6821:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6821:79:13"
																		},
																		"nativeSrc": "6821:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6821:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6793:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6793:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6802:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6802:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6789:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6789:3:13"
																		},
																		"nativeSrc": "6789:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6789:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6814:3:13",
																		"nodeType": "YulLiteral",
																		"src": "6814:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6785:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6785:3:13"
																},
																"nativeSrc": "6785:33:13",
																"nodeType": "YulFunctionCall",
																"src": "6785:33:13"
															},
															"nativeSrc": "6782:120:13",
															"nodeType": "YulIf",
															"src": "6782:120:13"
														},
														{
															"nativeSrc": "6912:127:13",
															"nodeType": "YulBlock",
															"src": "6912:127:13",
															"statements": [
																{
																	"nativeSrc": "6927:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6927:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6941:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6941:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6931:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6931:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6956:73:13",
																	"nodeType": "YulAssignment",
																	"src": "6956:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7001:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7001:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7012:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7012:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6997:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6997:3:13"
																				},
																				"nativeSrc": "6997:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6997:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7021:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7021:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "6966:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "6966:30:13"
																		},
																		"nativeSrc": "6966:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6966:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6956:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6956:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7049:128:13",
															"nodeType": "YulBlock",
															"src": "7049:128:13",
															"statements": [
																{
																	"nativeSrc": "7064:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7064:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7078:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7078:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7068:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7068:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7094:73:13",
																	"nodeType": "YulAssignment",
																	"src": "7094:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7139:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7139:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7150:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7150:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7135:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7135:3:13"
																				},
																				"nativeSrc": "7135:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7135:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7159:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7159:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "7104:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "7104:30:13"
																		},
																		"nativeSrc": "7104:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7104:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7094:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7094:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7187:129:13",
															"nodeType": "YulBlock",
															"src": "7187:129:13",
															"statements": [
																{
																	"nativeSrc": "7202:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7202:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7216:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7216:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7206:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7206:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7232:74:13",
																	"nodeType": "YulAssignment",
																	"src": "7232:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7278:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7278:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7289:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7289:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7274:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7274:3:13"
																				},
																				"nativeSrc": "7274:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7274:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7298:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7298:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7242:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "7242:31:13"
																		},
																		"nativeSrc": "7242:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7242:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7232:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7232:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7326:129:13",
															"nodeType": "YulBlock",
															"src": "7326:129:13",
															"statements": [
																{
																	"nativeSrc": "7341:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7341:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7355:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7355:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7345:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7345:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7371:74:13",
																	"nodeType": "YulAssignment",
																	"src": "7371:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7417:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7428:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7413:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:13"
																				},
																				"nativeSrc": "7413:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7437:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7381:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "7381:31:13"
																		},
																		"nativeSrc": "7381:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7381:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7371:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7371:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7465:129:13",
															"nodeType": "YulBlock",
															"src": "7465:129:13",
															"statements": [
																{
																	"nativeSrc": "7480:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7480:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7494:3:13",
																		"nodeType": "YulLiteral",
																		"src": "7494:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7484:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7484:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7511:73:13",
																	"nodeType": "YulAssignment",
																	"src": "7511:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7556:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7556:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7567:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7567:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7552:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7552:3:13"
																				},
																				"nativeSrc": "7552:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7552:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7576:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7576:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "7521:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "7521:30:13"
																		},
																		"nativeSrc": "7521:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7521:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "7511:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7511:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "6630:971:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6710:9:13",
														"nodeType": "YulTypedName",
														"src": "6710:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6721:7:13",
														"nodeType": "YulTypedName",
														"src": "6721:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6733:6:13",
														"nodeType": "YulTypedName",
														"src": "6733:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6741:6:13",
														"nodeType": "YulTypedName",
														"src": "6741:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6749:6:13",
														"nodeType": "YulTypedName",
														"src": "6749:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6757:6:13",
														"nodeType": "YulTypedName",
														"src": "6757:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "6765:6:13",
														"nodeType": "YulTypedName",
														"src": "6765:6:13",
														"type": ""
													}
												],
												"src": "6630:971:13"
											},
											{
												"body": {
													"nativeSrc": "7713:66:13",
													"nodeType": "YulBlock",
													"src": "7713:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7735:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7735:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7743:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7743:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7731:3:13"
																		},
																		"nativeSrc": "7731:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7731:14:13"
																	},
																	{
																		"hexValue": "4d7573742062652070726f706f736564206f776e6572",
																		"kind": "string",
																		"nativeSrc": "7747:24:13",
																		"nodeType": "YulLiteral",
																		"src": "7747:24:13",
																		"type": "",
																		"value": "Must be proposed owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7724:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7724:6:13"
																},
																"nativeSrc": "7724:48:13",
																"nodeType": "YulFunctionCall",
																"src": "7724:48:13"
															},
															"nativeSrc": "7724:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "7724:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
												"nativeSrc": "7607:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7705:6:13",
														"nodeType": "YulTypedName",
														"src": "7705:6:13",
														"type": ""
													}
												],
												"src": "7607:172:13"
											},
											{
												"body": {
													"nativeSrc": "7931:220:13",
													"nodeType": "YulBlock",
													"src": "7931:220:13",
													"statements": [
														{
															"nativeSrc": "7941:74:13",
															"nodeType": "YulAssignment",
															"src": "7941:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8007:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8007:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8012:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8012:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7948:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7948:58:13"
																},
																"nativeSrc": "7948:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7948:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7941:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7941:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8113:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8113:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																	"nativeSrc": "8024:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "8024:88:13"
																},
																"nativeSrc": "8024:93:13",
																"nodeType": "YulFunctionCall",
																"src": "8024:93:13"
															},
															"nativeSrc": "8024:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "8024:93:13"
														},
														{
															"nativeSrc": "8126:19:13",
															"nodeType": "YulAssignment",
															"src": "8126:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8137:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8137:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8142:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8142:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8133:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8133:3:13"
																},
																"nativeSrc": "8133:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8133:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8126:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8126:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7785:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7919:3:13",
														"nodeType": "YulTypedName",
														"src": "7919:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7927:3:13",
														"nodeType": "YulTypedName",
														"src": "7927:3:13",
														"type": ""
													}
												],
												"src": "7785:366:13"
											},
											{
												"body": {
													"nativeSrc": "8328:248:13",
													"nodeType": "YulBlock",
													"src": "8328:248:13",
													"statements": [
														{
															"nativeSrc": "8338:26:13",
															"nodeType": "YulAssignment",
															"src": "8338:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8350:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8350:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8361:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8361:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8346:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8346:3:13"
																},
																"nativeSrc": "8346:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8346:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8338:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8338:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8385:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8385:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8396:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8396:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8381:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8381:3:13"
																		},
																		"nativeSrc": "8381:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8381:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8404:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8404:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8410:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8410:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8400:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8400:3:13"
																		},
																		"nativeSrc": "8400:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8400:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8374:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8374:6:13"
																},
																"nativeSrc": "8374:47:13",
																"nodeType": "YulFunctionCall",
																"src": "8374:47:13"
															},
															"nativeSrc": "8374:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "8374:47:13"
														},
														{
															"nativeSrc": "8430:139:13",
															"nodeType": "YulAssignment",
															"src": "8430:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8564:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8564:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8438:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "8438:124:13"
																},
																"nativeSrc": "8438:131:13",
																"nodeType": "YulFunctionCall",
																"src": "8438:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8430:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8430:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8157:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8308:9:13",
														"nodeType": "YulTypedName",
														"src": "8308:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8323:4:13",
														"nodeType": "YulTypedName",
														"src": "8323:4:13",
														"type": ""
													}
												],
												"src": "8157:419:13"
											},
											{
												"body": {
													"nativeSrc": "8708:206:13",
													"nodeType": "YulBlock",
													"src": "8708:206:13",
													"statements": [
														{
															"nativeSrc": "8718:26:13",
															"nodeType": "YulAssignment",
															"src": "8718:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8730:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8730:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8741:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8741:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8726:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8726:3:13"
																},
																"nativeSrc": "8726:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8726:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8718:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8718:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8798:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8798:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8811:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8811:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8822:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8822:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8807:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8807:3:13"
																		},
																		"nativeSrc": "8807:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8807:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8754:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8754:43:13"
																},
																"nativeSrc": "8754:71:13",
																"nodeType": "YulFunctionCall",
																"src": "8754:71:13"
															},
															"nativeSrc": "8754:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "8754:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8879:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8879:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8892:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8892:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8903:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8903:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8888:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8888:3:13"
																		},
																		"nativeSrc": "8888:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8888:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8835:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8835:43:13"
																},
																"nativeSrc": "8835:72:13",
																"nodeType": "YulFunctionCall",
																"src": "8835:72:13"
															},
															"nativeSrc": "8835:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "8835:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8582:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8672:9:13",
														"nodeType": "YulTypedName",
														"src": "8672:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8684:6:13",
														"nodeType": "YulTypedName",
														"src": "8684:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8692:6:13",
														"nodeType": "YulTypedName",
														"src": "8692:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8703:4:13",
														"nodeType": "YulTypedName",
														"src": "8703:4:13",
														"type": ""
													}
												],
												"src": "8582:332:13"
											},
											{
												"body": {
													"nativeSrc": "8962:48:13",
													"nodeType": "YulBlock",
													"src": "8962:48:13",
													"statements": [
														{
															"nativeSrc": "8972:32:13",
															"nodeType": "YulAssignment",
															"src": "8972:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8997:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "8990:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8990:6:13"
																		},
																		"nativeSrc": "8990:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8990:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8983:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8983:6:13"
																},
																"nativeSrc": "8983:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8983:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8972:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8972:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "8920:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8944:5:13",
														"nodeType": "YulTypedName",
														"src": "8944:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8954:7:13",
														"nodeType": "YulTypedName",
														"src": "8954:7:13",
														"type": ""
													}
												],
												"src": "8920:90:13"
											},
											{
												"body": {
													"nativeSrc": "9056:76:13",
													"nodeType": "YulBlock",
													"src": "9056:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:16:13",
																"nodeType": "YulBlock",
																"src": "9110:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9119:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9119:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9122:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9122:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9112:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9112:6:13"
																			},
																			"nativeSrc": "9112:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:12:13"
																		},
																		"nativeSrc": "9112:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9079:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "9079:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9101:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "9101:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "9086:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "9086:14:13"
																				},
																				"nativeSrc": "9086:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9086:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9076:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "9076:2:13"
																		},
																		"nativeSrc": "9076:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9076:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9069:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9069:6:13"
																},
																"nativeSrc": "9069:40:13",
																"nodeType": "YulFunctionCall",
																"src": "9069:40:13"
															},
															"nativeSrc": "9066:60:13",
															"nodeType": "YulIf",
															"src": "9066:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "9016:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9049:5:13",
														"nodeType": "YulTypedName",
														"src": "9049:5:13",
														"type": ""
													}
												],
												"src": "9016:116:13"
											},
											{
												"body": {
													"nativeSrc": "9198:77:13",
													"nodeType": "YulBlock",
													"src": "9198:77:13",
													"statements": [
														{
															"nativeSrc": "9208:22:13",
															"nodeType": "YulAssignment",
															"src": "9208:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9223:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9223:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9217:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9217:5:13"
																},
																"nativeSrc": "9217:13:13",
																"nodeType": "YulFunctionCall",
																"src": "9217:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9208:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9208:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9263:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9263:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9239:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "9239:23:13"
																},
																"nativeSrc": "9239:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9239:30:13"
															},
															"nativeSrc": "9239:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9239:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9138:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9176:6:13",
														"nodeType": "YulTypedName",
														"src": "9176:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9184:3:13",
														"nodeType": "YulTypedName",
														"src": "9184:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9192:5:13",
														"nodeType": "YulTypedName",
														"src": "9192:5:13",
														"type": ""
													}
												],
												"src": "9138:137:13"
											},
											{
												"body": {
													"nativeSrc": "9355:271:13",
													"nodeType": "YulBlock",
													"src": "9355:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9401:83:13",
																"nodeType": "YulBlock",
																"src": "9401:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9403:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9403:77:13"
																			},
																			"nativeSrc": "9403:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9403:79:13"
																		},
																		"nativeSrc": "9403:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9403:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9376:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9376:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9385:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9385:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9372:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9372:3:13"
																		},
																		"nativeSrc": "9372:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9372:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9397:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9397:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9368:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9368:3:13"
																},
																"nativeSrc": "9368:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9368:32:13"
															},
															"nativeSrc": "9365:119:13",
															"nodeType": "YulIf",
															"src": "9365:119:13"
														},
														{
															"nativeSrc": "9494:125:13",
															"nodeType": "YulBlock",
															"src": "9494:125:13",
															"statements": [
																{
																	"nativeSrc": "9509:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9509:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9523:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9523:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9513:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9513:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9538:71:13",
																	"nodeType": "YulAssignment",
																	"src": "9538:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9581:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9581:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9592:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9592:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9577:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9577:3:13"
																				},
																				"nativeSrc": "9577:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9577:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9601:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9601:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9548:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "9548:28:13"
																		},
																		"nativeSrc": "9548:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9548:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9538:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9538:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9281:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9325:9:13",
														"nodeType": "YulTypedName",
														"src": "9325:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9336:7:13",
														"nodeType": "YulTypedName",
														"src": "9336:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9348:6:13",
														"nodeType": "YulTypedName",
														"src": "9348:6:13",
														"type": ""
													}
												],
												"src": "9281:345:13"
											},
											{
												"body": {
													"nativeSrc": "9738:66:13",
													"nodeType": "YulBlock",
													"src": "9738:66:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9760:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9760:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9768:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9768:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9756:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9756:3:13"
																		},
																		"nativeSrc": "9756:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9756:14:13"
																	},
																	{
																		"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
																		"kind": "string",
																		"nativeSrc": "9772:24:13",
																		"nodeType": "YulLiteral",
																		"src": "9772:24:13",
																		"type": "",
																		"value": "Only callable by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9749:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9749:6:13"
																},
																"nativeSrc": "9749:48:13",
																"nodeType": "YulFunctionCall",
																"src": "9749:48:13"
															},
															"nativeSrc": "9749:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "9749:48:13"
														}
													]
												},
												"name": "store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
												"nativeSrc": "9632:172:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9730:6:13",
														"nodeType": "YulTypedName",
														"src": "9730:6:13",
														"type": ""
													}
												],
												"src": "9632:172:13"
											},
											{
												"body": {
													"nativeSrc": "9956:220:13",
													"nodeType": "YulBlock",
													"src": "9956:220:13",
													"statements": [
														{
															"nativeSrc": "9966:74:13",
															"nodeType": "YulAssignment",
															"src": "9966:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10032:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10032:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10037:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10037:2:13",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9973:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "9973:58:13"
																},
																"nativeSrc": "9973:67:13",
																"nodeType": "YulFunctionCall",
																"src": "9973:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9966:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9966:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10138:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10138:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																	"nativeSrc": "10049:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10049:88:13"
																},
																"nativeSrc": "10049:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10049:93:13"
															},
															"nativeSrc": "10049:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10049:93:13"
														},
														{
															"nativeSrc": "10151:19:13",
															"nodeType": "YulAssignment",
															"src": "10151:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10162:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10162:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10167:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10167:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10158:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10158:3:13"
																},
																"nativeSrc": "10158:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10158:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10151:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10151:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9810:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9944:3:13",
														"nodeType": "YulTypedName",
														"src": "9944:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9952:3:13",
														"nodeType": "YulTypedName",
														"src": "9952:3:13",
														"type": ""
													}
												],
												"src": "9810:366:13"
											},
											{
												"body": {
													"nativeSrc": "10353:248:13",
													"nodeType": "YulBlock",
													"src": "10353:248:13",
													"statements": [
														{
															"nativeSrc": "10363:26:13",
															"nodeType": "YulAssignment",
															"src": "10363:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10375:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10375:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10386:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10386:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10371:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10371:3:13"
																},
																"nativeSrc": "10371:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10371:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10363:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10363:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10410:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10410:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10421:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10421:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10406:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10406:3:13"
																		},
																		"nativeSrc": "10406:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10406:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10429:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10429:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10435:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10435:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10425:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10425:3:13"
																		},
																		"nativeSrc": "10425:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10425:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10399:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10399:6:13"
																},
																"nativeSrc": "10399:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10399:47:13"
															},
															"nativeSrc": "10399:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10399:47:13"
														},
														{
															"nativeSrc": "10455:139:13",
															"nodeType": "YulAssignment",
															"src": "10455:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10589:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10589:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10463:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10463:124:13"
																},
																"nativeSrc": "10463:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10463:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10455:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10455:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10182:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10333:9:13",
														"nodeType": "YulTypedName",
														"src": "10333:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10348:4:13",
														"nodeType": "YulTypedName",
														"src": "10348:4:13",
														"type": ""
													}
												],
												"src": "10182:419:13"
											},
											{
												"body": {
													"nativeSrc": "10713:67:13",
													"nodeType": "YulBlock",
													"src": "10713:67:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10735:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10743:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10743:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10731:3:13"
																		},
																		"nativeSrc": "10731:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10731:14:13"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
																		"kind": "string",
																		"nativeSrc": "10747:25:13",
																		"nodeType": "YulLiteral",
																		"src": "10747:25:13",
																		"type": "",
																		"value": "Cannot transfer to self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10724:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10724:6:13"
																},
																"nativeSrc": "10724:49:13",
																"nodeType": "YulFunctionCall",
																"src": "10724:49:13"
															},
															"nativeSrc": "10724:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "10724:49:13"
														}
													]
												},
												"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
												"nativeSrc": "10607:173:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10705:6:13",
														"nodeType": "YulTypedName",
														"src": "10705:6:13",
														"type": ""
													}
												],
												"src": "10607:173:13"
											},
											{
												"body": {
													"nativeSrc": "10932:220:13",
													"nodeType": "YulBlock",
													"src": "10932:220:13",
													"statements": [
														{
															"nativeSrc": "10942:74:13",
															"nodeType": "YulAssignment",
															"src": "10942:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11008:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11008:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11013:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11013:2:13",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10949:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10949:58:13"
																},
																"nativeSrc": "10949:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10949:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10942:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10942:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11114:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11114:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																	"nativeSrc": "11025:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11025:88:13"
																},
																"nativeSrc": "11025:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11025:93:13"
															},
															"nativeSrc": "11025:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11025:93:13"
														},
														{
															"nativeSrc": "11127:19:13",
															"nodeType": "YulAssignment",
															"src": "11127:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11138:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11138:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11143:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11143:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11134:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11134:3:13"
																},
																"nativeSrc": "11134:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11134:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11127:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11127:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10786:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10920:3:13",
														"nodeType": "YulTypedName",
														"src": "10920:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10928:3:13",
														"nodeType": "YulTypedName",
														"src": "10928:3:13",
														"type": ""
													}
												],
												"src": "10786:366:13"
											},
											{
												"body": {
													"nativeSrc": "11329:248:13",
													"nodeType": "YulBlock",
													"src": "11329:248:13",
													"statements": [
														{
															"nativeSrc": "11339:26:13",
															"nodeType": "YulAssignment",
															"src": "11339:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11351:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11351:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11362:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11362:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11347:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11347:3:13"
																},
																"nativeSrc": "11347:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11347:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11339:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11339:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11386:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11386:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11397:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11397:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11382:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11382:3:13"
																		},
																		"nativeSrc": "11382:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11382:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11405:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11405:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11411:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11411:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11401:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11401:3:13"
																		},
																		"nativeSrc": "11401:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11401:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11375:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11375:6:13"
																},
																"nativeSrc": "11375:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11375:47:13"
															},
															"nativeSrc": "11375:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11375:47:13"
														},
														{
															"nativeSrc": "11431:139:13",
															"nodeType": "YulAssignment",
															"src": "11431:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11565:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11565:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11439:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11439:124:13"
																},
																"nativeSrc": "11439:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11439:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11431:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11431:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11158:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11309:9:13",
														"nodeType": "YulTypedName",
														"src": "11309:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11324:4:13",
														"nodeType": "YulTypedName",
														"src": "11324:4:13",
														"type": ""
													}
												],
												"src": "11158:419:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be proposed owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only callable by owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to self\")\n\n    }\n\n    function abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061008f575f3560e01c806379ba50971161005857806379ba5097146101755780638da5cb5b1461018b578063a4821719146101b5578063aaf836ff146101d4578063f2fde38b146101fe5761008f565b806241e5501461009357806304338841146100cf5780631ad46a5f1461010b5780633ccfd60b146101355780633d900d9e1461014b575b5f80fd5b34801561009e575f80fd5b506100b960048036038101906100b491906108cf565b610226565b6040516100c69190610909565b60405180910390f35b3480156100da575f80fd5b506100f560048036038101906100f091906108cf565b61025e565b6040516101029190610909565b60405180910390f35b348015610116575f80fd5b5061011f6102aa565b60405161012c91906109ac565b60405180910390f35b348015610140575f80fd5b50610149610336565b005b348015610156575f80fd5b5061015f610384565b60405161016c9190610909565b60405180910390f35b348015610180575f80fd5b50610189610433565b005b348015610196575f80fd5b5061019f6105c2565b6040516101ac9190610a0b565b60405180910390f35b6101bd6105e9565b6040516101cb929190610a24565b60405180910390f35b3480156101df575f80fd5b506101e86106a6565b6040516101f59190610a0b565b60405180910390f35b348015610209575f80fd5b50610224600480360381019061021f9190610a75565b6106cb565b005b5f80610230610384565b90505f670de0b6b3a764000082856102489190610acd565b6102529190610b3b565b90508092505050919050565b5f80610268610384565b90505f6003546004548361027c9190610b3b565b6002548661028a9190610acd565b6102949190610b3b565b61029e9190610acd565b90508092505050919050565b600680546102b790610b98565b80601f01602080910402602001604051908101604052809291908181526020018280546102e390610b98565b801561032e5780601f106103055761010080835404028352916020019161032e565b820191905f5260205f20905b81548152906001019060200180831161031157829003601f168201915b505050505081565b61033e6106df565b3373ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610381573d5f803e3d5ffd5b50565b5f80600a5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103f0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104149190610c4e565b5050509150505f600454826104299190610acd565b9050809250505090565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b990610d0f565b60405180910390fd5b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f806105f434610226565b90506032816106039190610b3b565b915060085f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610661929190610d2d565b6020604051808303815f875af115801561067d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a19190610d89565b509091565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6106d36106df565b6106dc8161076e565b50565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461076c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076390610dfe565b60405180910390fd5b565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d390610e66565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f80fd5b5f819050919050565b6108ae8161089c565b81146108b8575f80fd5b50565b5f813590506108c9816108a5565b92915050565b5f602082840312156108e4576108e3610898565b5b5f6108f1848285016108bb565b91505092915050565b6109038161089c565b82525050565b5f60208201905061091c5f8301846108fa565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b8381101561095957808201518184015260208101905061093e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f61097e82610922565b610988818561092c565b935061099881856020860161093c565b6109a181610964565b840191505092915050565b5f6020820190508181035f8301526109c48184610974565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6109f5826109cc565b9050919050565b610a05816109eb565b82525050565b5f602082019050610a1e5f8301846109fc565b92915050565b5f604082019050610a375f8301856108fa565b610a4460208301846108fa565b9392505050565b610a54816109eb565b8114610a5e575f80fd5b50565b5f81359050610a6f81610a4b565b92915050565b5f60208284031215610a8a57610a89610898565b5b5f610a9784828501610a61565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610ad78261089c565b9150610ae28361089c565b9250828202610af08161089c565b91508282048414831517610b0757610b06610aa0565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f610b458261089c565b9150610b508361089c565b925082610b6057610b5f610b0e565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610baf57607f821691505b602082108103610bc257610bc1610b6b565b5b50919050565b5f69ffffffffffffffffffff82169050919050565b610be681610bc8565b8114610bf0575f80fd5b50565b5f81519050610c0181610bdd565b92915050565b5f819050919050565b610c1981610c07565b8114610c23575f80fd5b50565b5f81519050610c3481610c10565b92915050565b5f81519050610c48816108a5565b92915050565b5f805f805f60a08688031215610c6757610c66610898565b5b5f610c7488828901610bf3565b9550506020610c8588828901610c26565b9450506040610c9688828901610c3a565b9350506060610ca788828901610c3a565b9250506080610cb888828901610bf3565b9150509295509295909350565b7f4d7573742062652070726f706f736564206f776e6572000000000000000000005f82015250565b5f610cf960168361092c565b9150610d0482610cc5565b602082019050919050565b5f6020820190508181035f830152610d2681610ced565b9050919050565b5f604082019050610d405f8301856109fc565b610d4d60208301846108fa565b9392505050565b5f8115159050919050565b610d6881610d54565b8114610d72575f80fd5b50565b5f81519050610d8381610d5f565b92915050565b5f60208284031215610d9e57610d9d610898565b5b5f610dab84828501610d75565b91505092915050565b7f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000005f82015250565b5f610de860168361092c565b9150610df382610db4565b602082019050919050565b5f6020820190508181035f830152610e1581610ddc565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f610e5060178361092c565b9150610e5b82610e1c565b602082019050919050565b5f6020820190508181035f830152610e7d81610e44565b905091905056fea264697066735822122039933867532f54c68c612aa4c105709806c109c7a282494402db4f37891c280164736f6c63430008170033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x79BA5097 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xA4821719 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xAAF836FF EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1FE JUMPI PUSH2 0x8F JUMP JUMPDEST DUP1 PUSH3 0x41E550 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x4338841 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x1AD46A5F EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x3D900D9E EQ PUSH2 0x14B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x226 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x25E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x116 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x11F PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x9AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x336 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x156 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15F PUSH2 0x384 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x909 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x180 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x189 PUSH2 0x433 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x196 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x19F PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AC SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BD PUSH2 0x5E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CB SWAP3 SWAP2 SWAP1 PUSH2 0xA24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x6A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F5 SWAP2 SWAP1 PUSH2 0xA0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0xA75 JUMP JUMPDEST PUSH2 0x6CB JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH2 0x230 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 DUP6 PUSH2 0x248 SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x252 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x268 PUSH2 0x384 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD DUP4 PUSH2 0x27C SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH1 0x2 SLOAD DUP7 PUSH2 0x28A SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST PUSH2 0x294 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST PUSH2 0x29E SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x2B7 SWAP1 PUSH2 0xB98 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2E3 SWAP1 PUSH2 0xB98 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x32E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x305 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x32E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x311 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0x33E PUSH2 0x6DF JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x381 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3F0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x414 SWAP2 SWAP1 PUSH2 0xC4E JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH0 PUSH1 0x4 SLOAD DUP3 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0xACD JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4B9 SWAP1 PUSH2 0xD0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x5F4 CALLVALUE PUSH2 0x226 JUMP JUMPDEST SWAP1 POP PUSH1 0x32 DUP2 PUSH2 0x603 SWAP2 SWAP1 PUSH2 0xB3B JUMP JUMPDEST SWAP2 POP PUSH1 0x8 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x661 SWAP3 SWAP2 SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x67D JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6A1 SWAP2 SWAP1 PUSH2 0xD89 JUMP JUMPDEST POP SWAP1 SWAP2 JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x6D3 PUSH2 0x6DF JUMP JUMPDEST PUSH2 0x6DC DUP2 PUSH2 0x76E JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x76C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x763 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x7DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP1 PUSH2 0xE66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8AE DUP2 PUSH2 0x89C JUMP JUMPDEST DUP2 EQ PUSH2 0x8B8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x8C9 DUP2 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8E4 JUMPI PUSH2 0x8E3 PUSH2 0x898 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x8F1 DUP5 DUP3 DUP6 ADD PUSH2 0x8BB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x903 DUP2 PUSH2 0x89C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91C PUSH0 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x959 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x93E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x97E DUP3 PUSH2 0x922 JUMP JUMPDEST PUSH2 0x988 DUP2 DUP6 PUSH2 0x92C JUMP JUMPDEST SWAP4 POP PUSH2 0x998 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x93C JUMP JUMPDEST PUSH2 0x9A1 DUP2 PUSH2 0x964 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C4 DUP2 DUP5 PUSH2 0x974 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x9F5 DUP3 PUSH2 0x9CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA05 DUP2 PUSH2 0x9EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA1E PUSH0 DUP4 ADD DUP5 PUSH2 0x9FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xA37 PUSH0 DUP4 ADD DUP6 PUSH2 0x8FA JUMP JUMPDEST PUSH2 0xA44 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xA54 DUP2 PUSH2 0x9EB JUMP JUMPDEST DUP2 EQ PUSH2 0xA5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xA6F DUP2 PUSH2 0xA4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA8A JUMPI PUSH2 0xA89 PUSH2 0x898 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA97 DUP5 DUP3 DUP6 ADD PUSH2 0xA61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xAD7 DUP3 PUSH2 0x89C JUMP JUMPDEST SWAP2 POP PUSH2 0xAE2 DUP4 PUSH2 0x89C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xAF0 DUP2 PUSH2 0x89C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB07 JUMPI PUSH2 0xB06 PUSH2 0xAA0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xB45 DUP3 PUSH2 0x89C JUMP JUMPDEST SWAP2 POP PUSH2 0xB50 DUP4 PUSH2 0x89C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB60 JUMPI PUSH2 0xB5F PUSH2 0xB0E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xBAF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xBC2 JUMPI PUSH2 0xBC1 PUSH2 0xB6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBE6 DUP2 PUSH2 0xBC8 JUMP JUMPDEST DUP2 EQ PUSH2 0xBF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC01 DUP2 PUSH2 0xBDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC19 DUP2 PUSH2 0xC07 JUMP JUMPDEST DUP2 EQ PUSH2 0xC23 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC34 DUP2 PUSH2 0xC10 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xC48 DUP2 PUSH2 0x8A5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xC67 JUMPI PUSH2 0xC66 PUSH2 0x898 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xC74 DUP9 DUP3 DUP10 ADD PUSH2 0xBF3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xC85 DUP9 DUP3 DUP10 ADD PUSH2 0xC26 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xC96 DUP9 DUP3 DUP10 ADD PUSH2 0xC3A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xCA7 DUP9 DUP3 DUP10 ADD PUSH2 0xC3A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xCB8 DUP9 DUP3 DUP10 ADD PUSH2 0xBF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4D7573742062652070726F706F736564206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xCF9 PUSH1 0x16 DUP4 PUSH2 0x92C JUMP JUMPDEST SWAP2 POP PUSH2 0xD04 DUP3 PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xD26 DUP2 PUSH2 0xCED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xD40 PUSH0 DUP4 ADD DUP6 PUSH2 0x9FC JUMP JUMPDEST PUSH2 0xD4D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x8FA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD68 DUP2 PUSH2 0xD54 JUMP JUMPDEST DUP2 EQ PUSH2 0xD72 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xD83 DUP2 PUSH2 0xD5F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9E JUMPI PUSH2 0xD9D PUSH2 0x898 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xDAB DUP5 DUP3 DUP6 ADD PUSH2 0xD75 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xDE8 PUSH1 0x16 DUP4 PUSH2 0x92C JUMP JUMPDEST SWAP2 POP PUSH2 0xDF3 DUP3 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE15 DUP2 PUSH2 0xDDC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2073656C66000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xE50 PUSH1 0x17 DUP4 PUSH2 0x92C JUMP JUMPDEST SWAP2 POP PUSH2 0xE5B DUP3 PUSH2 0xE1C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xE7D DUP2 PUSH2 0xE44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY SWAP4 CODESIZE PUSH8 0x532F54C68C612AA4 0xC1 SDIV PUSH17 0x9806C109C7A282494402DB4F37891C2801 PUSH5 0x736F6C6343 STOP ADDMOD OR STOP CALLER ",
							"sourceMap": "348:2203:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:281;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1742:308;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;554:61;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2058:124;;;;;;;;;;;;;:::i;:::-;;1213:232;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1001:265:3;;;;;;;;;;;;;:::i;:::-;;1317:81;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2248:294:12;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;624:70;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;811:98:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1453:281:12;1544:7;1570:23;1596:15;:13;:15::i;:::-;1570:41;;1622:24;1686:6;1667:15;1650:14;:32;;;;:::i;:::-;1649:43;;;;:::i;:::-;1622:70;;1710:16;1703:23;;;;1453:281;;;:::o;1742:308::-;1839:7;1865:23;1891:15;:13;:15::i;:::-;1865:41;;1917:21;2003:8;;1992:6;;1974:15;:24;;;;:::i;:::-;1958:11;;1943:12;:26;;;;:::i;:::-;1942:57;;;;:::i;:::-;1941:70;;;;:::i;:::-;1917:94;;2029:13;2022:20;;;;1742:308;;;:::o;554:61::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2058:124::-;1941:20:3;:18;:20::i;:::-;2131:10:12::1;2123:28;;:51;2152:21;2123:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;2058:124::o:0;1213:232::-;1285:7;1312:12;1331:9;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1310:48;;;;;;1369:16;1405:6;;1396:5;1388:23;;;;:::i;:::-;1369:42;;1429:8;1422:15;;;;1213:232;:::o;1001:265:3:-;1074:14;;;;;;;;;;;1060:28;;:10;:28;;;1052:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1122:16;1141:7;;;;;;;;;;;1122:26;;1164:10;1154:7;;:20;;;;;;;;;;;;;;;;;;1205:1;1180:14;;:27;;;;;;;;;;;;;;;;;;1250:10;1219:42;;1240:8;1219:42;;;;;;;;;;;;1046:220;1001:265::o;1317:81::-;1364:7;1386;;;;;;;;;;;1379:14;;1317:81;:::o;2248:294:12:-;2308:17;2327:19;2378:29;2397:9;2378:18;:29::i;:::-;2364:43;;2444:2;2430:11;:16;;;;:::i;:::-;2418:28;;2457:3;;;;;;;;;;;:12;;;2470:10;2482:9;2457:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2248:294;;:::o;624:70::-;;;;;;;;;;;;;:::o;811:98:3:-;1941:20;:18;:20::i;:::-;882:22:::1;901:2;882:18;:22::i;:::-;811:98:::0;:::o;1715:111::-;1787:7;;;;;;;;;;1773:21;;:10;:21;;;1765:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;1715:111::o;1482:188::-;1550:10;1544:16;;:2;:16;;;1536:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1612:2;1595:14;;:19;;;;;;;;;;;;;;;;;;1662:2;1626:39;;1653:7;;;;;;;;;;1626:39;;;;;;;;;;;;1482:188;:::o;88:117:13:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:99::-;1429:6;1463:5;1457:12;1447:22;;1377:99;;;:::o;1482:169::-;1566:11;1600:6;1595:3;1588:19;1640:4;1635:3;1631:14;1616:29;;1482:169;;;;:::o;1657:246::-;1738:1;1748:113;1762:6;1759:1;1756:13;1748:113;;;1847:1;1842:3;1838:11;1832:18;1828:1;1823:3;1819:11;1812:39;1784:2;1781:1;1777:10;1772:15;;1748:113;;;1895:1;1886:6;1881:3;1877:16;1870:27;1719:184;1657:246;;;:::o;1909:102::-;1950:6;2001:2;1997:7;1992:2;1985:5;1981:14;1977:28;1967:38;;1909:102;;;:::o;2017:377::-;2105:3;2133:39;2166:5;2133:39;:::i;:::-;2188:71;2252:6;2247:3;2188:71;:::i;:::-;2181:78;;2268:65;2326:6;2321:3;2314:4;2307:5;2303:16;2268:65;:::i;:::-;2358:29;2380:6;2358:29;:::i;:::-;2353:3;2349:39;2342:46;;2109:285;2017:377;;;;:::o;2400:313::-;2513:4;2551:2;2540:9;2536:18;2528:26;;2600:9;2594:4;2590:20;2586:1;2575:9;2571:17;2564:47;2628:78;2701:4;2692:6;2628:78;:::i;:::-;2620:86;;2400:313;;;;:::o;2719:126::-;2756:7;2796:42;2789:5;2785:54;2774:65;;2719:126;;;:::o;2851:96::-;2888:7;2917:24;2935:5;2917:24;:::i;:::-;2906:35;;2851:96;;;:::o;2953:118::-;3040:24;3058:5;3040:24;:::i;:::-;3035:3;3028:37;2953:118;;:::o;3077:222::-;3170:4;3208:2;3197:9;3193:18;3185:26;;3221:71;3289:1;3278:9;3274:17;3265:6;3221:71;:::i;:::-;3077:222;;;;:::o;3305:332::-;3426:4;3464:2;3453:9;3449:18;3441:26;;3477:71;3545:1;3534:9;3530:17;3521:6;3477:71;:::i;:::-;3558:72;3626:2;3615:9;3611:18;3602:6;3558:72;:::i;:::-;3305:332;;;;;:::o;3643:122::-;3716:24;3734:5;3716:24;:::i;:::-;3709:5;3706:35;3696:63;;3755:1;3752;3745:12;3696:63;3643:122;:::o;3771:139::-;3817:5;3855:6;3842:20;3833:29;;3871:33;3898:5;3871:33;:::i;:::-;3771:139;;;;:::o;3916:329::-;3975:6;4024:2;4012:9;4003:7;3999:23;3995:32;3992:119;;;4030:79;;:::i;:::-;3992:119;4150:1;4175:53;4220:7;4211:6;4200:9;4196:22;4175:53;:::i;:::-;4165:63;;4121:117;3916:329;;;;:::o;4251:180::-;4299:77;4296:1;4289:88;4396:4;4393:1;4386:15;4420:4;4417:1;4410:15;4437:410;4477:7;4500:20;4518:1;4500:20;:::i;:::-;4495:25;;4534:20;4552:1;4534:20;:::i;:::-;4529:25;;4589:1;4586;4582:9;4611:30;4629:11;4611:30;:::i;:::-;4600:41;;4790:1;4781:7;4777:15;4774:1;4771:22;4751:1;4744:9;4724:83;4701:139;;4820:18;;:::i;:::-;4701:139;4485:362;4437:410;;;;:::o;4853:180::-;4901:77;4898:1;4891:88;4998:4;4995:1;4988:15;5022:4;5019:1;5012:15;5039:185;5079:1;5096:20;5114:1;5096:20;:::i;:::-;5091:25;;5130:20;5148:1;5130:20;:::i;:::-;5125:25;;5169:1;5159:35;;5174:18;;:::i;:::-;5159:35;5216:1;5213;5209:9;5204:14;;5039:185;;;;:::o;5230:180::-;5278:77;5275:1;5268:88;5375:4;5372:1;5365:15;5399:4;5396:1;5389:15;5416:320;5460:6;5497:1;5491:4;5487:12;5477:22;;5544:1;5538:4;5534:12;5565:18;5555:81;;5621:4;5613:6;5609:17;5599:27;;5555:81;5683:2;5675:6;5672:14;5652:18;5649:38;5646:84;;5702:18;;:::i;:::-;5646:84;5467:269;5416:320;;;:::o;5742:105::-;5778:7;5818:22;5811:5;5807:34;5796:45;;5742:105;;;:::o;5853:120::-;5925:23;5942:5;5925:23;:::i;:::-;5918:5;5915:34;5905:62;;5963:1;5960;5953:12;5905:62;5853:120;:::o;5979:141::-;6035:5;6066:6;6060:13;6051:22;;6082:32;6108:5;6082:32;:::i;:::-;5979:141;;;;:::o;6126:76::-;6162:7;6191:5;6180:16;;6126:76;;;:::o;6208:120::-;6280:23;6297:5;6280:23;:::i;:::-;6273:5;6270:34;6260:62;;6318:1;6315;6308:12;6260:62;6208:120;:::o;6334:141::-;6390:5;6421:6;6415:13;6406:22;;6437:32;6463:5;6437:32;:::i;:::-;6334:141;;;;:::o;6481:143::-;6538:5;6569:6;6563:13;6554:22;;6585:33;6612:5;6585:33;:::i;:::-;6481:143;;;;:::o;6630:971::-;6733:6;6741;6749;6757;6765;6814:3;6802:9;6793:7;6789:23;6785:33;6782:120;;;6821:79;;:::i;:::-;6782:120;6941:1;6966:63;7021:7;7012:6;7001:9;6997:22;6966:63;:::i;:::-;6956:73;;6912:127;7078:2;7104:63;7159:7;7150:6;7139:9;7135:22;7104:63;:::i;:::-;7094:73;;7049:128;7216:2;7242:64;7298:7;7289:6;7278:9;7274:22;7242:64;:::i;:::-;7232:74;;7187:129;7355:2;7381:64;7437:7;7428:6;7417:9;7413:22;7381:64;:::i;:::-;7371:74;;7326:129;7494:3;7521:63;7576:7;7567:6;7556:9;7552:22;7521:63;:::i;:::-;7511:73;;7465:129;6630:971;;;;;;;;:::o;7607:172::-;7747:24;7743:1;7735:6;7731:14;7724:48;7607:172;:::o;7785:366::-;7927:3;7948:67;8012:2;8007:3;7948:67;:::i;:::-;7941:74;;8024:93;8113:3;8024:93;:::i;:::-;8142:2;8137:3;8133:12;8126:19;;7785:366;;;:::o;8157:419::-;8323:4;8361:2;8350:9;8346:18;8338:26;;8410:9;8404:4;8400:20;8396:1;8385:9;8381:17;8374:47;8438:131;8564:4;8438:131;:::i;:::-;8430:139;;8157:419;;;:::o;8582:332::-;8703:4;8741:2;8730:9;8726:18;8718:26;;8754:71;8822:1;8811:9;8807:17;8798:6;8754:71;:::i;:::-;8835:72;8903:2;8892:9;8888:18;8879:6;8835:72;:::i;:::-;8582:332;;;;;:::o;8920:90::-;8954:7;8997:5;8990:13;8983:21;8972:32;;8920:90;;;:::o;9016:116::-;9086:21;9101:5;9086:21;:::i;:::-;9079:5;9076:32;9066:60;;9122:1;9119;9112:12;9066:60;9016:116;:::o;9138:137::-;9192:5;9223:6;9217:13;9208:22;;9239:30;9263:5;9239:30;:::i;:::-;9138:137;;;;:::o;9281:345::-;9348:6;9397:2;9385:9;9376:7;9372:23;9368:32;9365:119;;;9403:79;;:::i;:::-;9365:119;9523:1;9548:61;9601:7;9592:6;9581:9;9577:22;9548:61;:::i;:::-;9538:71;;9494:125;9281:345;;;;:::o;9632:172::-;9772:24;9768:1;9760:6;9756:14;9749:48;9632:172;:::o;9810:366::-;9952:3;9973:67;10037:2;10032:3;9973:67;:::i;:::-;9966:74;;10049:93;10138:3;10049:93;:::i;:::-;10167:2;10162:3;10158:12;10151:19;;9810:366;;;:::o;10182:419::-;10348:4;10386:2;10375:9;10371:18;10363:26;;10435:9;10429:4;10425:20;10421:1;10410:9;10406:17;10399:47;10463:131;10589:4;10463:131;:::i;:::-;10455:139;;10182:419;;;:::o;10607:173::-;10747:25;10743:1;10735:6;10731:14;10724:49;10607:173;:::o;10786:366::-;10928:3;10949:67;11013:2;11008:3;10949:67;:::i;:::-;10942:74;;11025:93;11114:3;11025:93;:::i;:::-;11143:2;11138:3;11134:12;11127:19;;10786:366;;;:::o;11158:419::-;11324:4;11362:2;11351:9;11347:18;11339:26;;11411:9;11405:4;11401:20;11397:1;11386:9;11382:17;11375:47;11439:131;11565:4;11439:131;:::i;:::-;11431:139;;11158:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "754000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"SLTAddress()": "2574",
								"acceptOwnership()": "54533",
								"buyToken()": "infinite",
								"checkETHPrice()": "infinite",
								"convertDollarToETH(uint256)": "infinite",
								"convertEthToDollar(uint256)": "infinite",
								"dollarAmountOfSLT()": "infinite",
								"owner()": "2537",
								"transferOwnership(address)": "30733",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 348,
									"end": 2551,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 423,
									"end": 429,
									"name": "PUSH",
									"source": 12,
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 393,
									"end": 429,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 393,
									"end": 429,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 463,
									"end": 468,
									"name": "PUSH",
									"source": 12,
									"value": "5F5E100"
								},
								{
									"begin": 436,
									"end": 468,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 436,
									"end": 468,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 500,
									"end": 506,
									"name": "PUSH",
									"source": 12,
									"value": "2540BE400"
								},
								{
									"begin": 475,
									"end": 506,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 475,
									"end": 506,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 544,
									"end": 547,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 513,
									"end": 547,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 513,
									"end": 547,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 513,
									"end": 547,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 513,
									"end": 547,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 513,
									"end": 547,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 513,
									"end": 547,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 513,
									"end": 547,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 554,
									"end": 615,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 554,
									"end": 615,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 554,
									"end": 615,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "PUSH",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 554,
									"end": 615,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 554,
									"end": 615,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "PUSH",
									"source": 12,
									"value": "3120534C54203D2024302E303220666F722050726573616C6500000000000000"
								},
								{
									"begin": 554,
									"end": 615,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "PUSH",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 554,
									"end": 615,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 554,
									"end": 615,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 554,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 554,
									"end": 615,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 554,
									"end": 615,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 652,
									"end": 694,
									"name": "PUSH",
									"source": 12,
									"value": "647C3320516692C8366FDE2B08BC6D304584C020"
								},
								{
									"begin": 624,
									"end": 694,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 624,
									"end": 694,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 624,
									"end": 694,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 624,
									"end": 694,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 624,
									"end": 694,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 624,
									"end": 694,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 624,
									"end": 694,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 729,
									"end": 739,
									"name": "PUSH",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 729,
									"end": 739,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 729,
									"end": 739,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 729,
									"end": 739,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 729,
									"end": 739,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 729,
									"end": 739,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 729,
									"end": 739,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 729,
									"end": 739,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 729,
									"end": 739,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 729,
									"end": 739,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 729,
									"end": 739,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 701,
									"end": 740,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 701,
									"end": 740,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 701,
									"end": 740,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 701,
									"end": 740,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 701,
									"end": 740,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 701,
									"end": 740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 785,
									"end": 827,
									"name": "PUSH",
									"source": 12,
									"value": "D30E2101A97DCBAEBCBC04F14C3F624E67A35165"
								},
								{
									"begin": 753,
									"end": 827,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 753,
									"end": 827,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 753,
									"end": 827,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 753,
									"end": 827,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 753,
									"end": 827,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 753,
									"end": 827,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 753,
									"end": 827,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 943,
									"end": 956,
									"name": "PUSH",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 943,
									"end": 956,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 943,
									"end": 956,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 943,
									"end": 956,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 943,
									"end": 956,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 943,
									"end": 956,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 943,
									"end": 956,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 943,
									"end": 956,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 943,
									"end": 956,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 943,
									"end": 956,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 943,
									"end": 956,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 879,
									"end": 957,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 879,
									"end": 957,
									"name": "PUSH",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 879,
									"end": 957,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 879,
									"end": 957,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 879,
									"end": 957,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 879,
									"end": 957,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1152,
									"end": 1205,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1186,
									"end": 1196,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 327,
									"end": 335,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 345,
									"end": 346,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 557,
									"end": 558,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 537,
									"end": 559,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 559,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 537,
									"end": 545,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 537,
									"end": 559,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 559,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 537,
									"end": 559,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "10"
								},
								{
									"begin": 529,
									"end": 588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "tag",
									"source": 3,
									"value": "9"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 529,
									"end": 588,
									"name": "tag",
									"source": 3,
									"value": "8"
								},
								{
									"begin": 529,
									"end": 588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 605,
									"end": 613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 602,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 595,
									"end": 602,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 595,
									"end": 613,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 595,
									"end": 613,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 647,
									"end": 648,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 623,
									"end": 635,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 623,
									"end": 649,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 623,
									"end": 649,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 623,
									"end": 649,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 619,
									"end": 698,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 619,
									"end": 698,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 678,
									"end": 690,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 659,
									"end": 677,
									"name": "SHL",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 659,
									"end": 691,
									"name": "SHR",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 659,
									"end": 691,
									"name": "tag",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 659,
									"end": 691,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 619,
									"end": 698,
									"name": "tag",
									"source": 3,
									"value": "11"
								},
								{
									"begin": 619,
									"end": 698,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 471,
									"end": 702,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 270,
									"end": 351,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1482,
									"end": 1670,
									"name": "tag",
									"source": 3,
									"value": "13"
								},
								{
									"begin": 1482,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1550,
									"end": 1560,
									"name": "CALLER",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1546,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1544,
									"end": 1560,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1536,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "tag",
									"source": 3,
									"value": "19"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 1536,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 1612,
									"end": 1614,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1609,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1595,
									"end": 1609,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "NOT",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "MUL",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "OR",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1595,
									"end": 1614,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1662,
									"end": 1664,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "PUSH",
									"source": 3,
									"value": "100"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "EXP",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1653,
									"end": 1660,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1626,
									"end": 1665,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1670,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1482,
									"end": 1670,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "30"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "33"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "35"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 13,
									"value": "93"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 13,
									"value": "95"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 13,
									"value": "94"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 13,
									"value": "96"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 13,
									"value": "97"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 13,
									"value": "100"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 13,
									"value": "99"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 13,
									"value": "107"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 13,
									"value": "98"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5318,
									"end": 5329,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5352,
									"end": 5358,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5347,
									"end": 5350,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5340,
									"end": 5359,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5392,
									"end": 5396,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5387,
									"end": 5390,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5383,
									"end": 5397,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5368,
									"end": 5397,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5368,
									"end": 5397,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5403,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5234,
									"end": 5403,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5409,
									"end": 5583,
									"name": "tag",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 5409,
									"end": 5583,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5549,
									"end": 5575,
									"name": "PUSH",
									"source": 13,
									"value": "43616E6E6F7420736574206F776E657220746F207A65726F0000000000000000"
								},
								{
									"begin": 5545,
									"end": 5546,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5537,
									"end": 5543,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5533,
									"end": 5547,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5526,
									"end": 5576,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 5409,
									"end": 5583,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5409,
									"end": 5583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5955,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 5589,
									"end": 5955,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5731,
									"end": 5734,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5752,
									"end": 5819,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5816,
									"end": 5818,
									"name": "PUSH",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 5811,
									"end": 5814,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5752,
									"end": 5819,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 5752,
									"end": 5819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5752,
									"end": 5819,
									"name": "tag",
									"source": 13,
									"value": "111"
								},
								{
									"begin": 5752,
									"end": 5819,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5745,
									"end": 5819,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5745,
									"end": 5819,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5828,
									"end": 5921,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5917,
									"end": 5920,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5828,
									"end": 5921,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "42"
								},
								{
									"begin": 5828,
									"end": 5921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5828,
									"end": 5921,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 5828,
									"end": 5921,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5946,
									"end": 5948,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 5941,
									"end": 5944,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5937,
									"end": 5949,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 5930,
									"end": 5949,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5930,
									"end": 5949,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5955,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5955,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5955,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5589,
									"end": 5955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 6380,
									"name": "tag",
									"source": 13,
									"value": "10"
								},
								{
									"begin": 5961,
									"end": 6380,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6127,
									"end": 6131,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6165,
									"end": 6167,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6154,
									"end": 6163,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6150,
									"end": 6168,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6142,
									"end": 6168,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6142,
									"end": 6168,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6214,
									"end": 6223,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6208,
									"end": 6212,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6204,
									"end": 6224,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 6200,
									"end": 6201,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6189,
									"end": 6198,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6185,
									"end": 6202,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6178,
									"end": 6225,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6242,
									"end": 6373,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 6368,
									"end": 6372,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6242,
									"end": 6373,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 6242,
									"end": 6373,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6242,
									"end": 6373,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 6242,
									"end": 6373,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6234,
									"end": 6373,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6234,
									"end": 6373,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 6380,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 6380,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 6380,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5961,
									"end": 6380,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6386,
									"end": 6559,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 6386,
									"end": 6559,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6526,
									"end": 6551,
									"name": "PUSH",
									"source": 13,
									"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
								},
								{
									"begin": 6522,
									"end": 6523,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6514,
									"end": 6520,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6510,
									"end": 6524,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6503,
									"end": 6552,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 6386,
									"end": 6559,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6386,
									"end": 6559,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6565,
									"end": 6931,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 6565,
									"end": 6931,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6707,
									"end": 6710,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6728,
									"end": 6795,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6792,
									"end": 6794,
									"name": "PUSH",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 6787,
									"end": 6790,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6728,
									"end": 6795,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 6728,
									"end": 6795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6728,
									"end": 6795,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 6728,
									"end": 6795,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6721,
									"end": 6795,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6721,
									"end": 6795,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6804,
									"end": 6897,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6893,
									"end": 6896,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6804,
									"end": 6897,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 6804,
									"end": 6897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6804,
									"end": 6897,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 6804,
									"end": 6897,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6922,
									"end": 6924,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6917,
									"end": 6920,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6913,
									"end": 6925,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6906,
									"end": 6925,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6906,
									"end": 6925,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6565,
									"end": 6931,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6565,
									"end": 6931,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6565,
									"end": 6931,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6565,
									"end": 6931,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6937,
									"end": 7356,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6937,
									"end": 7356,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7103,
									"end": 7107,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7141,
									"end": 7143,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 7130,
									"end": 7139,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7126,
									"end": 7144,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7118,
									"end": 7144,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7118,
									"end": 7144,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7190,
									"end": 7199,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7184,
									"end": 7188,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7180,
									"end": 7200,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 7176,
									"end": 7177,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7165,
									"end": 7174,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7161,
									"end": 7178,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 7154,
									"end": 7201,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 7218,
									"end": 7349,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 7344,
									"end": 7348,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7218,
									"end": 7349,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 7218,
									"end": 7349,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7218,
									"end": 7349,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 7218,
									"end": 7349,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7210,
									"end": 7349,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7210,
									"end": 7349,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6937,
									"end": 7356,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 6937,
									"end": 7356,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6937,
									"end": 7356,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6937,
									"end": 7356,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 348,
									"end": 2551,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039933867532f54c68c612aa4c105709806c109c7a282494402db4f37891c280164736f6c63430008170033",
									".code": [
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "79BA5097"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "79BA5097"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "A4821719"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "AAF836FF"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "41E550"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "4338841"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "1AD46A5F"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "3CCFD60B"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "3D900D9E"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 348,
											"end": 2551,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1453,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "tag",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1453,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1453,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 1742,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1742,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1742,
											"end": 2050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 554,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 554,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2058,
											"end": 2182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1213,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1213,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1001,
											"end": 1266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1317,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1317,
											"end": 1398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 2248,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "tag",
											"source": 12,
											"value": "45"
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2248,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 624,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 624,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 811,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 811,
											"end": 909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1593,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1596,
											"end": 1609,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1596,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1596,
											"end": 1611,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 1596,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1570,
											"end": 1611,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1646,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1667,
											"end": 1682,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1664,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1650,
											"end": 1682,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1682,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1682,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1650,
											"end": 1682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1650,
											"end": 1682,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1650,
											"end": 1682,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1649,
											"end": 1692,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1692,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1649,
											"end": 1692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1649,
											"end": 1692,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1649,
											"end": 1692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1622,
											"end": 1692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1710,
											"end": 1726,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1703,
											"end": 1726,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1453,
											"end": 1734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1839,
											"end": 1846,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1888,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1891,
											"end": 1904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1891,
											"end": 1906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1891,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1865,
											"end": 1906,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1865,
											"end": 1906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1938,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2003,
											"end": 2011,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 2003,
											"end": 2011,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1992,
											"end": 1998,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1974,
											"end": 1998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1974,
											"end": 1998,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1958,
											"end": 1969,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1958,
											"end": 1969,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 1955,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1943,
											"end": 1969,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 1969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1943,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1943,
											"end": 1969,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1943,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1942,
											"end": 1999,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1999,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1942,
											"end": 1999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1942,
											"end": 1999,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 1942,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1941,
											"end": 2011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 1941,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 2011,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 2011,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2029,
											"end": 2042,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2042,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2022,
											"end": 2042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1742,
											"end": 2050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 554,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 554,
											"end": 615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "75"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 554,
											"end": 615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 554,
											"end": 615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2058,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1941,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2131,
											"end": 2141,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2151,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2123,
											"end": 2151,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8FC"
										},
										{
											"begin": 2152,
											"end": 2173,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2174,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2174,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2058,
											"end": 2182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1324,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "A"
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1340,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1356,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1356,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1356,
											"name": "PUSH",
											"source": 12,
											"value": "FEAF968C"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1331,
											"end": 1358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1331,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1310,
											"end": 1358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1385,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1405,
											"end": 1411,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1396,
											"end": 1401,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1388,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1388,
											"end": 1411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1388,
											"end": 1411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1388,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 1388,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1388,
											"end": 1411,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1388,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1369,
											"end": 1411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1429,
											"end": 1437,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1422,
											"end": 1437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1213,
											"end": 1445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1001,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1074,
											"end": 1088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1070,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1060,
											"end": 1088,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 1052,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 1052,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1138,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1141,
											"end": 1148,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1122,
											"end": 1148,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1164,
											"end": 1174,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1161,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1154,
											"end": 1161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1154,
											"end": 1174,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1194,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1180,
											"end": 1194,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1180,
											"end": 1207,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1260,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1240,
											"end": 1248,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1219,
											"end": 1261,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1046,
											"end": 1266,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1001,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1364,
											"end": 1371,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1386,
											"end": 1393,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1393,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1379,
											"end": 1393,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2308,
											"end": 2325,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2346,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2397,
											"end": 2406,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2396,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 2378,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2407,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 2378,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2364,
											"end": 2407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2444,
											"end": 2446,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 2430,
											"end": 2441,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 2430,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 2430,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2418,
											"end": 2446,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2460,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 2470,
											"end": 2480,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 2482,
											"end": 2491,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 2457,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 2457,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2492,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2248,
											"end": 2542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 694,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 624,
											"end": 694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 811,
											"end": 909,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 811,
											"end": 909,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1941,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1941,
											"end": 1961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "tag",
											"source": 3,
											"value": "103"
										},
										{
											"begin": 1941,
											"end": 1961,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 882,
											"end": 904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 901,
											"end": 903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 882,
											"end": 900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 882,
											"end": 904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 882,
											"end": 904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 882,
											"end": 904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 811,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1826,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 1715,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1787,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1783,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1773,
											"end": 1794,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 1765,
											"end": 1821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 1765,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1715,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1670,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 1482,
											"end": 1670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1550,
											"end": 1560,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1546,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1544,
											"end": 1560,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 1536,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "tag",
											"source": 3,
											"value": "112"
										},
										{
											"begin": 1536,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1595,
											"end": 1609,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1595,
											"end": 1614,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1662,
											"end": 1664,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "ED8889F560326EB138920D842192F0EB3DD22B4F139C87A2C57538E05BAE1278"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1626,
											"end": 1665,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1670,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 13,
											"value": "163"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 1112,
											"end": 1136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1112,
											"end": 1136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1107,
											"end": 1110,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1100,
											"end": 1137,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1025,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1282,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1278,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1265,
											"end": 1283,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1257,
											"end": 1283,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1346,
											"end": 1363,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1337,
											"end": 1343,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 1293,
											"end": 1364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1293,
											"end": 1364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1149,
											"end": 1371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1476,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 1377,
											"end": 1476,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1463,
											"end": 1468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1457,
											"end": 1469,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1469,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1469,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1476,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1476,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1476,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1377,
											"end": 1476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1651,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 1482,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1566,
											"end": 1577,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1606,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1640,
											"end": 1644,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1635,
											"end": 1638,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1645,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1645,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1616,
											"end": 1645,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1651,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1651,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1651,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1651,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1482,
											"end": 1651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1903,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 1657,
											"end": 1903,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1861,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 1748,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1762,
											"end": 1768,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1756,
											"end": 1769,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1861,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1748,
											"end": 1861,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1842,
											"end": 1845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1838,
											"end": 1849,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1850,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1823,
											"end": 1826,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1819,
											"end": 1830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1812,
											"end": 1851,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1784,
											"end": 1786,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1777,
											"end": 1787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 1748,
											"end": 1861,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1748,
											"end": 1861,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 1748,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1895,
											"end": 1896,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1886,
											"end": 1892,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 1884,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1877,
											"end": 1893,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1870,
											"end": 1897,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1719,
											"end": 1903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1903,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1657,
											"end": 1903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 2011,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 1909,
											"end": 2011,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1950,
											"end": 1956,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2001,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1992,
											"end": 1994,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1981,
											"end": 1995,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1977,
											"end": 2005,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1967,
											"end": 2005,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1967,
											"end": 2005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 2011,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 2011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 2011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1909,
											"end": 2011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2394,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 2017,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 2166,
											"end": 2171,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2172,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 2133,
											"end": 2172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2172,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 2133,
											"end": 2172,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 2252,
											"end": 2258,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2247,
											"end": 2250,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 2188,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2259,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 2188,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2259,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2259,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2268,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 2326,
											"end": 2332,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2324,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2318,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2303,
											"end": 2319,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2268,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 2268,
											"end": 2333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2268,
											"end": 2333,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 2268,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 2380,
											"end": 2386,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 2358,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 2358,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2353,
											"end": 2356,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2349,
											"end": 2388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2342,
											"end": 2388,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2342,
											"end": 2388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2109,
											"end": 2394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2394,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2394,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2394,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2713,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 2400,
											"end": 2713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2517,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2553,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2549,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2536,
											"end": 2554,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2554,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2528,
											"end": 2554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2600,
											"end": 2609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2594,
											"end": 2598,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2590,
											"end": 2610,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2586,
											"end": 2587,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2584,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 2588,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2564,
											"end": 2611,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 2701,
											"end": 2705,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2692,
											"end": 2698,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 2628,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2628,
											"end": 2706,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 2628,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2706,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2620,
											"end": 2706,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2713,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2713,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2400,
											"end": 2713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2756,
											"end": 2763,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2796,
											"end": 2838,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2794,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2785,
											"end": 2839,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2774,
											"end": 2839,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2774,
											"end": 2839,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2719,
											"end": 2845,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2719,
											"end": 2845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 2935,
											"end": 2940,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2917,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "tag",
											"source": 13,
											"value": "185"
										},
										{
											"begin": 2917,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2906,
											"end": 2941,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2906,
											"end": 2941,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2851,
											"end": 2947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2851,
											"end": 2947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3071,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 2953,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3040,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 3040,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3035,
											"end": 3038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3028,
											"end": 3065,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3299,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 3077,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3170,
											"end": 3174,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3208,
											"end": 3210,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3193,
											"end": 3211,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3211,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3211,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3221,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 3289,
											"end": 3290,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3287,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3274,
											"end": 3291,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3221,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 3221,
											"end": 3292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3221,
											"end": 3292,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 3221,
											"end": 3292,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3299,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3299,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3077,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3637,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3305,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3464,
											"end": 3466,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3453,
											"end": 3462,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3467,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3441,
											"end": 3467,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3441,
											"end": 3467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3477,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3545,
											"end": 3546,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3543,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3530,
											"end": 3547,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3521,
											"end": 3527,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3477,
											"end": 3548,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3477,
											"end": 3548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3477,
											"end": 3548,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 3477,
											"end": 3548,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3558,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3626,
											"end": 3628,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3615,
											"end": 3624,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3611,
											"end": 3629,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3608,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3558,
											"end": 3630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 3558,
											"end": 3630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3558,
											"end": 3630,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 3558,
											"end": 3630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3637,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3637,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3637,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3643,
											"end": 3765,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 3643,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3734,
											"end": 3739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 3716,
											"end": 3740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "tag",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3716,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3709,
											"end": 3714,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3706,
											"end": 3741,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3696,
											"end": 3759,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3752,
											"end": 3753,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3745,
											"end": 3757,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3759,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 3696,
											"end": 3759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3643,
											"end": 3765,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3643,
											"end": 3765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3910,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 3771,
											"end": 3910,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3842,
											"end": 3862,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3862,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3862,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3871,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 3898,
											"end": 3903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3871,
											"end": 3904,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 3871,
											"end": 3904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3871,
											"end": 3904,
											"name": "tag",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 3871,
											"end": 3904,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3910,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3910,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3771,
											"end": 3910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 4245,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 3916,
											"end": 4245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4024,
											"end": 4026,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4012,
											"end": 4021,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4003,
											"end": 4010,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4022,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3995,
											"end": 4027,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 4030,
											"end": 4109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 4030,
											"end": 4109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 3992,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 4151,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4220,
											"end": 4227,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4211,
											"end": 4217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4200,
											"end": 4209,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4196,
											"end": 4218,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 4175,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 4175,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4165,
											"end": 4228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4121,
											"end": 4238,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 4245,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 4245,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 4245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 4245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 4245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4251,
											"end": 4431,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4251,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4376,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4296,
											"end": 4297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4377,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4396,
											"end": 4400,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 4393,
											"end": 4394,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4386,
											"end": 4401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 4417,
											"end": 4418,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4410,
											"end": 4425,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4847,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 4437,
											"end": 4847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4477,
											"end": 4484,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4500,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 4500,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4520,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4495,
											"end": 4520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4552,
											"end": 4553,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4534,
											"end": 4554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 4534,
											"end": 4554,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4529,
											"end": 4554,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4529,
											"end": 4554,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4589,
											"end": 4590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4586,
											"end": 4587,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4629,
											"end": 4640,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4611,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4611,
											"end": 4641,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 4611,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4641,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4641,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4791,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4781,
											"end": 4788,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4777,
											"end": 4792,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4775,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4771,
											"end": 4793,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4751,
											"end": 4752,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4724,
											"end": 4807,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4701,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4701,
											"end": 4840,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4820,
											"end": 4838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "tag",
											"source": 13,
											"value": "208"
										},
										{
											"begin": 4820,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4701,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 4701,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4485,
											"end": 4847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4847,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4847,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4437,
											"end": 4847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4853,
											"end": 5033,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 4853,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4901,
											"end": 4978,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4898,
											"end": 4899,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4891,
											"end": 4979,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4998,
											"end": 5002,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4988,
											"end": 5003,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5026,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5019,
											"end": 5020,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5027,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5224,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 5039,
											"end": 5224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5079,
											"end": 5080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 5114,
											"end": 5115,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 5096,
											"end": 5116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "tag",
											"source": 13,
											"value": "211"
										},
										{
											"begin": 5096,
											"end": 5116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5116,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5116,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5148,
											"end": 5149,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 5130,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "tag",
											"source": 13,
											"value": "212"
										},
										{
											"begin": 5130,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5125,
											"end": 5150,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5125,
											"end": 5150,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5170,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 5159,
											"end": 5194,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 5174,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "tag",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 5174,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5194,
											"name": "tag",
											"source": 13,
											"value": "213"
										},
										{
											"begin": 5159,
											"end": 5194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5216,
											"end": 5217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5213,
											"end": 5214,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5209,
											"end": 5218,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5218,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5204,
											"end": 5218,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5224,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5224,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5224,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 5410,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 5230,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5278,
											"end": 5355,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5275,
											"end": 5276,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5268,
											"end": 5356,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5375,
											"end": 5379,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5365,
											"end": 5380,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5399,
											"end": 5403,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5396,
											"end": 5397,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5389,
											"end": 5404,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5736,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 5416,
											"end": 5736,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5460,
											"end": 5466,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 5491,
											"end": 5495,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5487,
											"end": 5499,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5477,
											"end": 5499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5477,
											"end": 5499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5538,
											"end": 5542,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5534,
											"end": 5546,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5565,
											"end": 5583,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5555,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 5555,
											"end": 5636,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5621,
											"end": 5625,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 5613,
											"end": 5619,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5626,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5599,
											"end": 5626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5555,
											"end": 5636,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 5555,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5683,
											"end": 5685,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5675,
											"end": 5681,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5672,
											"end": 5686,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5652,
											"end": 5670,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5687,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5646,
											"end": 5730,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 5646,
											"end": 5730,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 5702,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "tag",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5646,
											"end": 5730,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 5646,
											"end": 5730,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5467,
											"end": 5736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5736,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5736,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5416,
											"end": 5736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5847,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 5742,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5778,
											"end": 5785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5818,
											"end": 5840,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5811,
											"end": 5816,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5807,
											"end": 5841,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5796,
											"end": 5841,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5796,
											"end": 5841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5847,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5742,
											"end": 5847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5853,
											"end": 5973,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 5853,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5925,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 5942,
											"end": 5947,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5925,
											"end": 5948,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 5925,
											"end": 5948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5925,
											"end": 5948,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 5925,
											"end": 5948,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5918,
											"end": 5923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5915,
											"end": 5949,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5963,
											"end": 5964,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5960,
											"end": 5961,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5953,
											"end": 5965,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 5905,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5853,
											"end": 5973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5853,
											"end": 5973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6120,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 5979,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6035,
											"end": 6040,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6072,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6060,
											"end": 6073,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6051,
											"end": 6073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6051,
											"end": 6073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6082,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6108,
											"end": 6113,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6082,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 6082,
											"end": 6114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6082,
											"end": 6114,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6082,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6120,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6120,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6202,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6126,
											"end": 6202,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6162,
											"end": 6169,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6196,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6180,
											"end": 6196,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6180,
											"end": 6196,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6202,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6202,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6202,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6126,
											"end": 6202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6208,
											"end": 6328,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 6208,
											"end": 6328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 6297,
											"end": 6302,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6280,
											"end": 6303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6303,
											"name": "tag",
											"source": 13,
											"value": "228"
										},
										{
											"begin": 6280,
											"end": 6303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6273,
											"end": 6278,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6304,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 6260,
											"end": 6322,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6318,
											"end": 6319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6308,
											"end": 6320,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6260,
											"end": 6322,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 6260,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6208,
											"end": 6328,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6208,
											"end": 6328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6475,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 6334,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6390,
											"end": 6395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6415,
											"end": 6428,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6428,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6406,
											"end": 6428,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 6463,
											"end": 6468,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 6437,
											"end": 6469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6469,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 6437,
											"end": 6469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6475,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6475,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6475,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6334,
											"end": 6475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6481,
											"end": 6624,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 6481,
											"end": 6624,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6538,
											"end": 6543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6569,
											"end": 6575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6563,
											"end": 6576,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6554,
											"end": 6576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6612,
											"end": 6617,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 6585,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6585,
											"end": 6618,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6585,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6481,
											"end": 6624,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6481,
											"end": 6624,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6481,
											"end": 6624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6481,
											"end": 6624,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6481,
											"end": 6624,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6733,
											"end": 6739,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6749,
											"end": 6755,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6757,
											"end": 6763,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6765,
											"end": 6771,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6814,
											"end": 6817,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6802,
											"end": 6811,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6793,
											"end": 6800,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6789,
											"end": 6812,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6785,
											"end": 6818,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6782,
											"end": 6902,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6782,
											"end": 6902,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 6782,
											"end": 6902,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6821,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 6821,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 6821,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6821,
											"end": 6900,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 6821,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6782,
											"end": 6902,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 6782,
											"end": 6902,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6941,
											"end": 6942,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 7021,
											"end": 7028,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7012,
											"end": 7018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7010,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6997,
											"end": 7019,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6966,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 6966,
											"end": 7029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6966,
											"end": 7029,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 6966,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 7029,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6956,
											"end": 7029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6912,
											"end": 7039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7078,
											"end": 7080,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7104,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7159,
											"end": 7166,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7150,
											"end": 7156,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7139,
											"end": 7148,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7135,
											"end": 7157,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7104,
											"end": 7167,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 7104,
											"end": 7167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7104,
											"end": 7167,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7104,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7094,
											"end": 7167,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 7094,
											"end": 7167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7049,
											"end": 7177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7216,
											"end": 7218,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7242,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7298,
											"end": 7305,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7289,
											"end": 7295,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7278,
											"end": 7287,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7274,
											"end": 7296,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7242,
											"end": 7306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7242,
											"end": 7306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7242,
											"end": 7306,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 7242,
											"end": 7306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7232,
											"end": 7306,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7232,
											"end": 7306,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7187,
											"end": 7316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7355,
											"end": 7357,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7381,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7381,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 7381,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7381,
											"end": 7445,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 7381,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7445,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7371,
											"end": 7445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7326,
											"end": 7455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7494,
											"end": 7497,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 7521,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 7576,
											"end": 7583,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7567,
											"end": 7573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7556,
											"end": 7565,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 7552,
											"end": 7574,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 7584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 7521,
											"end": 7584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 7584,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 7521,
											"end": 7584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7511,
											"end": 7584,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7511,
											"end": 7584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7465,
											"end": 7594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6630,
											"end": 7601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7607,
											"end": 7779,
											"name": "tag",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 7607,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7747,
											"end": 7771,
											"name": "PUSH",
											"source": 13,
											"value": "4D7573742062652070726F706F736564206F776E657200000000000000000000"
										},
										{
											"begin": 7743,
											"end": 7744,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7731,
											"end": 7745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7724,
											"end": 7772,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7607,
											"end": 7779,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7607,
											"end": 7779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7785,
											"end": 8151,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7785,
											"end": 8151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7927,
											"end": 7930,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7948,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 8012,
											"end": 8014,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 8007,
											"end": 8010,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7948,
											"end": 8015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 7948,
											"end": 8015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7948,
											"end": 8015,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7948,
											"end": 8015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 8015,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7941,
											"end": 8015,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8024,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 8113,
											"end": 8116,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8024,
											"end": 8117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "142"
										},
										{
											"begin": 8024,
											"end": 8117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8024,
											"end": 8117,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 8024,
											"end": 8117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8142,
											"end": 8144,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8137,
											"end": 8140,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8133,
											"end": 8145,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8126,
											"end": 8145,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8126,
											"end": 8145,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7785,
											"end": 8151,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7785,
											"end": 8151,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7785,
											"end": 8151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7785,
											"end": 8151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8157,
											"end": 8576,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 8157,
											"end": 8576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8323,
											"end": 8327,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8363,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8350,
											"end": 8359,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8346,
											"end": 8364,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8338,
											"end": 8364,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8338,
											"end": 8364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8410,
											"end": 8419,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8404,
											"end": 8408,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8400,
											"end": 8420,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8396,
											"end": 8397,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8385,
											"end": 8394,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8381,
											"end": 8398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8374,
											"end": 8421,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 8564,
											"end": 8568,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8569,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 8438,
											"end": 8569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8438,
											"end": 8569,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 8438,
											"end": 8569,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8430,
											"end": 8569,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8430,
											"end": 8569,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8157,
											"end": 8576,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8157,
											"end": 8576,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8157,
											"end": 8576,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8157,
											"end": 8576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8914,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 8582,
											"end": 8914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8703,
											"end": 8707,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8741,
											"end": 8743,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8730,
											"end": 8739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8726,
											"end": 8744,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8744,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8754,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 8822,
											"end": 8823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8811,
											"end": 8820,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8807,
											"end": 8824,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8804,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8754,
											"end": 8825,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 8754,
											"end": 8825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8754,
											"end": 8825,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 8754,
											"end": 8825,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 8903,
											"end": 8905,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8892,
											"end": 8901,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8888,
											"end": 8906,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8879,
											"end": 8885,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 8907,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 8835,
											"end": 8907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 8907,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 8835,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8914,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8914,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8914,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8582,
											"end": 8914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9010,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 8920,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8954,
											"end": 8961,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8997,
											"end": 9002,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8990,
											"end": 9003,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8983,
											"end": 9004,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8972,
											"end": 9004,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8972,
											"end": 9004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9010,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9010,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8920,
											"end": 9010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9016,
											"end": 9132,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 9016,
											"end": 9132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9086,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 9101,
											"end": 9106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9086,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 9086,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9086,
											"end": 9107,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 9086,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9079,
											"end": 9084,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9076,
											"end": 9108,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9066,
											"end": 9126,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 9066,
											"end": 9126,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9122,
											"end": 9123,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9119,
											"end": 9120,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9112,
											"end": 9124,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9066,
											"end": 9126,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 9066,
											"end": 9126,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9016,
											"end": 9132,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9016,
											"end": 9132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9275,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 9138,
											"end": 9275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9192,
											"end": 9197,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9223,
											"end": 9229,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9217,
											"end": 9230,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9208,
											"end": 9230,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9208,
											"end": 9230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9239,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 9263,
											"end": 9268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9239,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 9239,
											"end": 9269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9239,
											"end": 9269,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 9239,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9275,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9275,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9275,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9138,
											"end": 9275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9281,
											"end": 9626,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 9281,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9348,
											"end": 9354,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9399,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9394,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9376,
											"end": 9383,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9372,
											"end": 9395,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9368,
											"end": 9400,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9365,
											"end": 9484,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9365,
											"end": 9484,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 9365,
											"end": 9484,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9403,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 9403,
											"end": 9482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 9403,
											"end": 9482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9403,
											"end": 9482,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 9403,
											"end": 9482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9365,
											"end": 9484,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 9365,
											"end": 9484,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9523,
											"end": 9524,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 9601,
											"end": 9608,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9592,
											"end": 9598,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9581,
											"end": 9590,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9577,
											"end": 9599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9548,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 9548,
											"end": 9609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9548,
											"end": 9609,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 9548,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9538,
											"end": 9609,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9538,
											"end": 9609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9494,
											"end": 9619,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9281,
											"end": 9626,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9281,
											"end": 9626,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9281,
											"end": 9626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9281,
											"end": 9626,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9281,
											"end": 9626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9632,
											"end": 9804,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 9632,
											"end": 9804,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9772,
											"end": 9796,
											"name": "PUSH",
											"source": 13,
											"value": "4F6E6C792063616C6C61626C65206279206F776E657200000000000000000000"
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9760,
											"end": 9766,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9756,
											"end": 9770,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9749,
											"end": 9797,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9632,
											"end": 9804,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9632,
											"end": 9804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9810,
											"end": 10176,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 9810,
											"end": 10176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9952,
											"end": 9955,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9973,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 10037,
											"end": 10039,
											"name": "PUSH",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 10032,
											"end": 10035,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9973,
											"end": 10040,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 9973,
											"end": 10040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9973,
											"end": 10040,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 9973,
											"end": 10040,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9966,
											"end": 10040,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9966,
											"end": 10040,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10049,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10138,
											"end": 10141,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10049,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 10049,
											"end": 10142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10049,
											"end": 10142,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 10049,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10167,
											"end": 10169,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10162,
											"end": 10165,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10158,
											"end": 10170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10151,
											"end": 10170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10151,
											"end": 10170,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9810,
											"end": 10176,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9810,
											"end": 10176,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9810,
											"end": 10176,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9810,
											"end": 10176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10601,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 10182,
											"end": 10601,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10348,
											"end": 10352,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10386,
											"end": 10388,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10375,
											"end": 10384,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10371,
											"end": 10389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10363,
											"end": 10389,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10363,
											"end": 10389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10435,
											"end": 10444,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10429,
											"end": 10433,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10425,
											"end": 10445,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10421,
											"end": 10422,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10410,
											"end": 10419,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10406,
											"end": 10423,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10399,
											"end": 10446,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10463,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 10589,
											"end": 10593,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10463,
											"end": 10594,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 10463,
											"end": 10594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10463,
											"end": 10594,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 10463,
											"end": 10594,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10455,
											"end": 10594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10455,
											"end": 10594,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10601,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10182,
											"end": 10601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10780,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 10607,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10747,
											"end": 10772,
											"name": "PUSH",
											"source": 13,
											"value": "43616E6E6F74207472616E7366657220746F2073656C66000000000000000000"
										},
										{
											"begin": 10743,
											"end": 10744,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10735,
											"end": 10741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10731,
											"end": 10745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10724,
											"end": 10773,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10780,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10607,
											"end": 10780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 11152,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 10786,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10928,
											"end": 10931,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10949,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 11013,
											"end": 11015,
											"name": "PUSH",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 11008,
											"end": 11011,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10949,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 10949,
											"end": 11016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10949,
											"end": 11016,
											"name": "tag",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 10949,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 11016,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 11016,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 11114,
											"end": 11117,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11118,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 11025,
											"end": 11118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11025,
											"end": 11118,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 11025,
											"end": 11118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11143,
											"end": 11145,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11138,
											"end": 11141,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11134,
											"end": 11146,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11127,
											"end": 11146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11127,
											"end": 11146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 11152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 11152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 11152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10786,
											"end": 11152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11158,
											"end": 11577,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 11158,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11324,
											"end": 11328,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11362,
											"end": 11364,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11351,
											"end": 11360,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11347,
											"end": 11365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11339,
											"end": 11365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11339,
											"end": 11365,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11411,
											"end": 11420,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11405,
											"end": 11409,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11401,
											"end": 11421,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11397,
											"end": 11398,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11386,
											"end": 11395,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11382,
											"end": 11399,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11375,
											"end": 11422,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11439,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 11565,
											"end": 11569,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11439,
											"end": 11570,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 11439,
											"end": 11570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11439,
											"end": 11570,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 11439,
											"end": 11570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11570,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11158,
											"end": 11577,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11158,
											"end": 11577,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11158,
											"end": 11577,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11158,
											"end": 11577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
								"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
								"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
								"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/presale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"SLTAddress()": "aaf836ff",
							"acceptOwnership()": "79ba5097",
							"buyToken()": "a4821719",
							"checkETHPrice()": "3d900d9e",
							"convertDollarToETH(uint256)": "04338841",
							"convertEthToDollar(uint256)": "0041e550",
							"dollarAmountOfSLT()": "1ad46a5f",
							"owner()": "8da5cb5b",
							"transferOwnership(address)": "f2fde38b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SLTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"SLTtoSend\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dollarEquiv\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkETHPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dollarAmount\",\"type\":\"uint256\"}],\"name\":\"convertDollarToETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmountInWei\",\"type\":\"uint256\"}],\"name\":\"convertEthToDollar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"dollarAmountOfSLT\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address, pending.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/presale.sol\":\"SVTLottery\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol\":{\"keccak256\":\"0x44f6fa0cb1867a0bc137a195d4603bafa1cf74ecfbe69eb82a5dabeca8957738\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87ebb29c09566ab02ff62c3c29f60a08db52f032b5f2c5220cd111aad88002ce\",\"dweb:/ipfs/QmfScq3oJ6MkPXJh5JUrpz93bNMJ3ebtLcE3Q1H2DUNi93\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0x99d0b0786fe368970009c703f2249bfbc56340ddf1a28b60d2915bb58c34cd72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af0371c1af45db651823b9a3d5af761b08243c78f105166342eee28de356c8dd\",\"dweb:/ipfs/QmPnC9qNDKwJFd5unwLb9pxjrutoe8MWjm5EXHTxq2kJ4x\"]},\"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x215529a99534a40e6257ef2282a91ea4a95b66debc3997866406907622efb405\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ecc56a2cddb1ba6225ca0cffb07fdf6e24bcc4234cc87710c42a59c0a21ae395\",\"dweb:/ipfs/QmSpW4vkPHeRNZ14beMEk2LEtqY5JQTueNJC4sCT8JaSoc\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]},\"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0xac02fbc0c7d194e525a71f524d1f7c472df73e19c2b527d7b529badaeaf0ec51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://301fa881df623882941bdc7a807807df436c5c7da499fa1a4bbe490738109845\",\"dweb:/ipfs/QmV2W4NYpe6uk4s34sCyrFJHfPEjYAkvHUposWkXrRNtbj\"]},\"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol\":{\"keccak256\":\"0x892f17652e5de9d5e0b5e9424a9b3f2a69d3e50070ba1387f2292aea8190d3bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c99ad1fdfa93095ddac209390301dc5cb9da36fb6420b4c0bb7a2c76d6665be\",\"dweb:/ipfs/QmVajNoVLwDcVh9CFoJvTRQpPjg4CRP1Vco6481sVgY9iB\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/presale.sol\":{\"keccak256\":\"0x9f3036d6f20b004f3dc432072724249b9808f4dc160661c41a7f605337b89890\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad23d342736e40e85325e097687df3eb465d5443d3c5b4fa0cbf8869927fd610\",\"dweb:/ipfs/QmXKCfUVcRvGnx8Dsea7Ki8zEFNZFmVb1kzSjXWn2P9ETz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 100,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "s_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 102,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "s_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1267,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "tenEighteen",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1272,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "tenEight",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1277,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "tenTen",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1280,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "hundredPercent",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							},
							{
								"astId": 1283,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "dollarAmountOfSLT",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 1286,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "SLTAddress",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 1292,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "SLT",
								"offset": 0,
								"slot": "8",
								"type": "t_contract(IERC20)1198"
							},
							{
								"astId": 1295,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "priceFeedData",
								"offset": 0,
								"slot": "9",
								"type": "t_address"
							},
							{
								"astId": 1301,
								"contract": "contracts/presale.sol:SVTLottery",
								"label": "priceFeed",
								"offset": 0,
								"slot": "10",
								"type": "t_contract(AggregatorV3Interface)45"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(AggregatorV3Interface)45": {
								"encoding": "inplace",
								"label": "contract AggregatorV3Interface",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)1198": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptOwnership()": {
								"notice": "Allows an ownership transfer to be completed by the recipient."
							},
							"owner()": {
								"notice": "Get the current owner"
							},
							"transferOwnership(address)": {
								"notice": "Allows an owner to begin transferring ownership to a new address, pending."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol",
					"exportedSymbols": {
						"VRFV2WrapperInterface": [
							72
						]
					},
					"id": 73,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "VRFV2WrapperInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 72,
							"linearizedBaseContracts": [
								72
							],
							"name": "VRFV2WrapperInterface",
							"nameLocation": "67:21:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "93:187:1",
										"text": " @return the request ID of the most recent VRF V2 request made by this wrapper. This should only\n be relied option within the same transaction that the request was made."
									},
									"functionSelector": "fc2a88c3",
									"id": 53,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "lastRequestId",
									"nameLocation": "292:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "305:2:1"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "331:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "330:9:1"
									},
									"scope": 72,
									"src": "283:57:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "344:411:1",
										"text": " @notice Calculates the price of a VRF request with the given callbackGasLimit at the current\n @notice block.\n @dev This function relies on the transaction gas price which is not automatically set during\n @dev simulation. To estimate the price at a specific gas price, use the estimatePrice function.\n @param _callbackGasLimit is the gas limit used to estimate the price."
									},
									"functionSelector": "4306d354",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "calculateRequestPrice",
									"nameLocation": "767:21:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "_callbackGasLimit",
												"nameLocation": "796:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "789:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 55,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:26:1"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "838:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:9:1"
									},
									"scope": 72,
									"src": "758:89:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "851:380:1",
										"text": " @notice Estimates the price of a VRF request with a specific gas limit and gas price.\n @dev This is a convenience function that can be called in simulation to better understand\n @dev pricing.\n @param _callbackGasLimit is the gas limit used to estimate the price.\n @param _requestGasPriceWei is the gas price in wei used for the estimation."
									},
									"functionSelector": "7fb5d19d",
									"id": 71,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateRequestPrice",
									"nameLocation": "1243:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "_callbackGasLimit",
												"nameLocation": "1271:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1264:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 63,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1264:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "_requestGasPriceWei",
												"nameLocation": "1298:19:1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1290:27:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1263:55:1"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "1342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:9:1"
									},
									"scope": 72,
									"src": "1234:117:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 73,
							"src": "57:1296:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1322:1"
				},
				"id": 1
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
					"exportedSymbols": {
						"ConfirmedOwner": [
							92
						],
						"ConfirmedOwnerWithProposal": [
							254
						],
						"IOwnable": [
							270
						]
					},
					"id": 93,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 74,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
							"file": "./ConfirmedOwnerWithProposal.sol",
							"id": 75,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 93,
							"sourceUnit": 255,
							"src": "57:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 77,
										"name": "ConfirmedOwnerWithProposal",
										"nameLocations": [
											"239:26:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 254,
										"src": "239:26:2"
									},
									"id": 78,
									"nodeType": "InheritanceSpecifier",
									"src": "239:26:2"
								}
							],
							"canonicalName": "ConfirmedOwner",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 76,
								"nodeType": "StructuredDocumentation",
								"src": "101:110:2",
								"text": " @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
							},
							"fullyImplemented": true,
							"id": 92,
							"linearizedBaseContracts": [
								92,
								254,
								270
							],
							"name": "ConfirmedOwner",
							"nameLocation": "221:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "349:2:2",
										"statements": []
									},
									"id": 91,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 83,
													"name": "newOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 80,
													"src": "327:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"arguments": [
														{
															"hexValue": "30",
															"id": 86,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "345:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "337:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 84,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "337:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "337:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 88,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 82,
												"name": "ConfirmedOwnerWithProposal",
												"nameLocations": [
													"300:26:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 254,
												"src": "300:26:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "300:48:2"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "290:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "282:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "282:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "281:18:2"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:0:2"
									},
									"scope": 92,
									"src": "270:81:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 93,
							"src": "212:141:2",
							"usedErrors": [],
							"usedEvents": [
								108,
								114
							]
						}
					],
					"src": "32:322:2"
				},
				"id": 2
			},
			"@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol",
					"exportedSymbols": {
						"ConfirmedOwnerWithProposal": [
							254
						],
						"IOwnable": [
							270
						]
					},
					"id": 255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 94,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:3"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
							"file": "../interfaces/IOwnable.sol",
							"id": 95,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 255,
							"sourceUnit": 271,
							"src": "57:36:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 97,
										"name": "IOwnable",
										"nameLocations": [
											"245:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 270,
										"src": "245:8:3"
									},
									"id": 98,
									"nodeType": "InheritanceSpecifier",
									"src": "245:8:3"
								}
							],
							"canonicalName": "ConfirmedOwnerWithProposal",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 96,
								"nodeType": "StructuredDocumentation",
								"src": "95:110:3",
								"text": " @title The ConfirmedOwner contract\n @notice A contract with helpers for basic contract ownership."
							},
							"fullyImplemented": true,
							"id": 254,
							"linearizedBaseContracts": [
								254,
								270
							],
							"name": "ConfirmedOwnerWithProposal",
							"nameLocation": "215:26:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 100,
									"mutability": "mutable",
									"name": "s_owner",
									"nameLocation": "274:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "258:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 99,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "258:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 102,
									"mutability": "mutable",
									"name": "s_pendingOwner",
									"nameLocation": "301:14:3",
									"nodeType": "VariableDeclaration",
									"scope": 254,
									"src": "285:30:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 101,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "285:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278",
									"id": 108,
									"name": "OwnershipTransferRequested",
									"nameLocation": "326:26:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "369:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "353:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "353:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "391:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "375:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "375:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:42:3"
									},
									"src": "320:75:3"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 114,
									"name": "OwnershipTransferred",
									"nameLocation": "404:20:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "441:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "425:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "463:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "447:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "424:42:3"
									},
									"src": "398:69:3"
								},
								{
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "523:179:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "537:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "557:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "549:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 123,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "549:7:3",
																		"typeDescriptions": {}
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "549:10:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "537:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f7420736574206f776e657220746f207a65726f",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "561:26:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																"typeString": "literal_string \"Cannot set owner to zero\""
															},
															"value": "Cannot set owner to zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7dca76038b520c88e70cf97566ce5d47f70366a14444d2decb0ce7bf6a19e7c2",
																"typeString": "literal_string \"Cannot set owner to zero\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "529:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "529:59:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "529:59:3"
											},
											{
												"expression": {
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 131,
														"name": "s_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "595:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 132,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "605:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "595:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "595:18:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 135,
														"name": "pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 118,
														"src": "623:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "647:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "639:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 136,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "639:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "639:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "623:26:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "IfStatement",
												"src": "619:79:3",
												"trueBody": {
													"id": 145,
													"nodeType": "Block",
													"src": "651:47:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 142,
																		"name": "pendingOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 118,
																		"src": "678:12:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 141,
																	"name": "_transferOwnership",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "659:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "659:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 144,
															"nodeType": "ExpressionStatement",
															"src": "659:32:3"
														}
													]
												}
											}
										]
									},
									"id": 148,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "491:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "483:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "483:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "pendingOwner",
												"nameLocation": "509:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "501:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "482:40:3"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "523:0:3"
									},
									"scope": 254,
									"src": "471:231:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										266
									],
									"body": {
										"id": 161,
										"nodeType": "Block",
										"src": "876:33:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "901:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 157,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "882:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "882:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "882:22:3"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "706:102:3",
										"text": " @notice Allows an owner to begin transferring ownership to a new address,\n pending."
									},
									"functionSelector": "f2fde38b",
									"id": 162,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyOwner",
												"nameLocations": [
													"866:9:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 253,
												"src": "866:9:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "866:9:3"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "820:17:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "857:8:3"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "846:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "838:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "838:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:12:3"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "876:0:3"
									},
									"scope": 254,
									"src": "811:98:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										269
									],
									"body": {
										"id": 197,
										"nodeType": "Block",
										"src": "1046:220:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 171,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 168,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1060:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1064:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1060:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 170,
																"name": "s_pendingOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1074:14:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1060:28:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d7573742062652070726f706f736564206f776e6572",
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1090:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																"typeString": "literal_string \"Must be proposed owner\""
															},
															"value": "Must be proposed owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0ff46bbb058c6b1431d73c360a5974025321b7ff6f532fcd8fc819bb0d10498c",
																"typeString": "literal_string \"Must be proposed owner\""
															}
														],
														"id": 167,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1052:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1052:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 174,
												"nodeType": "ExpressionStatement",
												"src": "1052:63:3"
											},
											{
												"assignments": [
													176
												],
												"declarations": [
													{
														"constant": false,
														"id": 176,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1130:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 197,
														"src": "1122:16:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 175,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1122:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 178,
												"initialValue": {
													"id": 177,
													"name": "s_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "1141:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1122:26:3"
											},
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "s_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 100,
														"src": "1154:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 180,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1164:3:3",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1168:6:3",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1164:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1154:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1154:20:3"
											},
											{
												"expression": {
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "s_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1180:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1205:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1197:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 185,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1197:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1197:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1180:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "1180:27:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 192,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "1240:8:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 193,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1250:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1254:6:3",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1250:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 191,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1219:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1219:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 196,
												"nodeType": "EmitStatement",
												"src": "1214:47:3"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "913:85:3",
										"text": " @notice Allows an ownership transfer to be completed by the recipient."
									},
									"functionSelector": "79ba5097",
									"id": 198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "1010:15:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 165,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1037:8:3"
									},
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:3"
									},
									"returnParameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:0:3"
									},
									"scope": 254,
									"src": "1001:265:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										261
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "1373:25:3",
										"statements": [
											{
												"expression": {
													"id": 205,
													"name": "s_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "1386:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 204,
												"id": 206,
												"nodeType": "Return",
												"src": "1379:14:3"
											}
										]
									},
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "1270:44:3",
										"text": " @notice Get the current owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1326:5:3",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 201,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1346:8:3"
									},
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1331:2:3"
									},
									"returnParameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1364:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1364:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:9:3"
									},
									"scope": 254,
									"src": "1317:81:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "1530:140:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 215,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 211,
																"src": "1544:2:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 216,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1550:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1554:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1550:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1544:16:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207472616e7366657220746f2073656c66",
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1562:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																"typeString": "literal_string \"Cannot transfer to self\""
															},
															"value": "Cannot transfer to self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d3012c42c6ebc769df901053b800579e25c59d0072411860a37a10b5e66ce5e2",
																"typeString": "literal_string \"Cannot transfer to self\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1536:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1536:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "1536:52:3"
											},
											{
												"expression": {
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "s_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1595:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 223,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1612:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1595:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 225,
												"nodeType": "ExpressionStatement",
												"src": "1595:19:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 227,
															"name": "s_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 100,
															"src": "1653:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 228,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "1662:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "OwnershipTransferRequested",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 108,
														"src": "1626:26:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1626:39:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "EmitStatement",
												"src": "1621:44:3"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "1402:77:3",
										"text": " @notice validate, transfer ownership, and emit relevant events"
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1491:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1518:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1510:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1510:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1509:12:3"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1530:0:3"
									},
									"scope": 254,
									"src": "1482:188:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 244,
										"nodeType": "Block",
										"src": "1759:67:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 237,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1773:3:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 238,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1777:6:3",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1773:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 239,
																"name": "s_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 100,
																"src": "1787:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1773:21:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792063616c6c61626c65206279206f776e6572",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1796:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																"typeString": "literal_string \"Only callable by owner\""
															},
															"value": "Only callable by owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bfd5788f2773712a5315b58174111e9db21853c8f7d7554f565be615cce78d3",
																"typeString": "literal_string \"Only callable by owner\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1765:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1765:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "1765:56:3"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "1674:38:3",
										"text": " @notice validate access"
									},
									"id": 245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateOwnership",
									"nameLocation": "1724:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1742:2:3"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1759:0:3"
									},
									"scope": 254,
									"src": "1715:111:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1935:38:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 248,
														"name": "_validateOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "1941:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1941:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1941:20:3"
											},
											{
												"id": 251,
												"nodeType": "PlaceholderStatement",
												"src": "1967:1:3"
											}
										]
									},
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "1830:81:3",
										"text": " @notice Reverts if called by anyone other than the contract owner."
									},
									"id": 253,
									"name": "onlyOwner",
									"nameLocation": "1923:9:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:2:3"
									},
									"src": "1914:59:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 255,
							"src": "206:1769:3",
							"usedErrors": [],
							"usedEvents": [
								108,
								114
							]
						}
					],
					"src": "32:1944:3"
				},
				"id": 3
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol",
					"exportedSymbols": {
						"IOwnable": [
							270
						]
					},
					"id": 271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOwnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 270,
							"linearizedBaseContracts": [
								270
							],
							"name": "IOwnable",
							"nameLocation": "67:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "8da5cb5b",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "89:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "94:2:4"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "115:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "115:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "114:9:4"
									},
									"scope": 270,
									"src": "80:44:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f2fde38b",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnership",
									"nameLocation": "137:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "163:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "155:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "155:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "154:19:4"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:0:4"
									},
									"scope": 270,
									"src": "128:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79ba5097",
									"id": 269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "196:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:2:4"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:0:4"
									},
									"scope": 270,
									"src": "187:36:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 271,
							"src": "57:168:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:194:4"
				},
				"id": 4
			},
			"@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
					"exportedSymbols": {
						"LinkTokenInterface": [
							365
						]
					},
					"id": 366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 272,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "LinkTokenInterface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 365,
							"linearizedBaseContracts": [
								365
							],
							"name": "LinkTokenInterface",
							"nameLocation": "67:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "dd62ed3e",
									"id": 281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "99:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "117:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "109:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "109:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "132:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "124:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "124:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "108:32:5"
									},
									"returnParameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "remaining",
												"nameLocation": "172:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "164:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "164:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "163:19:5"
									},
									"scope": 365,
									"src": "90:93:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "196:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "212:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "204:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "229:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "221:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "203:32:5"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "259:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "254:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 287,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "254:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:14:5"
									},
									"scope": 365,
									"src": "187:81:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "281:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "299:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "291:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "290:15:5"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "337:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "329:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "328:17:5"
									},
									"scope": 365,
									"src": "272:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "359:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "367:2:5"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "decimalPlaces",
												"nameLocation": "399:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "393:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 299,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "393:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:21:5"
									},
									"scope": 365,
									"src": "350:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "66188463",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseApproval",
									"nameLocation": "427:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "452:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "444:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "469:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "461:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "443:37:5"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "504:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "499:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 308,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "499:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "498:14:5"
									},
									"scope": 365,
									"src": "418:95:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d73dd623",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseApproval",
									"nameLocation": "526:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "551:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "543:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "543:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "568:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "560:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "542:42:5"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:0:5"
									},
									"scope": 365,
									"src": "517:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "06fdde03",
									"id": 323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "607:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:2:5"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "tokenName",
												"nameLocation": "651:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "637:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "637:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:25:5"
									},
									"scope": 365,
									"src": "598:64:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "675:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:5"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "tokenSymbol",
												"nameLocation": "721:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "707:25:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 325,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "707:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "706:27:5"
									},
									"scope": 365,
									"src": "666:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 333,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "747:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "758:2:5"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "totalTokensIssued",
												"nameLocation": "792:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 333,
												"src": "784:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:27:5"
									},
									"scope": 365,
									"src": "738:73:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 342,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "824:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "841:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "833:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "853:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "845:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "832:27:5"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "883:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "878:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "878:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:14:5"
									},
									"scope": 365,
									"src": "815:77:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4000aea0",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "905:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "929:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "921:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "941:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "933:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "933:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "963:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "948:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 347,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "948:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "920:48:5"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "992:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "987:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "987:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "986:14:5"
									},
									"scope": 365,
									"src": "896:105:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1014:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1035:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1027:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1049:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1041:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 356,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1061:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1053:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:41:5"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "1091:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1086:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 361,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1086:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1085:14:5"
									},
									"scope": 365,
									"src": "1005:95:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 366,
							"src": "57:1045:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:1071:5"
				},
				"id": 5
			},
			"@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol",
					"exportedSymbols": {
						"LinkTokenInterface": [
							365
						],
						"VRFV2WrapperConsumerBase": [
							468
						],
						"VRFV2WrapperInterface": [
							72
						]
					},
					"id": 469,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:6"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol",
							"file": "../shared/interfaces/LinkTokenInterface.sol",
							"id": 368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 366,
							"src": "57:53:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/VRFV2WrapperInterface.sol",
							"file": "../interfaces/VRFV2WrapperInterface.sol",
							"id": 369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 469,
							"sourceUnit": 73,
							"src": "111:49:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "VRFV2WrapperConsumerBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 370,
								"nodeType": "StructuredDocumentation",
								"src": "162:1421:6",
								"text": "*******************************************************************************\n @notice Interface for contracts using VRF randomness through the VRF V2 wrapper\n ********************************************************************************\n @dev PURPOSE\n @dev Create VRF V2 requests without the need for subscription management. Rather than creating\n @dev and funding a VRF V2 subscription, a user can use this wrapper to create one off requests,\n @dev paying up front rather than at fulfillment.\n @dev Since the price is determined using the gas price of the request transaction rather than\n @dev the fulfillment transaction, the wrapper charges an additional premium on callback gas\n @dev usage, in addition to some extra overhead costs associated with the VRFV2Wrapper contract.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFV2WrapperConsumerBase. The consumer must be funded\n @dev with enough LINK to make the request, otherwise requests will revert. To request randomness,\n @dev call the 'requestRandomness' function with the desired VRF parameters. This function handles\n @dev paying for the request based on the current pricing.\n @dev Consumers must implement the fullfillRandomWords function, which will be called during\n @dev fulfillment with the randomness result."
							},
							"fullyImplemented": false,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "VRFV2WrapperConsumerBase",
							"nameLocation": "1602:24:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 373,
									"mutability": "immutable",
									"name": "LINK",
									"nameLocation": "1669:4:6",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1631:42:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_LinkTokenInterface_$365",
										"typeString": "contract LinkTokenInterface"
									},
									"typeName": {
										"id": 372,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 371,
											"name": "LinkTokenInterface",
											"nameLocations": [
												"1631:18:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 365,
											"src": "1631:18:6"
										},
										"referencedDeclaration": 365,
										"src": "1631:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LinkTokenInterface_$365",
											"typeString": "contract LinkTokenInterface"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 376,
									"mutability": "immutable",
									"name": "VRF_V2_WRAPPER",
									"nameLocation": "1718:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 468,
									"src": "1677:55:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
										"typeString": "contract VRFV2WrapperInterface"
									},
									"typeName": {
										"id": 375,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 374,
											"name": "VRFV2WrapperInterface",
											"nameLocations": [
												"1677:21:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 72,
											"src": "1677:21:6"
										},
										"referencedDeclaration": 72,
										"src": "1677:21:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
											"typeString": "contract VRFV2WrapperInterface"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 396,
										"nodeType": "Block",
										"src": "1915:102:6",
										"statements": [
											{
												"expression": {
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 384,
														"name": "LINK",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1921:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$365",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 386,
																"name": "_link",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "1947:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 385,
															"name": "LinkTokenInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "1928:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$365_$",
																"typeString": "type(contract LinkTokenInterface)"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1928:25:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_LinkTokenInterface_$365",
															"typeString": "contract LinkTokenInterface"
														}
													},
													"src": "1921:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_LinkTokenInterface_$365",
														"typeString": "contract LinkTokenInterface"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "1921:32:6"
											},
											{
												"expression": {
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 390,
														"name": "VRF_V2_WRAPPER",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "1959:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
															"typeString": "contract VRFV2WrapperInterface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 392,
																"name": "_vrfV2Wrapper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 381,
																"src": "1998:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 391,
															"name": "VRFV2WrapperInterface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "1976:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_VRFV2WrapperInterface_$72_$",
																"typeString": "type(contract VRFV2WrapperInterface)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1976:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
															"typeString": "contract VRFV2WrapperInterface"
														}
													},
													"src": "1959:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
														"typeString": "contract VRFV2WrapperInterface"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "1959:53:6"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "1737:125:6",
										"text": " @param _link is the address of LinkToken\n @param _vrfV2Wrapper is the address of the VRFV2Wrapper contract"
									},
									"id": 397,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "_link",
												"nameLocation": "1885:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1877:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "_vrfV2Wrapper",
												"nameLocation": "1900:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1892:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:38:6"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1915:0:6"
									},
									"scope": 468,
									"src": "1865:152:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "2808:245:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 414,
																	"name": "VRF_V2_WRAPPER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "2850:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
																		"typeString": "contract VRFV2WrapperInterface"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
																		"typeString": "contract VRFV2WrapperInterface"
																	}
																],
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2842:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2842:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2842:23:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 418,
																	"name": "_callbackGasLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "2910:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																],
																"expression": {
																	"id": 416,
																	"name": "VRF_V2_WRAPPER",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 376,
																	"src": "2873:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
																		"typeString": "contract VRFV2WrapperInterface"
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2888:21:6",
																"memberName": "calculateRequestPrice",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 61,
																"src": "2873:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint32_$returns$_t_uint256_$",
																	"typeString": "function (uint32) view external returns (uint256)"
																}
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2873:55:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 422,
																	"name": "_callbackGasLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "2947:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																{
																	"id": 423,
																	"name": "_requestConfirmations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 402,
																	"src": "2966:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																{
																	"id": 424,
																	"name": "_numWords",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "2989:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	{
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	},
																	{
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																],
																"expression": {
																	"id": 420,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2936:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2940:6:6",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2936:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2936:63:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 409,
															"name": "LINK",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "2814:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_LinkTokenInterface_$365",
																"typeString": "contract LinkTokenInterface"
															}
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2819:15:6",
														"memberName": "transferAndCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 353,
														"src": "2814:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (address,uint256,bytes memory) external returns (bool)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2814:191:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "2814:191:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 428,
															"name": "VRF_V2_WRAPPER",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3018:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
																"typeString": "contract VRFV2WrapperInterface"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3033:13:6",
														"memberName": "lastRequestId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 53,
														"src": "3018:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3018:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 408,
												"id": 431,
												"nodeType": "Return",
												"src": "3011:37:6"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "2021:630:6",
										"text": " @dev Requests randomness from the VRF V2 wrapper.\n @param _callbackGasLimit is the gas limit that should be used when calling the consumer's\n        fulfillRandomWords function.\n @param _requestConfirmations is the number of confirmations to wait before fulfilling the\n        request. A higher number of confirmations increases security by reducing the likelihood\n        that a chain re-org changes a published randomness outcome.\n @param _numWords is the number of random words to request.\n @return requestId is the VRF V2 request ID of the newly created randomness request."
									},
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestRandomness",
									"nameLocation": "2663:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "_callbackGasLimit",
												"nameLocation": "2693:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2686:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 399,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2686:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "_requestConfirmations",
												"nameLocation": "2723:21:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2716:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 401,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "2716:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "_numWords",
												"nameLocation": "2757:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2750:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 403,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2750:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2680:90:6"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "requestId",
												"nameLocation": "2797:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "2789:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2789:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2788:19:6"
									},
									"scope": 468,
									"src": "2654:399:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "3057:238:6",
										"text": " @notice fulfillRandomWords handles the VRF V2 wrapper response. The consuming contract must\n @notice implement it.\n @param _requestId is the VRF V2 request ID.\n @param _randomWords is the randomness result."
									},
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fulfillRandomWords",
									"nameLocation": "3307:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "3334:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3326:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "_randomWords",
												"nameLocation": "3363:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3346:29:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 437,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3346:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 438,
													"nodeType": "ArrayTypeName",
													"src": "3346:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3325:51:6"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3393:0:6"
									},
									"scope": 468,
									"src": "3298:96:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 466,
										"nodeType": "Block",
										"src": "3489:142:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 451,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3503:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3507:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3503:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 455,
																		"name": "VRF_V2_WRAPPER",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "3525:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
																			"typeString": "contract VRFV2WrapperInterface"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_VRFV2WrapperInterface_$72",
																			"typeString": "contract VRFV2WrapperInterface"
																		}
																	],
																	"id": 454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3517:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 453,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3517:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3517:23:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3503:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c792056524620563220777261707065722063616e2066756c66696c6c",
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3542:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fa95521b046a2d95983c62c6e75719a4673781a4fe8781bb969717b747c5c845",
																"typeString": "literal_string \"only VRF V2 wrapper can fulfill\""
															},
															"value": "only VRF V2 wrapper can fulfill"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fa95521b046a2d95983c62c6e75719a4673781a4fe8781bb969717b747c5c845",
																"typeString": "literal_string \"only VRF V2 wrapper can fulfill\""
															}
														],
														"id": 450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3495:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3495:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "3495:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 462,
															"name": "_requestId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "3601:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 463,
															"name": "_randomWords",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "3613:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 461,
														"name": "fulfillRandomWords",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "3582:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256[] memory)"
														}
													},
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3582:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 465,
												"nodeType": "ExpressionStatement",
												"src": "3582:44:6"
											}
										]
									},
									"functionSelector": "1fe543e3",
									"id": 467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rawFulfillRandomWords",
									"nameLocation": "3407:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "_requestId",
												"nameLocation": "3437:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "3429:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3429:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "_randomWords",
												"nameLocation": "3466:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "3449:29:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 445,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3449:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 446,
													"nodeType": "ArrayTypeName",
													"src": "3449:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3428:51:6"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3489:0:6"
									},
									"scope": 468,
									"src": "3398:233:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 469,
							"src": "1584:2049:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:3602:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							605
						],
						"IERC20Errors": [
							510
						],
						"IERC721Errors": [
							558
						]
					},
					"id": 606,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 470,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 471,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:7",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 510,
							"linearizedBaseContracts": [
								510
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 480,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "652:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "668:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "685:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:7"
									},
									"src": "621:80:7"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 485,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "889:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:7"
									},
									"src": "864:41:7"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 490,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "1102:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:7"
									},
									"src": "1075:45:7"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:7",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 499,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1509:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1526:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "1545:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:7"
									},
									"src": "1476:85:7"
								},
								{
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 504,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "1773:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:7"
									},
									"src": "1746:45:7"
								},
								{
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:7",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 509,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "2023:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:7"
									},
									"src": "1997:43:7"
								}
							],
							"scope": 606,
							"src": "278:1764:7",
							"usedErrors": [
								480,
								485,
								490,
								499,
								504,
								509
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:7",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 558,
							"linearizedBaseContracts": [
								558
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:7",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 516,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 516,
												"src": "2465:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:7"
									},
									"src": "2440:40:7"
								},
								{
									"documentation": {
										"id": 517,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:7",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 521,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 521,
												"src": "2652:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:7"
									},
									"src": "2623:46:7"
								},
								{
									"documentation": {
										"id": 522,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:7",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 530,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2996:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3012:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3029:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:7"
									},
									"src": "2969:75:7"
								},
								{
									"documentation": {
										"id": 531,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 535,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 535,
												"src": "3233:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:7"
									},
									"src": "3207:42:7"
								},
								{
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 540,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "3447:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:7"
									},
									"src": "3419:46:7"
								},
								{
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 547,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3756:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 547,
												"src": "3774:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:7"
									},
									"src": "3723:68:7"
								},
								{
									"documentation": {
										"id": 548,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 552,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "4004:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:7"
									},
									"src": "3976:46:7"
								},
								{
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 557,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "4258:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:7"
									},
									"src": "4230:46:7"
								}
							],
							"scope": 606,
							"src": "2186:2092:7",
							"usedErrors": [
								516,
								521,
								530,
								535,
								540,
								547,
								552,
								557
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 559,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:7",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 605,
							"linearizedBaseContracts": [
								605
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 570,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4854:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4870:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4887:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "4903:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:7"
									},
									"src": "4821:99:7"
								},
								{
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 575,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "5110:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:7"
									},
									"src": "5083:43:7"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 580,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 580,
												"src": "5325:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:7"
									},
									"src": "5296:47:7"
								},
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:7",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 587,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5645:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "5663:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:7"
									},
									"src": "5610:68:7"
								},
								{
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 592,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "5892:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:7"
									},
									"src": "5863:47:7"
								},
								{
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 597,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "6147:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:7"
									},
									"src": "6118:47:7"
								},
								{
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:7",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 604,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6488:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "6507:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:7"
									},
									"src": "6456:73:7"
								}
							],
							"scope": 606,
							"src": "4424:2107:7",
							"usedErrors": [
								570,
								575,
								580,
								587,
								592,
								597,
								604
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1254
						],
						"ERC20": [
							1120
						],
						"IERC20": [
							1198
						],
						"IERC20Errors": [
							510
						],
						"IERC20Metadata": [
							1224
						]
					},
					"id": 1121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 607,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 609,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1199,
							"src": "131:36:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 608,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "139:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 611,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1225,
							"src": "168:63:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 610,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1224,
										"src": "176:14:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 1255,
							"src": "232:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 612,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1254,
										"src": "240:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 615,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1121,
							"sourceUnit": 606,
							"src": "281:65:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 614,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 510,
										"src": "289:12:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 617,
										"name": "Context",
										"nameLocations": [
											"1428:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1254,
										"src": "1428:7:8"
									},
									"id": 618,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:8"
								},
								{
									"baseName": {
										"id": 619,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "1437:6:8"
									},
									"id": 620,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:8"
								},
								{
									"baseName": {
										"id": 621,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1224,
										"src": "1445:14:8"
									},
									"id": 622,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:8"
								},
								{
									"baseName": {
										"id": 623,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 510,
										"src": "1461:12:8"
									},
									"id": 624,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:8"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 616,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:8",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1120,
							"linearizedBaseContracts": [
								1120,
								510,
								1224,
								1198,
								1254
							],
							"name": "ERC20",
							"nameLocation": "1419:5:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 628,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1480:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 627,
										"keyName": "account",
										"keyNameLocation": "1496:7:8",
										"keyType": {
											"id": 625,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 626,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 634,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1540:83:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 633,
										"keyName": "account",
										"keyNameLocation": "1556:7:8",
										"keyType": {
											"id": 629,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 632,
											"keyName": "spender",
											"keyNameLocation": "1583:7:8",
											"keyType": {
												"id": 630,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 631,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 636,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1630:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 635,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 638,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1665:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 637,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 640,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1120,
									"src": "1691:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 639,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "1952:57:8",
										"statements": [
											{
												"expression": {
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 648,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 638,
														"src": "1962:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 649,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "1970:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:8"
											},
											{
												"expression": {
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 652,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "1985:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 653,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "1995:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:8"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:8",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 657,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1908:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 642,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "1929:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:8"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:8"
									},
									"scope": 1120,
									"src": "1896:113:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1211
									],
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "2134:29:8",
										"statements": [
											{
												"expression": {
													"id": 663,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 638,
													"src": "2151:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 662,
												"id": 664,
												"nodeType": "Return",
												"src": "2144:12:8"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:8"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "2119:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 660,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:8"
									},
									"scope": 1120,
									"src": "2074:89:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1217
									],
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "2338:31:8",
										"statements": [
											{
												"expression": {
													"id": 672,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 640,
													"src": "2355:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 671,
												"id": 673,
												"nodeType": "Return",
												"src": "2348:14:8"
											}
										]
									},
									"documentation": {
										"id": 667,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:8",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:8"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "2323:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:8"
									},
									"scope": 1120,
									"src": "2276:93:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "3058:26:8",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 680,
												"id": 682,
												"nodeType": "Return",
												"src": "3068:9:8"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:8",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:8"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "3051:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 678,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:8"
									},
									"scope": 1120,
									"src": "3002:82:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1147
									],
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "3205:36:8",
										"statements": [
											{
												"expression": {
													"id": 690,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 636,
													"src": "3222:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 689,
												"id": 691,
												"nodeType": "Return",
												"src": "3215:19:8"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:8",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:8"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "3196:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:8"
									},
									"scope": 1120,
									"src": "3144:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1155
									],
									"body": {
										"id": 705,
										"nodeType": "Block",
										"src": "3373:42:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 701,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3390:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 703,
													"indexExpression": {
														"id": 702,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "3400:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 700,
												"id": 704,
												"nodeType": "Return",
												"src": "3383:25:8"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:8",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 706,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "3318:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:8"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "3364:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:8"
									},
									"scope": 1120,
									"src": "3299:116:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1165
									],
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "3685:103:8",
										"statements": [
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 729,
														"src": "3695:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 716,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 720,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 718,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "3711:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 717,
															"src": "3743:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "3750:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "3754:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 721,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "3733:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 715,
												"id": 728,
												"nodeType": "Return",
												"src": "3770:11:8"
											}
										]
									},
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:8",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3628:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3640:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:8"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "3679:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:8"
									},
									"scope": 1120,
									"src": "3610:178:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1175
									],
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "3935:51:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 740,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "3952:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 742,
														"indexExpression": {
															"id": 741,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "3964:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 744,
													"indexExpression": {
														"id": 743,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "3971:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 739,
												"id": 745,
												"nodeType": "Return",
												"src": "3945:34:8"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:8",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "3865:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "3880:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:8"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "3926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:8"
									},
									"scope": 1120,
									"src": "3846:140:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1185
									],
									"body": {
										"id": 770,
										"nodeType": "Block",
										"src": "4372:107:8",
										"statements": [
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 770,
														"src": "4382:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 757,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 761,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 759,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "4398:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "4429:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "4436:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 752,
															"src": "4445:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 762,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1011,
															1071
														],
														"referencedDeclaration": 1011,
														"src": "4420:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 756,
												"id": 769,
												"nodeType": "Return",
												"src": "4461:11:8"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:8",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4310:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4327:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:8"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "4366:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 754,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:8"
									},
									"scope": 1120,
									"src": "4293:186:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1197
									],
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "5132:151:8",
										"statements": [
											{
												"assignments": [
													784
												],
												"declarations": [
													{
														"constant": false,
														"id": 784,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "5142:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 783,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 787,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 785,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "5160:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 789,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "5198:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 790,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "5204:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 791,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5213:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "5182:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 793,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 795,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "5239:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 796,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "5245:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "5249:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 794,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "5229:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 782,
												"id": 801,
												"nodeType": "Return",
												"src": "5265:11:8"
											}
										]
									},
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:8",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5061:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5075:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5087:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:8"
									},
									"returnParameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "5126:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:8"
									},
									"scope": 1120,
									"src": "5039:244:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "5725:231:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "5739:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 827,
												"nodeType": "IfStatement",
												"src": "5735:86:8",
												"trueBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "5759:62:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 820,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 819,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "5780:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "RevertStatement",
															"src": "5773:37:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 828,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "5834:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 829,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 842,
												"nodeType": "IfStatement",
												"src": "5830:86:8",
												"trueBody": {
													"id": 841,
													"nodeType": "Block",
													"src": "5852:64:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 837,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 835,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 834,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "5873:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 839,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 840,
															"nodeType": "RevertStatement",
															"src": "5866:39:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "5933:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "5939:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 846,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "5943:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 843,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "5925:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:8"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:8",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "5675:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "5689:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "5701:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:8"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:8"
									},
									"scope": 1120,
									"src": "5656:300:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "6346:1032:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "6360:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 861,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 897,
													"nodeType": "Block",
													"src": "6534:362:8",
													"statements": [
														{
															"assignments": [
																872
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 872,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:8",
																	"nodeType": "VariableDeclaration",
																	"scope": 897,
																	"src": "6548:19:8",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 871,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 876,
															"initialValue": {
																"baseExpression": {
																	"id": 873,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "6570:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 875,
																"indexExpression": {
																	"id": 874,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "6580:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:8"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 877,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "6603:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 878,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "6617:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 887,
															"nodeType": "IfStatement",
															"src": "6599:115:8",
															"trueBody": {
																"id": 886,
																"nodeType": "Block",
																"src": "6624:90:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 881,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 853,
																					"src": "6674:4:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 882,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 872,
																					"src": "6680:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 883,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 857,
																					"src": "6693:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 880,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "6649:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 884,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 885,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:8"
																	}
																]
															}
														},
														{
															"id": 896,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:8",
															"statements": [
																{
																	"expression": {
																		"id": 894,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 888,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 628,
																				"src": "6834:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 890,
																			"indexExpression": {
																				"id": 889,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 853,
																				"src": "6844:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 891,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 872,
																				"src": "6852:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 892,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 857,
																				"src": "6866:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 895,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:8"
																}
															]
														}
													]
												},
												"id": 898,
												"nodeType": "IfStatement",
												"src": "6356:540:8",
												"trueBody": {
													"id": 870,
													"nodeType": "Block",
													"src": "6380:148:8",
													"statements": [
														{
															"expression": {
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 866,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6496:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 867,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "6512:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 899,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 855,
														"src": "6910:2:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 900,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 903,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 918,
													"nodeType": "Block",
													"src": "7125:206:8",
													"statements": [
														{
															"id": 917,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:8",
															"statements": [
																{
																	"expression": {
																		"id": 915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 911,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 628,
																				"src": "7284:9:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 913,
																			"indexExpression": {
																				"id": 912,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "7294:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 914,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "7301:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 916,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:8"
																}
															]
														}
													]
												},
												"id": 919,
												"nodeType": "IfStatement",
												"src": "6906:425:8",
												"trueBody": {
													"id": 910,
													"nodeType": "Block",
													"src": "6928:191:8",
													"statements": [
														{
															"id": 909,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:8",
															"statements": [
																{
																	"expression": {
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 905,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 636,
																			"src": "7073:12:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 906,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 857,
																			"src": "7089:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 908,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:8"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 921,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "7355:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "7361:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 923,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "7365:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "7346:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 925,
												"nodeType": "EmitStatement",
												"src": "7341:30:8"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:8",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "6288:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "6302:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "6314:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:8"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:8"
									},
									"scope": 1120,
									"src": "6271:1107:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "7777:152:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 935,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "7791:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 936,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 939,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "IfStatement",
												"src": "7787:91:8",
												"trueBody": {
													"id": 948,
													"nodeType": "Block",
													"src": "7814:64:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 942,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 941,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 490,
																	"src": "7835:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 947,
															"nodeType": "RevertStatement",
															"src": "7828:39:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 951,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 955,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 930,
															"src": "7907:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "7916:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 950,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "7887:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:8"
											}
										]
									},
									"documentation": {
										"id": 928,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:8",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7736:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "7753:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:8"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:8"
									},
									"scope": 1120,
									"src": "7721:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "8303:150:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "8317:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 969,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "8313:89:8",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "8340:62:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 977,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 975,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 974,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "8361:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "8354:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 984,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "8419:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 985,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "8440:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 983,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "8411:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:8"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:8",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "8262:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "8279:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:8"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:8"
									},
									"scope": 1120,
									"src": "8247:206:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "9063:54:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1004,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "9082:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1005,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "9089:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1006,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "9098:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1003,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1011,
															1071
														],
														"referencedDeclaration": 1071,
														"src": "9073:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:8"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:8",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "9007:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "9022:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 997,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1011,
												"src": "9039:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:8"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:8"
									},
									"scope": 1120,
									"src": "8989:128:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1070,
										"nodeType": "Block",
										"src": "10047:334:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1023,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "10061:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1024,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "10057:89:8",
												"trueBody": {
													"id": 1036,
													"nodeType": "Block",
													"src": "10082:64:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1032,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1031,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1030,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1029,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "10103:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1034,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1035,
															"nodeType": "RevertStatement",
															"src": "10096:39:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1038,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1016,
														"src": "10159:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1039,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1042,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1052,
												"nodeType": "IfStatement",
												"src": "10155:90:8",
												"trueBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "10182:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1047,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1045,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1048,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1044,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 509,
																	"src": "10203:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1050,
															"nodeType": "RevertStatement",
															"src": "10196:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1053,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "10254:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1056,
															"indexExpression": {
																"id": 1054,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "10266:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1057,
														"indexExpression": {
															"id": 1055,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "10273:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1058,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "10284:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:8"
											},
											{
												"condition": {
													"id": 1061,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1020,
													"src": "10303:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1069,
												"nodeType": "IfStatement",
												"src": "10299:76:8",
												"trueBody": {
													"id": 1068,
													"nodeType": "Block",
													"src": "10314:61:8",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1063,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "10342:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1064,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "10349:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1065,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "10358:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1062,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "10333:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1067,
															"nodeType": "EmitStatement",
															"src": "10328:36:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1012,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:8",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1071,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "9967:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1016,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "9982:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1015,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1018,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "9999:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "10014:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1019,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:8"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:8"
									},
									"scope": 1120,
									"src": "9949:432:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "10752:388:8",
										"statements": [
											{
												"assignments": [
													1082
												],
												"declarations": [
													{
														"constant": false,
														"id": 1082,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1118,
														"src": "10762:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1081,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1087,
												"initialValue": {
													"arguments": [
														{
															"id": 1084,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "10799:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1085,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "10806:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1083,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 747,
														"src": "10789:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1088,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "10828:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1090,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1089,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1117,
												"nodeType": "IfStatement",
												"src": "10824:310:8",
												"trueBody": {
													"id": 1116,
													"nodeType": "Block",
													"src": "10867:267:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1095,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "10885:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1096,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1078,
																	"src": "10904:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1105,
															"nodeType": "IfStatement",
															"src": "10881:130:8",
															"trueBody": {
																"id": 1104,
																"nodeType": "Block",
																"src": "10911:100:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1099,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1076,
																					"src": "10963:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1100,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1082,
																					"src": "10972:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1101,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1078,
																					"src": "10990:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1098,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 499,
																				"src": "10936:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1103,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:8"
																	}
																]
															}
														},
														{
															"id": 1115,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1107,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1074,
																				"src": "11061:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1108,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "11068:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1109,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1082,
																					"src": "11077:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1110,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1078,
																					"src": "11096:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1106,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1011,
																				1071
																			],
																			"referencedDeclaration": 1071,
																			"src": "11052:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1114,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:8"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:8",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10688:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10703:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "10720:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1077,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:8"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:8"
									},
									"scope": 1120,
									"src": "10663:477:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1121,
							"src": "1401:9741:8",
							"usedErrors": [
								480,
								485,
								490,
								499,
								504,
								509
							],
							"usedEvents": [
								1132,
								1141
							]
						}
					],
					"src": "105:11038:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1198
						]
					},
					"id": 1199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1123,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:9",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1198,
							"linearizedBaseContracts": [
								1198
							],
							"name": "IERC20",
							"nameLocation": "213:6:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1124,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:9",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1132,
									"name": "Transfer",
									"nameLocation": "395:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "404:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "426:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "446:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:9"
									},
									"src": "389:72:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:9",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1141,
									"name": "Approval",
									"nameLocation": "626:8:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "635:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "658:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "683:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:9"
									},
									"src": "620:78:9"
								},
								{
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:9",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1147,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:9"
									},
									"returnParameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "820:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:9"
									},
									"scope": 1198,
									"src": "774:55:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:9",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "930:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:9"
									},
									"returnParameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "970:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:9"
									},
									"scope": 1198,
									"src": "911:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1156,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:9",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1165,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1221:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1233:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:9"
									},
									"returnParameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1165,
												"src": "1266:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1162,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:9"
									},
									"scope": 1198,
									"src": "1203:69:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:9",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1566:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1581:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:9"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1621:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:9"
									},
									"scope": 1198,
									"src": "1547:83:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:9",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1185,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2325:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2342:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:9"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2375:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:9"
									},
									"scope": 1198,
									"src": "2308:73:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:9",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2711:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:9",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2725:10:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2737:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:9"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2770:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:9"
									},
									"scope": 1198,
									"src": "2689:87:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1199,
							"src": "203:2575:9",
							"usedErrors": [],
							"usedEvents": [
								1132,
								1141
							]
						}
					],
					"src": "106:2673:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1198
						],
						"IERC20Metadata": [
							1224
						]
					},
					"id": 1225,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1200,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1202,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1225,
							"sourceUnit": 1199,
							"src": "151:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1201,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1198,
										"src": "159:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1204,
										"name": "IERC20",
										"nameLocations": [
											"305:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1198,
										"src": "305:6:10"
									},
									"id": 1205,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:10"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1203,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:10",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1224,
							"linearizedBaseContracts": [
								1224,
								1198
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:10",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:10"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "416:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1208,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:10"
									},
									"scope": 1224,
									"src": "377:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:10",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1217,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:10"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1217,
												"src": "539:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1214,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:10"
									},
									"scope": 1224,
									"src": "498:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1218,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:10",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:10"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "673:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1220,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:10"
									},
									"scope": 1224,
									"src": "630:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1225,
							"src": "277:405:10",
							"usedErrors": [],
							"usedEvents": [
								1132,
								1141
							]
						}
					],
					"src": "125:558:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1254
						]
					},
					"id": 1255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1226,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1227,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1254,
							"linearizedBaseContracts": [
								1254
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1232,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1231,
												"id": 1234,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1254,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1241,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1240,
												"id": 1243,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1254,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1249,
												"id": 1251,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 1254,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1255,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"contracts/presale.sol": {
				"ast": {
					"absolutePath": "contracts/presale.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						],
						"ConfirmedOwner": [
							92
						],
						"ConfirmedOwnerWithProposal": [
							254
						],
						"Context": [
							1254
						],
						"ERC20": [
							1120
						],
						"IERC20": [
							1198
						],
						"IERC20Errors": [
							510
						],
						"IERC20Metadata": [
							1224
						],
						"IOwnable": [
							270
						],
						"LinkTokenInterface": [
							365
						],
						"SVTLottery": [
							1460
						],
						"VRFV2WrapperConsumerBase": [
							468
						],
						"VRFV2WrapperInterface": [
							72
						]
					},
					"id": 1461,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".23"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1257,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1461,
							"sourceUnit": 1121,
							"src": "63:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1258,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1461,
							"sourceUnit": 46,
							"src": "120:76:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol",
							"file": "@chainlink/contracts/src/v0.8/vrf/VRFV2WrapperConsumerBase.sol",
							"id": 1259,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1461,
							"sourceUnit": 469,
							"src": "198:72:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
							"file": "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
							"id": 1260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1461,
							"sourceUnit": 93,
							"src": "272:72:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1261,
										"name": "ConfirmedOwner",
										"nameLocations": [
											"371:14:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 92,
										"src": "371:14:12"
									},
									"id": 1262,
									"nodeType": "InheritanceSpecifier",
									"src": "371:14:12"
								}
							],
							"canonicalName": "SVTLottery",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1460,
							"linearizedBaseContracts": [
								1460,
								92,
								254,
								270
							],
							"name": "SVTLottery",
							"nameLocation": "357:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1267,
									"mutability": "mutable",
									"name": "tenEighteen",
									"nameLocation": "409:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "393:36:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1263,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "393:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 1266,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1264,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "423:2:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3138",
											"id": 1265,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "427:2:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "423:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1272,
									"mutability": "mutable",
									"name": "tenEight",
									"nameLocation": "452:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "436:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1268,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "436:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										},
										"id": 1271,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1269,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "463:2:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "38",
											"id": 1270,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "467:1:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_8_by_1",
												"typeString": "int_const 8"
											},
											"value": "8"
										},
										"src": "463:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1277,
									"mutability": "mutable",
									"name": "tenTen",
									"nameLocation": "491:6:12",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "475:31:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1273,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "475:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										},
										"id": 1276,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 1274,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "500:2:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3130",
											"id": 1275,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "504:2:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"src": "500:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000_by_1",
											"typeString": "int_const 10000000000"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1280,
									"mutability": "mutable",
									"name": "hundredPercent",
									"nameLocation": "527:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "513:34:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1278,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "513:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 1279,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "544:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "1ad46a5f",
									"id": 1283,
									"mutability": "mutable",
									"name": "dollarAmountOfSLT",
									"nameLocation": "568:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "554:61:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1281,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "554:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "3120534c54203d2024302e303220666f722050726573616c65",
										"id": 1282,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "588:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_39b504063459218922748188b9b4a36cf45e6360d03e3cc6c2b9e500079fc96b",
											"typeString": "literal_string \"1 SLT = $0.02 for Presale\""
										},
										"value": "1 SLT = $0.02 for Presale"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aaf836ff",
									"id": 1286,
									"mutability": "mutable",
									"name": "SLTAddress",
									"nameLocation": "639:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "624:70:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1284,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "624:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836343763333332303531363639326338333636666465326230386263364433303435383463303230",
										"id": 1285,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "652:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x647c3320516692c8366fde2b08bc6D304584c020"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1292,
									"mutability": "mutable",
									"name": "SLT",
									"nameLocation": "716:3:12",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "701:39:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1198",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1288,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1287,
											"name": "IERC20",
											"nameLocations": [
												"701:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1198,
											"src": "701:6:12"
										},
										"referencedDeclaration": 1198,
										"src": "701:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1198",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1290,
												"name": "SLTAddress",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1286,
												"src": "729:10:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1289,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1198,
											"src": "722:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$1198_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 1291,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "722:18:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1198",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1295,
									"mutability": "mutable",
									"name": "priceFeedData",
									"nameLocation": "769:13:12",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "753:74:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1293,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "753:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864333065323130316139376463624165424342433034463134433366363234453637413335313635",
										"id": 1294,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "785:42:12",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xd30e2101a97dcbAeBCBC04F14C3f624E67A35165"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1301,
									"mutability": "mutable",
									"name": "priceFeed",
									"nameLocation": "909:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 1460,
									"src": "879:78:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1297,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1296,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"879:21:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "879:21:12"
										},
										"referencedDeclaration": 45,
										"src": "879:21:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1299,
												"name": "priceFeedData",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1295,
												"src": "943:13:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1298,
											"name": "AggregatorV3Interface",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 45,
											"src": "921:21:12",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
												"typeString": "type(contract AggregatorV3Interface)"
											}
										},
										"id": 1300,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "921:36:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "1027:117:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1310,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1068:4:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SVTLottery_$1460",
																					"typeString": "contract SVTLottery"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SVTLottery_$1460",
																					"typeString": "contract SVTLottery"
																				}
																			],
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1060:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1308,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1060:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1060:13:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1306,
																		"name": "SLT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1292,
																		"src": "1046:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1198",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1307,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1050:9:12",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1155,
																	"src": "1046:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1046:28:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1313,
																"name": "_amountRequired",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "1078:15:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1046:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820534c5420696e20636f6e7472616374",
															"id": 1315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1095:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_21d33f33cfe75f06dc8b1223e93cee3ce28d50b80ef5a7c7aedf7415bf9c3f79",
																"typeString": "literal_string \"Not enough SLT in contract\""
															},
															"value": "Not enough SLT in contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_21d33f33cfe75f06dc8b1223e93cee3ce28d50b80ef5a7c7aedf7415bf9c3f79",
																"typeString": "literal_string \"Not enough SLT in contract\""
															}
														],
														"id": 1305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1038:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1038:86:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1317,
												"nodeType": "ExpressionStatement",
												"src": "1038:86:12"
											},
											{
												"id": 1318,
												"nodeType": "PlaceholderStatement",
												"src": "1135:1:12"
											}
										]
									},
									"id": 1320,
									"name": "sufficientTokensInContract",
									"nameLocation": "975:26:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "_amountRequired",
												"nameLocation": "1010:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "1002:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1001:25:12"
									},
									"src": "966:178:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "1203:2:12",
										"statements": []
									},
									"id": 1328,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1323,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1186:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1190:6:12",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1186:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1325,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1322,
												"name": "ConfirmedOwner",
												"nameLocations": [
													"1171:14:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 92,
												"src": "1171:14:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1171:26:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1163:2:12"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1203:0:12"
									},
									"scope": 1460,
									"src": "1152:53:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "1299:146:12",
										"statements": [
											{
												"assignments": [
													null,
													1334,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "1319:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "1312:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1333,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "1312:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1338,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1335,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "1331:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1341:15:12",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1331:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1331:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1310:48:12"
											},
											{
												"assignments": [
													1340
												],
												"declarations": [
													{
														"constant": false,
														"id": 1340,
														"mutability": "mutable",
														"name": "ETHPrice",
														"nameLocation": "1377:8:12",
														"nodeType": "VariableDeclaration",
														"scope": 1350,
														"src": "1369:16:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1339,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1369:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1347,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1343,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "1396:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1388:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1341,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1388:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1388:14:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1345,
														"name": "tenTen",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "1405:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1388:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1369:42:12"
											},
											{
												"expression": {
													"id": 1348,
													"name": "ETHPrice",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1340,
													"src": "1429:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1332,
												"id": 1349,
												"nodeType": "Return",
												"src": "1422:15:12"
											}
										]
									},
									"functionSelector": "3d900d9e",
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkETHPrice",
									"nameLocation": "1222:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1235:2:12"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1351,
												"src": "1285:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:9:12"
									},
									"scope": 1460,
									"src": "1213:232:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "1559:175:12",
										"statements": [
											{
												"assignments": [
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "currentEthPrice",
														"nameLocation": "1578:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "1570:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1358,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1570:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1360,
														"name": "checkETHPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "1596:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1596:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1570:41:12"
											},
											{
												"assignments": [
													1364
												],
												"declarations": [
													{
														"constant": false,
														"id": 1364,
														"mutability": "mutable",
														"name": "dollarEquivalent",
														"nameLocation": "1630:16:12",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "1622:24:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1622:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1373,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1365,
																	"name": "ethAmountInWei",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "1650:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1366,
																	"name": "currentEthPrice",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "1667:15:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1650:32:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1368,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1649:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 1369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1686:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"hexValue": "3138",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1690:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "1686:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"src": "1649:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1622:70:12"
											},
											{
												"expression": {
													"id": 1374,
													"name": "dollarEquivalent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1364,
													"src": "1710:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1357,
												"id": 1375,
												"nodeType": "Return",
												"src": "1703:23:12"
											}
										]
									},
									"functionSelector": "0041e550",
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertEthToDollar",
									"nameLocation": "1462:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "ethAmountInWei",
												"nameLocation": "1489:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1481:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1481:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:24:12"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "1544:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:9:12"
									},
									"scope": 1460,
									"src": "1453:281:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "1854:196:12",
										"statements": [
											{
												"assignments": [
													1385
												],
												"declarations": [
													{
														"constant": false,
														"id": 1385,
														"mutability": "mutable",
														"name": "currentETHPrice",
														"nameLocation": "1873:15:12",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "1865:23:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1384,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1865:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1388,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1386,
														"name": "checkETHPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "1891:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1891:15:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1865:41:12"
											},
											{
												"assignments": [
													1390
												],
												"declarations": [
													{
														"constant": false,
														"id": 1390,
														"mutability": "mutable",
														"name": "ETHEquivalent",
														"nameLocation": "1925:13:12",
														"nodeType": "VariableDeclaration",
														"scope": 1406,
														"src": "1917:21:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1917:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1403,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1391,
																				"name": "dollarAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1379,
																				"src": "1943:12:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1392,
																				"name": "tenEighteen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1267,
																				"src": "1958:11:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1943:26:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1394,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1942:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1397,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1395,
																				"name": "currentETHPrice",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1385,
																				"src": "1974:15:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1396,
																				"name": "tenTen",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1277,
																				"src": "1992:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1974:24:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1398,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1973:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1942:57:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1400,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1941:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1401,
														"name": "tenEight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "2003:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1941:70:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1917:94:12"
											},
											{
												"expression": {
													"id": 1404,
													"name": "ETHEquivalent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1390,
													"src": "2029:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1383,
												"id": 1405,
												"nodeType": "Return",
												"src": "2022:20:12"
											}
										]
									},
									"functionSelector": "04338841",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertDollarToETH",
									"nameLocation": "1751:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "dollarAmount",
												"nameLocation": "1778:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1770:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1770:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:22:12"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "1839:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:9:12"
									},
									"scope": 1460,
									"src": "1742:308:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1425,
										"nodeType": "Block",
										"src": "2112:70:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1420,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2160:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SVTLottery_$1460",
																			"typeString": "contract SVTLottery"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SVTLottery_$1460",
																			"typeString": "contract SVTLottery"
																		}
																	],
																	"id": 1419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2152:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1418,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2152:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2152:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2166:7:12",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "2152:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1414,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2131:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2135:6:12",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2131:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2123:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1412,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2123:8:12",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2123:19:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2143:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "2123:28:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1424,
												"nodeType": "ExpressionStatement",
												"src": "2123:51:12"
											}
										]
									},
									"functionSelector": "3ccfd60b",
									"id": 1426,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1410,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1409,
												"name": "onlyOwner",
												"nameLocations": [
													"2097:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 253,
												"src": "2097:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2097:9:12"
										}
									],
									"name": "withdraw",
									"nameLocation": "2067:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2075:2:12"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2112:0:12"
									},
									"scope": 1460,
									"src": "2058:124:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1458,
										"nodeType": "Block",
										"src": "2353:189:12",
										"statements": [
											{
												"expression": {
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1433,
														"name": "dollarEquiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1431,
														"src": "2364:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 1435,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2397:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2401:5:12",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2397:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1434,
															"name": "convertEthToDollar",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1377,
															"src": "2378:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2378:29:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2364:43:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1439,
												"nodeType": "ExpressionStatement",
												"src": "2364:43:12"
											},
											{
												"expression": {
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1440,
														"name": "SLTtoSend",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1429,
														"src": "2418:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1441,
															"name": "dollarEquiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2430:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "3530",
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2444:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_50_by_1",
																"typeString": "int_const 50"
															},
															"value": "50"
														},
														"src": "2430:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2418:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "2418:28:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1449,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2470:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1450,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2474:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2470:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1451,
															"name": "SLTtoSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "2482:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1446,
															"name": "SLT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "2457:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1198",
																"typeString": "contract IERC20"
															}
														},
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2461:8:12",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1165,
														"src": "2457:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2457:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "2457:35:12"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1454,
															"name": "SLTtoSend",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "2511:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1455,
															"name": "dollarEquiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "2522:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1456,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2510:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1432,
												"id": 1457,
												"nodeType": "Return",
												"src": "2503:31:12"
											}
										]
									},
									"functionSelector": "a4821719",
									"id": 1459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyToken",
									"nameLocation": "2257:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2265:2:12"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "SLTtoSend",
												"nameLocation": "2316:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "2308:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "dollarEquiv",
												"nameLocation": "2335:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "2327:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2307:40:12"
									},
									"scope": 1460,
									"src": "2248:294:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1461,
							"src": "348:2203:12",
							"usedErrors": [],
							"usedEvents": [
								108,
								114
							]
						}
					],
					"src": "35:2516:12"
				},
				"id": 12
			}
		}
	}
}